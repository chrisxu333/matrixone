// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const VALUES = 57388
const NEXT = 57389
const VALUE = 57390
const SHARE = 57391
const MODE = 57392
const SQL_NO_CACHE = 57393
const SQL_CACHE = 57394
const JOIN = 57395
const STRAIGHT_JOIN = 57396
const LEFT = 57397
const RIGHT = 57398
const INNER = 57399
const OUTER = 57400
const CROSS = 57401
const NATURAL = 57402
const USE = 57403
const FORCE = 57404
const LOWER_THAN_ON = 57405
const ON = 57406
const USING = 57407
const SUBQUERY_AS_EXPR = 57408
const LOWER_THAN_STRING = 57409
const ID = 57410
const AT_ID = 57411
const AT_AT_ID = 57412
const STRING = 57413
const VALUE_ARG = 57414
const LIST_ARG = 57415
const COMMENT = 57416
const COMMENT_KEYWORD = 57417
const INTEGRAL = 57418
const HEX = 57419
const BIT_LITERAL = 57420
const FLOAT = 57421
const HEXNUM = 57422
const NULL = 57423
const TRUE = 57424
const FALSE = 57425
const LOWER_THAN_CHARSET = 57426
const CHARSET = 57427
const UNIQUE = 57428
const KEY = 57429
const OR = 57430
const PIPE_CONCAT = 57431
const XOR = 57432
const AND = 57433
const NOT = 57434
const BETWEEN = 57435
const CASE = 57436
const WHEN = 57437
const THEN = 57438
const ELSE = 57439
const END = 57440
const LOWER_THAN_EQ = 57441
const LE = 57442
const GE = 57443
const NE = 57444
const NULL_SAFE_EQUAL = 57445
const IS = 57446
const LIKE = 57447
const REGEXP = 57448
const IN = 57449
const ASSIGNMENT = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_BINARY = 57458
const INTERVAL = 57459
const BEGIN = 57460
const START = 57461
const TRANSACTION = 57462
const COMMIT = 57463
const ROLLBACK = 57464
const WORK = 57465
const CONSISTENT = 57466
const SNAPSHOT = 57467
const CHAIN = 57468
const NO = 57469
const RELEASE = 57470
const PRIORITY = 57471
const QUICK = 57472
const BIT = 57473
const TINYINT = 57474
const SMALLINT = 57475
const MEDIUMINT = 57476
const INT = 57477
const INTEGER = 57478
const BIGINT = 57479
const INTNUM = 57480
const REAL = 57481
const DOUBLE = 57482
const FLOAT_TYPE = 57483
const DECIMAL = 57484
const NUMERIC = 57485
const DECIMAL_VALUE = 57486
const TIME = 57487
const TIMESTAMP = 57488
const DATETIME = 57489
const YEAR = 57490
const CHAR = 57491
const VARCHAR = 57492
const BOOL = 57493
const CHARACTER = 57494
const VARBINARY = 57495
const NCHAR = 57496
const TEXT = 57497
const TINYTEXT = 57498
const MEDIUMTEXT = 57499
const LONGTEXT = 57500
const BLOB = 57501
const TINYBLOB = 57502
const MEDIUMBLOB = 57503
const LONGBLOB = 57504
const JSON = 57505
const ENUM = 57506
const UUID = 57507
const GEOMETRY = 57508
const POINT = 57509
const LINESTRING = 57510
const POLYGON = 57511
const GEOMETRYCOLLECTION = 57512
const MULTIPOINT = 57513
const MULTILINESTRING = 57514
const MULTIPOLYGON = 57515
const INT1 = 57516
const INT2 = 57517
const INT3 = 57518
const INT4 = 57519
const INT8 = 57520
const SQL_SMALL_RESULT = 57521
const SQL_BIG_RESULT = 57522
const SQL_BUFFER_RESULT = 57523
const LOW_PRIORITY = 57524
const HIGH_PRIORITY = 57525
const DELAYED = 57526
const CREATE = 57527
const ALTER = 57528
const DROP = 57529
const RENAME = 57530
const ANALYZE = 57531
const ADD = 57532
const RETURNS = 57533
const SCHEMA = 57534
const TABLE = 57535
const INDEX = 57536
const VIEW = 57537
const TO = 57538
const IGNORE = 57539
const IF = 57540
const PRIMARY = 57541
const COLUMN = 57542
const CONSTRAINT = 57543
const SPATIAL = 57544
const FULLTEXT = 57545
const FOREIGN = 57546
const KEY_BLOCK_SIZE = 57547
const SHOW = 57548
const DESCRIBE = 57549
const EXPLAIN = 57550
const DATE = 57551
const ESCAPE = 57552
const REPAIR = 57553
const OPTIMIZE = 57554
const TRUNCATE = 57555
const MAXVALUE = 57556
const PARTITION = 57557
const REORGANIZE = 57558
const LESS = 57559
const THAN = 57560
const PROCEDURE = 57561
const TRIGGER = 57562
const STATUS = 57563
const VARIABLES = 57564
const ROLE = 57565
const PROXY = 57566
const AVG_ROW_LENGTH = 57567
const STORAGE = 57568
const DISK = 57569
const MEMORY = 57570
const CHECKSUM = 57571
const COMPRESSION = 57572
const DATA = 57573
const DIRECTORY = 57574
const DELAY_KEY_WRITE = 57575
const ENCRYPTION = 57576
const ENGINE = 57577
const MAX_ROWS = 57578
const MIN_ROWS = 57579
const PACK_KEYS = 57580
const ROW_FORMAT = 57581
const STATS_AUTO_RECALC = 57582
const STATS_PERSISTENT = 57583
const STATS_SAMPLE_PAGES = 57584
const DYNAMIC = 57585
const COMPRESSED = 57586
const REDUNDANT = 57587
const COMPACT = 57588
const FIXED = 57589
const COLUMN_FORMAT = 57590
const AUTO_RANDOM = 57591
const RESTRICT = 57592
const CASCADE = 57593
const ACTION = 57594
const PARTIAL = 57595
const SIMPLE = 57596
const CHECK = 57597
const ENFORCED = 57598
const RANGE = 57599
const LIST = 57600
const ALGORITHM = 57601
const LINEAR = 57602
const PARTITIONS = 57603
const SUBPARTITION = 57604
const SUBPARTITIONS = 57605
const TYPE = 57606
const ANY = 57607
const SOME = 57608
const EXTERNAL = 57609
const LOCALFILE = 57610
const URL = 57611
const PREPARE = 57612
const DEALLOCATE = 57613
const PROPERTIES = 57614
const PARSER = 57615
const VISIBLE = 57616
const INVISIBLE = 57617
const BTREE = 57618
const HASH = 57619
const RTREE = 57620
const BSI = 57621
const ZONEMAP = 57622
const LEADING = 57623
const BOTH = 57624
const TRAILING = 57625
const UNKNOWN = 57626
const EXPIRE = 57627
const ACCOUNT = 57628
const UNLOCK = 57629
const DAY = 57630
const NEVER = 57631
const PUMP = 57632
const SECOND = 57633
const ASCII = 57634
const COALESCE = 57635
const COLLATION = 57636
const HOUR = 57637
const MICROSECOND = 57638
const MINUTE = 57639
const MONTH = 57640
const QUARTER = 57641
const REPEAT = 57642
const REVERSE = 57643
const ROW_COUNT = 57644
const WEEK = 57645
const REVOKE = 57646
const FUNCTION = 57647
const PRIVILEGES = 57648
const TABLESPACE = 57649
const EXECUTE = 57650
const SUPER = 57651
const GRANT = 57652
const OPTION = 57653
const REFERENCES = 57654
const REPLICATION = 57655
const SLAVE = 57656
const CLIENT = 57657
const USAGE = 57658
const RELOAD = 57659
const FILE = 57660
const TEMPORARY = 57661
const ROUTINE = 57662
const EVENT = 57663
const SHUTDOWN = 57664
const NULLX = 57665
const AUTO_INCREMENT = 57666
const APPROXNUM = 57667
const SIGNED = 57668
const UNSIGNED = 57669
const ZEROFILL = 57670
const ENGINES = 57671
const LOW_CARDINALITY = 57672
const ADMIN_NAME = 57673
const RANDOM = 57674
const SUSPEND = 57675
const ATTRIBUTE = 57676
const HISTORY = 57677
const REUSE = 57678
const CURRENT = 57679
const OPTIONAL = 57680
const FAILED_LOGIN_ATTEMPTS = 57681
const PASSWORD_LOCK_TIME = 57682
const UNBOUNDED = 57683
const SECONDARY = 57684
const USER = 57685
const IDENTIFIED = 57686
const CIPHER = 57687
const ISSUER = 57688
const X509 = 57689
const SUBJECT = 57690
const SAN = 57691
const REQUIRE = 57692
const SSL = 57693
const NONE = 57694
const PASSWORD = 57695
const MAX_QUERIES_PER_HOUR = 57696
const MAX_UPDATES_PER_HOUR = 57697
const MAX_CONNECTIONS_PER_HOUR = 57698
const MAX_USER_CONNECTIONS = 57699
const FORMAT = 57700
const VERBOSE = 57701
const CONNECTION = 57702
const TRIGGERS = 57703
const PROFILES = 57704
const LOAD = 57705
const INFILE = 57706
const TERMINATED = 57707
const OPTIONALLY = 57708
const ENCLOSED = 57709
const ESCAPED = 57710
const STARTING = 57711
const LINES = 57712
const ROWS = 57713
const IMPORT = 57714
const FROM_JSONLINE = 57715
const MODUMP = 57716
const DATABASES = 57717
const TABLES = 57718
const EXTENDED = 57719
const FULL = 57720
const PROCESSLIST = 57721
const FIELDS = 57722
const COLUMNS = 57723
const OPEN = 57724
const ERRORS = 57725
const WARNINGS = 57726
const INDEXES = 57727
const SCHEMAS = 57728
const NAMES = 57729
const GLOBAL = 57730
const SESSION = 57731
const ISOLATION = 57732
const LEVEL = 57733
const READ = 57734
const WRITE = 57735
const ONLY = 57736
const REPEATABLE = 57737
const COMMITTED = 57738
const UNCOMMITTED = 57739
const SERIALIZABLE = 57740
const LOCAL = 57741
const EVENTS = 57742
const PLUGINS = 57743
const CURRENT_TIMESTAMP = 57744
const DATABASE = 57745
const CURRENT_TIME = 57746
const LOCALTIME = 57747
const LOCALTIMESTAMP = 57748
const UTC_DATE = 57749
const UTC_TIME = 57750
const UTC_TIMESTAMP = 57751
const REPLACE = 57752
const CONVERT = 57753
const SEPARATOR = 57754
const TIMESTAMPDIFF = 57755
const CURRENT_DATE = 57756
const CURRENT_USER = 57757
const CURRENT_ROLE = 57758
const SECOND_MICROSECOND = 57759
const MINUTE_MICROSECOND = 57760
const MINUTE_SECOND = 57761
const HOUR_MICROSECOND = 57762
const HOUR_SECOND = 57763
const HOUR_MINUTE = 57764
const DAY_MICROSECOND = 57765
const DAY_SECOND = 57766
const DAY_MINUTE = 57767
const DAY_HOUR = 57768
const YEAR_MONTH = 57769
const SQL_TSI_HOUR = 57770
const SQL_TSI_DAY = 57771
const SQL_TSI_WEEK = 57772
const SQL_TSI_MONTH = 57773
const SQL_TSI_QUARTER = 57774
const SQL_TSI_YEAR = 57775
const SQL_TSI_SECOND = 57776
const SQL_TSI_MINUTE = 57777
const RECURSIVE = 57778
const CONFIG = 57779
const DRAINER = 57780
const MATCH = 57781
const AGAINST = 57782
const BOOLEAN = 57783
const LANGUAGE = 57784
const WITH = 57785
const QUERY = 57786
const EXPANSION = 57787
const ADDDATE = 57788
const BIT_AND = 57789
const BIT_OR = 57790
const BIT_XOR = 57791
const CAST = 57792
const COUNT = 57793
const APPROX_COUNT_DISTINCT = 57794
const APPROX_PERCENTILE = 57795
const CURDATE = 57796
const CURTIME = 57797
const DATE_ADD = 57798
const DATE_SUB = 57799
const EXTRACT = 57800
const GROUP_CONCAT = 57801
const MAX = 57802
const MID = 57803
const MIN = 57804
const NOW = 57805
const POSITION = 57806
const SESSION_USER = 57807
const STD = 57808
const STDDEV = 57809
const STDDEV_POP = 57810
const STDDEV_SAMP = 57811
const SUBDATE = 57812
const SUBSTR = 57813
const SUBSTRING = 57814
const SUM = 57815
const SYSDATE = 57816
const SYSTEM_USER = 57817
const TRANSLATE = 57818
const TRIM = 57819
const VARIANCE = 57820
const VAR_POP = 57821
const VAR_SAMP = 57822
const AVG = 57823
const JSON_EXTRACT = 57824
const ARROW = 57825
const UNNEST = 57826
const GENERATE_SERIES = 57827
const ROW = 57828
const OUTFILE = 57829
const HEADER = 57830
const MAX_FILE_SIZE = 57831
const FORCE_QUOTE = 57832
const UNUSED = 57833
const BINDINGS = 57834
const DO = 57835
const DECLARE = 57836

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"FROM_JSONLINE",
	"MODUMP",
	"DATABASES",
	"TABLES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"JSON_EXTRACT",
	"ARROW",
	"UNNEST",
	"GENERATE_SERIES",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"';'",
	"'@'",
	"'{'",
	"'}'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:8087

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 80,
	21, 494,
	-2, 475,
	-1, 86,
	211, 694,
	-2, 738,
	-1, 103,
	42, 334,
	211, 334,
	238, 341,
	239, 341,
	402, 334,
	-2, 362,
	-1, 462,
	67, 1084,
	-2, 1585,
	-1, 463,
	67, 1102,
	-2, 1556,
	-1, 468,
	67, 1103,
	-2, 1584,
	-1, 489,
	67, 1017,
	-2, 1633,
	-1, 490,
	67, 1018,
	-2, 1632,
	-1, 491,
	67, 1595,
	-2, 1617,
	-1, 492,
	67, 1596,
	-2, 1618,
	-1, 493,
	67, 1597,
	-2, 1624,
	-1, 494,
	67, 1598,
	-2, 1607,
	-1, 495,
	67, 1599,
	-2, 1615,
	-1, 496,
	67, 1600,
	-2, 1625,
	-1, 497,
	67, 1601,
	-2, 1626,
	-1, 498,
	67, 1602,
	-2, 1631,
	-1, 499,
	67, 1603,
	-2, 1636,
	-1, 500,
	67, 1604,
	-2, 1637,
	-1, 504,
	67, 1081,
	-2, 1437,
	-1, 511,
	67, 1090,
	-2, 1463,
	-1, 515,
	67, 1094,
	-2, 1502,
	-1, 516,
	67, 1095,
	-2, 1580,
	-1, 524,
	67, 1105,
	-2, 1565,
	-1, 526,
	67, 1107,
	-2, 1575,
	-1, 538,
	67, 997,
	-2, 1627,
	-1, 539,
	67, 998,
	-2, 1628,
	-1, 540,
	67, 999,
	-2, 1629,
	-1, 547,
	21, 495,
	-2, 458,
	-1, 590,
	397, 362,
	398, 362,
	-2, 335,
	-1, 632,
	103, 1437,
	114, 1437,
	133, 1437,
	-2, 1242,
	-1, 669,
	21, 495,
	-2, 458,
	-1, 767,
	21, 494,
	-2, 925,
	-1, 1071,
	67, 1150,
	-2, 1582,
	-1, 1072,
	67, 1151,
	-2, 1583,
	-1, 1227,
	1, 720,
	68, 720,
	512, 720,
	-2, 727,
	-1, 1343,
	133, 1252,
	-2, 1250,
	-1, 1345,
	133, 628,
	-2, 1247,
	-1, 1346,
	133, 629,
	-2, 1248,
	-1, 1639,
	1, 721,
	68, 721,
	512, 721,
	-2, 727,
	-1, 1856,
	65, 406,
	134, 406,
	-2, 830,
	-1, 2059,
	6, 506,
	7, 506,
	8, 506,
	9, 506,
	19, 506,
	21, 506,
	68, 506,
	-2, 585,
	-1, 2102,
	87, 727,
	129, 727,
	166, 727,
	169, 727,
	-2, 778,
	-1, 2104,
	272, 893,
	-2, 872,
	-1, 2134,
	65, 406,
	134, 406,
	-2, 831,
	-1, 2171,
	87, 727,
	129, 727,
	166, 727,
	169, 727,
	-2, 779,
	-1, 2199,
	272, 893,
	-2, 873,
	-1, 2605,
	68, 750,
	134, 750,
	-2, 727,
	-1, 2610,
	68, 750,
	134, 750,
	-2, 727,
	-1, 2626,
	68, 754,
	134, 754,
	-2, 727,
	-1, 2631,
	68, 755,
	134, 755,
	-2, 727,
}

const yyPrivate = 57344

const yyLast = 26636

var yyAct = [...]int{
	434, 2610, 1135, 2612, 2619, 2609, 2582, 413, 1052, 2238,
	2448, 415, 2570, 2528, 436, 2485, 1689, 2211, 2513, 2415,
	2512, 2419, 2395, 2156, 2166, 1618, 2236, 793, 2095, 1304,
	2403, 918, 1048, 2237, 1685, 1270, 121, 121, 460, 1182,
	964, 548, 121, 353, 360, 2154, 360, 2221, 358, 29,
	124, 2127, 1996, 2200, 2258, 1232, 1859, 1055, 631, 1234,
	1992, 2220, 1329, 1874, 905, 364, 1684, 1721, 2108, 1525,
	1625, 120, 120, 1997, 894, 1292, 2072, 344, 543, 407,
	2001, 1897, 1691, 2049, 2011, 1322, 370, 2007, 663, 577,
	1990, 907, 1623, 1646, 1185, 1954, 1192, 412, 1340, 1521,
	1343, 1330, 1323, 1912, 1331, 1520, 1285, 1206, 448, 80,
	79, 543, 1265, 1671, 635, 1832, 1873, 1834, 1263, 1829,
	121, 3, 357, 18, 1645, 354, 8, 1223, 1243, 1552,
	638, 39, 355, 6, 658, 356, 7, 2175, 1640, 1051,
	1214, 829, 1522, 416, 986, 1632, 1289, 1046, 343, 1629,
	1256, 80, 414, 633, 346, 665, 1245, 1244, 657, 1255,
	1532, 1099, 593, 1536, 1037, 29, 1085, 1606, 659, 349,
	680, 874, 424, 39, 1687, 1308, 1326, 1219, 1045, 623,
	1694, 1251, 408, 1222, 933, 576, 373, 956, 943, 545,
	1104, 372, 15, 9, 1105, 547, 4, 919, 624, 359,
	985, 1197, 586, 111, 114, 574, 2596, 2494, 2158, 2623,
	1539, 1529, 116, 367, 2265, 1722, 2094, 1210, 1325, 546,
	794, 637, 2229, 636, 115, 80, 35, 105, 87, 115,
	1134, 699, 115, 2476, 35, 105, 87, 1742, 656, 18,
	1526, 945, 8, 342, 110, 362, 115, 39, 115, 6,
	2356, 99, 7, 115, 115, 35, 105, 87, 115, 115,
	78, 35, 105, 87, 1125, 1929, 1004, 1750, 997, 2466,
	892, 117, 115, 1537, 733, 64, 542, 732, 643, 642,
	644, 112, 1001, 2501, 994, 1831, 112, 1273, 1274, 112,
	1922, 2499, 946, 1817, 533, 1022, 532, 534, 535, 603,
	536, 537, 714, 1003, 715, 996, 915, 1247, 641, 1054,
	112, 112, 930, 731, 931, 112, 112, 922, 924, 925,
	921, 924, 925, 726, 2516, 2517, 2489, 2490, 991, 112,
	2256, 1981, 717, 2347, 1830, 2259, 2260, 2261, 2262, 1982,
	2350, 1983, 2267, 707, 2096, 709, 121, 673, 1056, 106,
	107, 1737, 108, 109, 683, 646, 672, 674, 1286, 1282,
	2418, 2084, 360, 566, 121, 369, 2116, 1533, 607, 2123,
	2022, 639, 1278, 710, 2234, 1033, 2327, 1837, 2475, 1630,
	1038, 671, 1042, 2012, 668, 670, 1603, 1181, 1180, 1943,
	2020, 2218, 1945, 1747, 1140, 712, 549, 728, 403, 690,
	702, 404, 729, 730, 1121, 2016, 1041, 1118, 2526, 2330,
	2231, 1120, 1117, 1119, 1123, 1124, 86, 104, 113, 1122,
	62, 769, 361, 2321, 86, 608, 113, 667, 640, 2404,
	2405, 2406, 2408, 2407, 2503, 2601, 703, 103, 98, 97,
	2017, 2018, 2620, 2536, 41, 103, 2498, 2478, 2479, 2515,
	2446, 2447, 713, 2450, 694, 2019, 2450, 705, 669, 80,
	80, 637, 2543, 636, 1845, 1846, 1847, 1848, 683, 708,
	711, 2473, 2314, 1043, 2593, 913, 1063, 1066, 1067, 2283,
	2417, 39, 39, 2282, 568, 406, 1538, 1064, 645, 405,
	2573, 1843, 1040, 704, 565, 564, 2456, 2014, 2505, 2506,
	952, 100, 101, 724, 725, 1542, 1544, 1545, 634, 951,
	2305, 692, 716, 893, 2309, 559, 917, 916, 937, 910,
	676, 677, 932, 685, 684, 2614, 2621, 767, 2583, 636,
	2271, 664, 1553, 1899, 1901, 72, 895, 368, 2345, 102,
	944, 73, 1743, 1703, 1128, 1129, 1130, 1131, 1132, 1133,
	1126, 1127, 691, 706, 898, 1530, 890, 1527, 1217, 562,
	1950, 688, 2628, 1527, 699, 1948, 1527, 900, 363, 1986,
	1956, 1955, 770, 771, 772, 773, 577, 1905, 557, 571,
	572, 573, 902, 2005, 1702, 1701, 871, 2595, 2493, 2157,
	1039, 1700, 740, 949, 74, 947, 948, 555, 774, 1276,
	1277, 768, 1275, 75, 2574, 34, 1699, 610, 611, 776,
	923, 563, 823, 924, 925, 1035, 2477, 920, 1857, 678,
	802, 924, 925, 1634, 1235, 1723, 543, 543, 543, 2579,
	780, 968, 968, 896, 897, 558, 899, 685, 684, 2504,
	1836, 36, 2555, 698, 1015, 1016, 2613, 360, 989, 989,
	2023, 1540, 2328, 1528, 2380, 1287, 1311, 2013, 879, 2416,
	1730, 696, 2230, 966, 966, 972, 914, 999, 1946, 2634,
	36, 2015, 970, 911, 88, 1580, 36, 735, 1579, 88,
	927, 928, 88, 992, 734, 697, 1900, 1020, 1235, 2235,
	804, 805, 1840, 1841, 1065, 567, 88, 1281, 88, 968,
	1005, 968, 673, 88, 88, 2006, 1839, 1751, 88, 88,
	1279, 1053, 995, 1034, 699, 604, 1002, 1633, 2310, 2311,
	1725, 1712, 88, 1543, 76, 77, 2627, 2571, 2572, 2633,
	2307, 697, 1019, 693, 2306, 735, 1029, 1858, 2624, 634,
	1018, 2602, 1681, 974, 735, 2103, 876, 343, 2597, 2586,
	1036, 614, 547, 934, 878, 934, 1612, 1851, 1073, 1074,
	1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084,
	2585, 1742, 80, 1094, 1095, 1309, 80, 2530, 2523, 2518,
	1103, 904, 938, 737, 738, 739, 736, 80, 1681, 1150,
	926, 2032, 1057, 929, 606, 735, 80, 605, 613, 1156,
	1050, 2507, 616, 615, 2625, 950, 2046, 1535, 1158, 39,
	1028, 1162, 1163, 1025, 2598, 1535, 962, 963, 39, 604,
	1024, 941, 942, 543, 959, 960, 961, 1975, 2495, 1680,
	988, 988, 550, 1031, 1824, 719, 1535, 720, 1047, 973,
	1068, 1006, 342, 2531, 2332, 2332, 984, 1712, 1011, 990,
	2471, 1526, 1617, 977, 978, 979, 980, 981, 982, 983,
	1858, 2277, 1600, 2002, 2005, 722, 2122, 1712, 1007, 699,
	2470, 1203, 1188, 1189, 2381, 2383, 2384, 2385, 2382, 1852,
	1027, 1026, 547, 1584, 1023, 2469, 1049, 1517, 903, 1044,
	1196, 2468, 2458, 1149, 2496, 1220, 1097, 968, 606, 953,
	1227, 605, 2338, 1204, 577, 2532, 2137, 1233, 1298, 2033,
	968, 649, 654, 655, 2337, 1226, 2332, 1093, 1058, 1059,
	1060, 1061, 1062, 1914, 2331, 1860, 1187, 1745, 718, 1744,
	1736, 1252, 1252, 1681, 1257, 1087, 2332, 2253, 1664, 1257,
	2251, 1576, 1220, 968, 121, 1194, 1195, 872, 1563, 1207,
	2070, 2332, 1516, 1250, 543, 1316, 968, 2332, 2459, 1008,
	1101, 1102, 723, 2068, 870, 1137, 779, 1218, 2339, 2066,
	1144, 1239, 1616, 686, 1138, 1228, 666, 752, 1220, 968,
	1650, 1303, 121, 121, 1225, 721, 2006, 1248, 1249, 1313,
	2332, 1999, 1892, 121, 2037, 2000, 2003, 1150, 1150, 1333,
	658, 1160, 1942, 2254, 1150, 1150, 2252, 1254, 1241, 1242,
	1940, 908, 1306, 1136, 1813, 1139, 735, 1305, 1305, 1811,
	1151, 1177, 1319, 2608, 935, 1345, 1262, 1809, 1305, 2069,
	1157, 1807, 1159, 1233, 659, 2067, 1224, 968, 1796, 1283,
	737, 738, 739, 736, 2568, 1756, 612, 2004, 1211, 1237,
	1740, 1734, 955, 1941, 1732, 1288, 1208, 1727, 1681, 1346,
	1212, 1236, 1205, 1215, 1649, 1613, 1302, 1337, 934, 1199,
	1240, 1202, 1587, 1762, 1586, 1534, 651, 652, 653, 569,
	1814, 1246, 1224, 1524, 1615, 1812, 1100, 1334, 1518, 1230,
	1229, 1547, 1012, 1808, 2559, 1238, 2556, 1808, 1258, 1550,
	1551, 1328, 1142, 1141, 735, 637, 1833, 636, 1328, 1296,
	1297, 735, 637, 1253, 636, 2460, 1650, 1728, 1047, 1259,
	1733, 80, 936, 1728, 1261, 1562, 1260, 2300, 2353, 579,
	1650, 1612, 954, 1284, 1523, 2047, 1949, 1731, 735, 1208,
	735, 1535, 1307, 39, 1299, 1208, 1208, 1293, 1294, 1295,
	737, 738, 739, 736, 957, 1300, 617, 1301, 1013, 755,
	756, 757, 758, 759, 752, 958, 1317, 1705, 675, 736,
	1591, 1092, 1100, 1827, 1558, 739, 736, 1338, 1221, 1339,
	1335, 1143, 1514, 1344, 1515, 609, 1090, 1091, 1089, 2317,
	604, 2316, 1168, 2112, 1561, 2107, 1918, 767, 2607, 636,
	1519, 2510, 1161, 2342, 2343, 1164, 1165, 1166, 1167, 1169,
	1170, 1171, 1172, 1173, 1174, 1175, 2195, 2589, 121, 121,
	2592, 1541, 2553, 737, 738, 739, 736, 2340, 2341, 121,
	1647, 753, 754, 755, 756, 757, 758, 759, 752, 1257,
	2391, 121, 1546, 1549, 2389, 2537, 2432, 353, 2387, 2397,
	1642, 2375, 2374, 1626, 1628, 1257, 1548, 2373, 2377, 2232,
	1557, 658, 1087, 2591, 1643, 737, 738, 739, 736, 606,
	121, 1154, 605, 1968, 1764, 2370, 1655, 2611, 2390, 2364,
	1555, 1155, 2388, 1559, 2422, 2361, 2386, 2177, 737, 738,
	739, 736, 2120, 2360, 2008, 659, 2376, 2233, 2119, 968,
	2021, 1656, 1657, 1979, 1978, 591, 737, 738, 739, 736,
	989, 1936, 121, 580, 1916, 1716, 1611, 1718, 1967, 1690,
	1610, 1690, 1609, 1569, 1605, 1604, 1570, 1009, 1574, 2615,
	2121, 1710, 660, 661, 662, 1658, 2603, 1696, 2580, 596,
	737, 738, 739, 736, 1585, 2533, 2525, 1588, 1589, 1590,
	2509, 2396, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1608,
	403, 1601, 2167, 404, 2491, 1641, 2454, 2453, 1713, 2439,
	1572, 1560, 2378, 2371, 1660, 2367, 1662, 1720, 1693, 2366,
	1692, 1619, 1620, 2365, 2329, 1635, 743, 744, 745, 746,
	747, 748, 749, 741, 1715, 1787, 2302, 2268, 1654, 2266,
	2263, 1661, 2165, 1659, 2163, 1665, 1667, 1663, 1246, 1666,
	1566, 2150, 2149, 2130, 578, 2118, 2117, 2114, 1651, 2086,
	2010, 2181, 1977, 1571, 1947, 1917, 599, 737, 738, 739,
	736, 1908, 2185, 1804, 1754, 737, 738, 739, 736, 1614,
	1706, 1707, 1708, 1607, 802, 737, 738, 739, 736, 594,
	488, 487, 2174, 2626, 1714, 2599, 2176, 2178, 2180, 1318,
	2182, 2183, 2184, 2186, 2187, 2188, 2190, 2191, 2192, 2193,
	737, 738, 739, 736, 1176, 1010, 1208, 1208, 1208, 803,
	798, 595, 600, 797, 2025, 737, 738, 739, 736, 2461,
	2429, 2326, 988, 2428, 2427, 588, 2426, 590, 603, 2196,
	2161, 2131, 587, 585, 584, 2102, 589, 2092, 601, 602,
	2091, 2079, 1771, 737, 738, 739, 736, 1738, 2320, 2071,
	597, 598, 737, 738, 739, 736, 2059, 968, 2038, 968,
	2160, 968, 1976, 1973, 2194, 1966, 673, 1958, 869, 866,
	867, 868, 1953, 1893, 1776, 1752, 1775, 1774, 1772, 1823,
	1810, 2173, 737, 738, 739, 736, 1806, 592, 1805, 1592,
	1583, 1748, 1581, 968, 1780, 751, 750, 760, 761, 753,
	754, 755, 756, 757, 758, 759, 752, 1788, 1578, 1577,
	2189, 968, 2089, 1575, 1582, 1568, 1565, 2179, 1564, 1153,
	1790, 1152, 1971, 115, 975, 966, 551, 552, 553, 554,
	1970, 2622, 2567, 1779, 737, 738, 739, 736, 1773, 550,
	2561, 2544, 2541, 966, 737, 738, 739, 736, 1969, 2539,
	795, 1789, 737, 738, 739, 736, 673, 2431, 2413, 2401,
	2398, 1766, 1803, 2393, 968, 1825, 1749, 2354, 1184, 2324,
	737, 738, 739, 736, 2323, 1856, 2322, 2319, 2313, 2298,
	112, 1862, 1760, 906, 737, 738, 739, 736, 976, 2145,
	115, 1739, 1741, 105, 87, 1870, 1047, 2143, 2125, 673,
	121, 121, 121, 121, 1746, 2113, 1193, 1186, 1875, 1757,
	1854, 673, 121, 1890, 1853, 2549, 1802, 1828, 1815, 1726,
	1875, 1826, 1704, 1698, 1697, 1648, 121, 29, 673, 1088,
	1850, 1904, 112, 1770, 968, 1216, 1759, 1903, 737, 738,
	739, 736, 121, 121, 1198, 1865, 1201, 112, 1866, 1191,
	1190, 1891, 1032, 998, 873, 1777, 1778, 821, 820, 1150,
	819, 1150, 818, 817, 1928, 816, 815, 1690, 814, 813,
	1863, 1763, 812, 968, 811, 810, 1864, 1910, 1911, 1781,
	1782, 809, 1867, 1934, 1868, 1785, 1786, 80, 1820, 808,
	807, 1842, 806, 801, 800, 799, 796, 1791, 792, 1855,
	1861, 18, 791, 1224, 8, 789, 1923, 1641, 1849, 39,
	788, 6, 787, 1930, 7, 1872, 1871, 1935, 1876, 1877,
	1878, 1879, 1869, 1887, 1889, 1208, 786, 1888, 1818, 1819,
	1215, 785, 1207, 784, 637, 783, 1894, 1927, 547, 1906,
	782, 1959, 1909, 781, 1961, 1925, 1963, 778, 777, 1944,
	701, 1931, 2050, 2051, 1915, 1801, 1653, 1637, 1919, 673,
	1939, 2547, 1926, 1924, 1921, 1932, 80, 1933, 1995, 689,
	2514, 2053, 1938, 80, 1844, 121, 2590, 737, 738, 739,
	736, 1711, 1321, 700, 673, 2056, 1951, 2055, 121, 1647,
	763, 2036, 766, 1995, 1957, 1884, 1882, 1960, 1881, 1880,
	1885, 1883, 1962, 1964, 1965, 2606, 1735, 764, 765, 762,
	2026, 751, 750, 760, 761, 753, 754, 755, 756, 757,
	758, 759, 752, 751, 750, 760, 761, 753, 754, 755,
	756, 757, 758, 759, 752, 1984, 1985, 1800, 1886, 1208,
	1677, 1678, 1799, 1729, 1208, 1780, 1822, 1987, 1642, 1673,
	1676, 1677, 1678, 1674, 2039, 1675, 1679, 2040, 2041, 737,
	738, 739, 736, 2045, 737, 738, 739, 736, 1178, 1724,
	2034, 1619, 1620, 2031, 2030, 1755, 1753, 1952, 2057, 121,
	1798, 121, 2035, 875, 118, 2058, 1989, 2044, 63, 2043,
	38, 2042, 2054, 1631, 2269, 37, 2027, 2028, 2029, 695,
	1972, 1797, 737, 738, 739, 736, 2168, 1988, 2060, 1795,
	2063, 2064, 2065, 1683, 2085, 2077, 2087, 2148, 1794, 2147,
	121, 338, 2076, 737, 738, 739, 736, 1793, 339, 2106,
	340, 737, 738, 739, 736, 341, 1231, 2482, 2080, 2083,
	737, 738, 739, 736, 940, 2081, 1792, 1142, 1141, 737,
	738, 739, 736, 2146, 2082, 2101, 1784, 939, 968, 968,
	1783, 887, 888, 121, 2134, 885, 886, 2100, 737, 738,
	739, 736, 883, 884, 881, 882, 727, 673, 737, 738,
	739, 736, 737, 738, 739, 736, 1875, 2099, 2062, 1513,
	966, 2128, 551, 552, 553, 554, 2104, 1761, 2126, 909,
	2105, 2111, 877, 2562, 2436, 550, 2110, 2152, 2434, 1150,
	550, 2109, 1690, 2109, 2358, 2355, 2352, 2139, 2351, 737,
	738, 739, 736, 2136, 2135, 1096, 2349, 80, 2132, 2250,
	2249, 2164, 2138, 2098, 673, 1668, 2172, 2097, 2222, 2224,
	2140, 2222, 2222, 1995, 2074, 2133, 880, 737, 738, 739,
	736, 2073, 1913, 2141, 1235, 1937, 673, 1567, 1673, 1676,
	1677, 1678, 1674, 2159, 1675, 1679, 2551, 2550, 2551, 687,
	2550, 2153, 2315, 2078, 1233, 1682, 2247, 912, 45, 1,
	1320, 2088, 1895, 1896, 2061, 1898, 2223, 2219, 2090, 1531,
	2115, 2162, 2024, 2009, 2197, 901, 2169, 570, 1145, 891,
	1017, 2244, 2225, 2226, 648, 2273, 750, 760, 761, 753,
	754, 755, 756, 757, 758, 759, 752, 2227, 682, 2241,
	1014, 2136, 2242, 2243, 2203, 681, 679, 1098, 450, 2245,
	1324, 2394, 2246, 2481, 2527, 2430, 2484, 1030, 968, 435,
	2344, 2301, 1980, 2565, 2255, 2346, 2257, 1816, 2213, 121,
	2155, 1920, 582, 482, 458, 790, 1000, 993, 2224, 650,
	1208, 2206, 457, 2142, 2276, 2124, 2144, 2201, 1838, 556,
	2128, 647, 2216, 2217, 583, 1602, 2093, 1179, 2202, 1200,
	1183, 2618, 2219, 2299, 2318, 2605, 2151, 2581, 2560, 2303,
	751, 750, 760, 761, 753, 754, 755, 756, 757, 758,
	759, 752, 2449, 2600, 2497, 2325, 2359, 2542, 2333, 2535,
	2445, 2270, 374, 2207, 2336, 1280, 541, 2335, 621, 2274,
	2275, 2414, 2278, 2279, 2280, 2281, 2228, 2392, 2284, 2285,
	2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295,
	2296, 2297, 2348, 375, 1652, 2474, 2400, 560, 2357, 1636,
	673, 2372, 561, 673, 673, 673, 1639, 1638, 1069, 742,
	1086, 775, 411, 673, 1556, 423, 417, 1690, 1835, 2212,
	2424, 1907, 44, 43, 42, 1312, 2402, 1341, 452, 2410,
	2411, 2412, 2409, 123, 2399, 2441, 1342, 2444, 2440, 2421,
	2264, 2486, 433, 968, 968, 432, 2420, 431, 2423, 430,
	2215, 429, 1998, 1672, 2435, 2433, 2437, 2438, 80, 1670,
	2442, 760, 761, 753, 754, 755, 756, 757, 758, 759,
	752, 1669, 2362, 2363, 121, 966, 966, 2209, 2368, 2369,
	1267, 1266, 673, 2451, 2452, 1310, 2511, 2464, 2465, 2312,
	2379, 2308, 2304, 2455, 673, 2171, 2170, 2198, 2199, 2208,
	2210, 2205, 2334, 2457, 828, 824, 826, 2463, 2467, 1305,
	827, 825, 2488, 1769, 1765, 1993, 1994, 1991, 2443, 1624,
	2472, 1622, 1621, 889, 2052, 2048, 2487, 1332, 2480, 751,
	750, 760, 761, 753, 754, 755, 756, 757, 758, 759,
	752, 2492, 1213, 2563, 1821, 1268, 1264, 2240, 544, 5,
	2500, 2502, 28, 27, 26, 14, 13, 1021, 12, 17,
	25, 24, 2508, 2218, 23, 22, 71, 70, 69, 68,
	2519, 2520, 2521, 2522, 2529, 2204, 21, 2534, 11, 67,
	66, 2214, 65, 20, 19, 60, 61, 2538, 55, 2540,
	751, 750, 760, 761, 753, 754, 755, 756, 757, 758,
	759, 752, 54, 53, 581, 52, 51, 50, 49, 59,
	2545, 2546, 2488, 2558, 2548, 58, 57, 56, 48, 47,
	673, 2552, 673, 2554, 46, 1974, 2487, 2557, 2564, 1053,
	2566, 1053, 2569, 85, 84, 83, 82, 81, 30, 31,
	32, 33, 95, 94, 2575, 96, 92, 2529, 673, 2576,
	90, 93, 91, 2584, 89, 40, 2588, 1053, 10, 16,
	2594, 2462, 2, 0, 0, 0, 0, 0, 0, 0,
	0, 2524, 751, 750, 760, 761, 753, 754, 755, 756,
	757, 758, 759, 752, 0, 2604, 0, 0, 0, 0,
	0, 0, 0, 0, 2617, 0, 2616, 0, 0, 0,
	0, 0, 0, 0, 0, 2629, 0, 0, 2631, 0,
	2630, 2632, 0, 0, 0, 2617, 1457, 1499, 0, 0,
	1446, 289, 1404, 1459, 1377, 1393, 1467, 1394, 1395, 1432,
	1356, 1414, 251, 1391, 0, 0, 0, 0, 0, 0,
	1449, 1348, 1380, 1381, 1350, 1387, 1351, 1378, 1406, 196,
	1376, 1417, 221, 1429, 1390, 1411, 1465, 0, 0, 281,
	235, 0, 0, 1409, 1451, 1412, 1437, 1403, 1433, 1364,
	1425, 1460, 1392, 0, 1430, 1461, 0, 0, 0, 0,
	660, 661, 662, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 1428, 1455, 1389, 0, 180, 1458, 1410,
	1431, 0, 0, 1349, 1426, 0, 1354, 1357, 1466, 1453,
	1384, 1385, 0, 0, 0, 0, 0, 0, 0, 2578,
	1407, 1413, 1434, 1400, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1382, 0, 1422, 0, 0, 0, 1359,
	1355, 0, 1405, 0, 0, 169, 286, 302, 178, 277,
	315, 183, 284, 174, 250, 273, 0, 1498, 171, 300,
	283, 232, 215, 216, 170, 0, 268, 194, 207, 190,
	248, 0, 299, 327, 189, 318, 1358, 310, 173, 1493,
	309, 247, 296, 301, 233, 227, 172, 298, 231, 226,
	219, 198, 0, 211, 259, 225, 260, 212, 237, 236,
	238, 1477, 1478, 1479, 1480, 1481, 1489, 1490, 0, 1494,
	1495, 1496, 1363, 0, 1383, 1435, 0, 1347, 1512, 1444,
	1452, 1402, 312, 1454, 1399, 1398, 1484, 0, 1483, 285,
	1485, 1486, 220, 1450, 1379, 1388, 328, 1386, 271, 253,
	1456, 1421, 1497, 269, 223, 297, 261, 303, 287, 311,
	265, 262, 164, 288, 192, 234, 175, 176, 188, 195,
	197, 199, 200, 243, 244, 256, 276, 290, 291, 292,
	191, 184, 270, 185, 209, 186, 165, 278, 187, 167,
	257, 295, 1482, 205, 266, 230, 168, 229, 258, 294,
	293, 319, 325, 326, 330, 0, 331, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 1491, 0,
	1492, 324, 203, 162, 307, 0, 249, 0, 1447, 1352,
	1362, 1360, 1396, 1423, 1424, 245, 323, 1439, 1443, 1440,
	1468, 274, 0, 0, 0, 0, 0, 214, 255, 1441,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1353, 0, 282, 305, 317, 334, 337, 1500, 1501,
	1502, 166, 336, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	308, 1397, 1370, 1408, 316, 1373, 1371, 1438, 1372, 1427,
	332, 239, 240, 241, 242, 206, 0, 182, 335, 264,
	1418, 1401, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1419,
	0, 1511, 1375, 329, 202, 208, 0, 210, 181, 254,
	204, 314, 217, 1445, 246, 213, 279, 218, 224, 267,
	313, 252, 272, 179, 304, 280, 228, 1758, 0, 1369,
	1374, 1368, 1415, 1416, 1462, 1463, 1464, 1436, 1361, 1448,
	0, 1365, 1367, 1366, 0, 0, 0, 0, 0, 751,
	750, 760, 761, 753, 754, 755, 756, 757, 758, 759,
	752, 1554, 0, 1442, 0, 0, 1420, 163, 0, 222,
	1469, 263, 201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 751, 750, 760, 761, 753, 754, 755,
	756, 757, 758, 759, 752, 289, 464, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 1487, 1488, 320, 321, 322, 306, 425,
	193, 1510, 0, 196, 0, 0, 221, 0, 0, 0,
	456, 0, 0, 281, 235, 0, 0, 0, 0, 512,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 449, 488, 487, 437, 446, 0,
	0, 177, 438, 0, 445, 439, 443, 442, 440, 441,
	0, 504, 0, 0, 0, 0, 0, 0, 409, 422,
	0, 426, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 419, 420, 0, 0, 0, 0, 465,
	0, 421, 0, 0, 467, 0, 447, 0, 0, 169,
	286, 302, 178, 277, 315, 183, 284, 174, 250, 273,
	0, 0, 171, 300, 283, 232, 215, 216, 170, 0,
	268, 194, 207, 190, 248, 444, 463, 468, 189, 526,
	461, 310, 173, 0, 309, 247, 296, 301, 233, 227,
	172, 298, 231, 226, 219, 198, 527, 211, 259, 225,
	260, 212, 237, 236, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 459, 0, 0, 312, 0, 0, 510,
	0, 0, 0, 285, 0, 0, 220, 0, 0, 0,
	462, 0, 271, 253, 523, 410, 0, 269, 223, 297,
	261, 303, 287, 311, 265, 262, 164, 288, 192, 234,
	175, 176, 188, 195, 197, 199, 200, 243, 244, 256,
	276, 290, 291, 292, 191, 184, 270, 185, 209, 186,
	165, 278, 187, 167, 257, 295, 0, 205, 266, 230,
	168, 229, 258, 294, 293, 319, 325, 326, 330, 0,
	331, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 1147, 1146, 1148, 324, 203, 162, 307, 508,
	249, 0, 522, 503, 505, 506, 509, 513, 514, 515,
	516, 517, 519, 521, 525, 274, 0, 0, 0, 0,
	0, 214, 255, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 305, 317,
	334, 337, 0, 0, 0, 166, 336, 0, 0, 0,
	0, 0, 0, 0, 524, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 466, 239, 240, 241, 242, 511,
	0, 182, 335, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 202, 208,
	0, 210, 181, 254, 204, 314, 217, 0, 246, 213,
	279, 218, 224, 267, 313, 252, 272, 179, 304, 280,
	228, 0, 0, 533, 507, 532, 534, 535, 531, 536,
	537, 518, 428, 0, 471, 529, 528, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 222, 0, 263, 201, 494, 475, 476,
	477, 427, 478, 473, 474, 495, 469, 491, 492, 451,
	454, 479, 140, 480, 493, 496, 497, 538, 539, 540,
	483, 498, 490, 489, 481, 470, 499, 500, 455, 453,
	484, 485, 472, 486, 0, 501, 502, 289, 464, 320,
	321, 322, 306, 0, 193, 0, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 425, 0, 0, 0, 196, 1209, 0, 221, 0,
	0, 0, 456, 0, 0, 281, 235, 0, 0, 0,
	0, 512, 520, 0, 0, 0, 0, 0, 0, 0,
	1290, 0, 0, 418, 0, 0, 449, 488, 487, 437,
	446, 0, 0, 177, 438, 0, 445, 439, 443, 442,
	440, 441, 0, 504, 0, 0, 0, 0, 0, 0,
	409, 422, 0, 426, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 419, 420, 0, 0, 0,
	0, 465, 0, 421, 0, 0, 1291, 0, 447, 0,
	0, 169, 286, 302, 178, 277, 315, 183, 284, 174,
	250, 273, 0, 0, 171, 300, 283, 232, 215, 216,
	170, 0, 268, 194, 207, 190, 248, 444, 463, 468,
	189, 526, 461, 310, 173, 0, 309, 247, 296, 301,
	233, 227, 172, 298, 231, 226, 219, 198, 527, 211,
	259, 225, 260, 212, 237, 236, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 459, 0, 0, 312, 0,
	0, 510, 0, 0, 0, 285, 0, 0, 220, 0,
	0, 0, 462, 0, 271, 253, 523, 410, 0, 269,
	223, 297, 261, 303, 287, 311, 265, 262, 164, 288,
	192, 234, 175, 176, 188, 195, 197, 199, 200, 243,
	244, 256, 276, 290, 291, 292, 191, 184, 270, 185,
	209, 186, 165, 278, 187, 167, 257, 295, 0, 205,
	266, 230, 168, 229, 258, 294, 293, 319, 325, 326,
	330, 0, 331, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 0, 0, 324, 203, 162,
	307, 508, 249, 0, 522, 503, 505, 506, 509, 513,
	514, 515, 516, 517, 519, 521, 525, 274, 0, 0,
	0, 0, 0, 214, 255, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	305, 317, 334, 337, 0, 0, 0, 166, 336, 0,
	0, 0, 0, 0, 0, 0, 524, 0, 0, 0,
	316, 0, 0, 0, 0, 0, 466, 239, 240, 241,
	242, 511, 0, 182, 335, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	202, 208, 0, 210, 181, 254, 204, 314, 217, 0,
	246, 213, 279, 218, 224, 267, 313, 252, 272, 179,
	304, 280, 228, 0, 0, 533, 507, 532, 534, 535,
	531, 536, 537, 518, 428, 0, 471, 529, 528, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 222, 0, 263, 201, 494,
	475, 476, 477, 427, 478, 473, 474, 495, 469, 491,
	492, 451, 454, 479, 140, 480, 493, 496, 497, 538,
	539, 540, 483, 498, 490, 489, 481, 470, 499, 500,
	455, 453, 484, 485, 472, 486, 0, 501, 502, 0,
	0, 320, 321, 322, 306, 0, 193, 115, 289, 464,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 425, 0, 0, 0, 196, 0, 0, 221,
	0, 0, 0, 456, 0, 0, 281, 235, 0, 0,
	0, 0, 512, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 0, 449, 488, 487,
	437, 446, 0, 0, 177, 438, 0, 445, 439, 443,
	442, 440, 441, 0, 504, 0, 0, 0, 0, 0,
	0, 409, 422, 0, 426, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 419, 420, 0, 0,
	0, 0, 465, 0, 421, 0, 0, 467, 0, 447,
	0, 0, 169, 286, 302, 178, 277, 315, 183, 284,
	174, 250, 273, 0, 0, 171, 300, 283, 232, 215,
	216, 170, 0, 268, 194, 207, 190, 248, 444, 463,
	468, 189, 526, 461, 310, 173, 0, 309, 247, 296,
	301, 233, 227, 172, 298, 231, 226, 219, 198, 527,
	211, 259, 225, 260, 212, 237, 236, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 459, 0, 0, 312,
	0, 0, 510, 0, 0, 0, 285, 0, 0, 220,
	0, 0, 0, 462, 0, 271, 253, 523, 410, 0,
	269, 223, 297, 261, 303, 287, 311, 265, 262, 164,
	288, 192, 234, 175, 176, 188, 195, 197, 199, 200,
	243, 244, 256, 276, 290, 291, 292, 191, 184, 270,
	185, 209, 186, 165, 278, 187, 167, 257, 295, 0,
	205, 266, 230, 168, 229, 258, 294, 293, 319, 325,
	326, 330, 0, 331, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 0, 0, 0, 324, 203,
	162, 307, 508, 249, 0, 522, 503, 505, 506, 509,
	513, 514, 515, 516, 517, 519, 521, 525, 274, 0,
	0, 0, 0, 0, 214, 255, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 305, 317, 334, 337, 0, 0, 0, 166, 336,
	0, 0, 0, 0, 0, 0, 0, 524, 0, 0,
	0, 316, 0, 0, 0, 0, 0, 466, 239, 240,
	241, 242, 511, 0, 182, 335, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 202, 208, 0, 210, 181, 254, 204, 314, 217,
	0, 246, 213, 279, 218, 224, 267, 313, 252, 272,
	179, 304, 280, 228, 0, 0, 533, 507, 532, 534,
	535, 531, 536, 537, 518, 428, 0, 471, 529, 528,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 222, 88, 263, 201,
	494, 475, 476, 477, 427, 478, 473, 474, 495, 469,
	491, 492, 451, 454, 479, 140, 480, 493, 496, 497,
	538, 539, 540, 483, 498, 490, 489, 481, 470, 499,
	500, 455, 453, 484, 485, 472, 486, 0, 501, 502,
	289, 464, 320, 321, 322, 306, 0, 193, 0, 0,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 425, 0, 0, 0, 196, 2577,
	0, 221, 0, 0, 0, 456, 0, 0, 281, 235,
	0, 0, 0, 0, 512, 520, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 418, 0, 0, 449,
	488, 487, 437, 446, 0, 0, 177, 438, 0, 445,
	439, 443, 442, 440, 441, 0, 504, 0, 0, 0,
	0, 0, 0, 409, 422, 0, 426, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 419, 420,
	0, 0, 0, 0, 465, 0, 421, 0, 0, 467,
	0, 447, 0, 0, 169, 286, 302, 178, 277, 315,
	183, 284, 174, 250, 273, 0, 0, 171, 300, 283,
	232, 215, 216, 170, 0, 268, 194, 207, 190, 248,
	444, 463, 468, 189, 526, 461, 310, 173, 0, 309,
	247, 296, 301, 233, 227, 172, 298, 231, 226, 219,
	198, 527, 211, 259, 225, 260, 212, 237, 236, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 459, 0,
	0, 312, 0, 0, 510, 0, 0, 0, 285, 0,
	0, 220, 0, 0, 0, 462, 0, 271, 253, 523,
	410, 0, 269, 223, 297, 261, 303, 287, 311, 265,
	262, 164, 288, 192, 234, 175, 176, 188, 195, 197,
	199, 200, 243, 244, 256, 276, 290, 291, 292, 191,
	184, 270, 185, 209, 186, 165, 278, 187, 167, 257,
	295, 0, 205, 266, 230, 168, 229, 258, 294, 293,
	319, 325, 326, 330, 0, 331, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 0, 0, 0,
	324, 203, 162, 307, 508, 249, 0, 522, 503, 505,
	506, 509, 513, 514, 515, 516, 517, 519, 521, 525,
	274, 0, 0, 0, 0, 0, 214, 255, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 305, 317, 334, 337, 0, 0, 0,
	166, 336, 0, 0, 0, 0, 0, 0, 0, 524,
	0, 0, 0, 316, 0, 0, 0, 0, 0, 466,
	239, 240, 241, 242, 511, 0, 182, 335, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 202, 208, 0, 210, 181, 254, 204,
	314, 217, 0, 246, 213, 279, 218, 224, 267, 313,
	252, 272, 179, 304, 280, 228, 0, 0, 533, 507,
	532, 534, 535, 531, 536, 537, 518, 428, 0, 471,
	529, 528, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 222, 0,
	263, 201, 494, 475, 476, 477, 427, 478, 473, 474,
	495, 469, 491, 492, 451, 454, 479, 140, 480, 493,
	496, 497, 538, 539, 540, 483, 498, 490, 489, 481,
	470, 499, 500, 455, 453, 484, 485, 472, 486, 0,
	501, 502, 289, 464, 320, 321, 322, 306, 0, 193,
	0, 0, 0, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 425, 0, 0, 0,
	196, 1209, 0, 221, 0, 0, 0, 456, 0, 0,
	281, 235, 0, 0, 0, 0, 512, 520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 0,
	0, 449, 488, 487, 437, 446, 0, 0, 177, 438,
	0, 445, 439, 443, 442, 440, 441, 0, 504, 0,
	0, 0, 0, 0, 0, 409, 422, 0, 426, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	419, 420, 0, 0, 0, 0, 465, 0, 421, 0,
	0, 467, 0, 447, 0, 0, 169, 286, 302, 178,
	277, 315, 183, 284, 174, 250, 273, 0, 0, 171,
	300, 283, 232, 215, 216, 170, 0, 268, 194, 207,
	190, 248, 444, 463, 468, 189, 526, 461, 310, 173,
	0, 309, 247, 296, 301, 233, 227, 172, 298, 231,
	226, 219, 198, 527, 211, 259, 225, 260, 212, 237,
	236, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	459, 0, 0, 312, 0, 0, 510, 0, 0, 0,
	285, 0, 0, 220, 0, 0, 0, 462, 0, 271,
	253, 523, 410, 0, 269, 223, 297, 261, 303, 287,
	311, 265, 262, 164, 288, 192, 234, 175, 176, 188,
	195, 197, 199, 200, 243, 244, 256, 276, 290, 291,
	292, 191, 184, 270, 185, 209, 186, 165, 278, 187,
	167, 257, 295, 0, 205, 266, 230, 168, 229, 258,
	294, 293, 319, 325, 326, 330, 0, 331, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 0, 324, 203, 162, 307, 508, 249, 0, 522,
	503, 505, 506, 509, 513, 514, 515, 516, 517, 519,
	521, 525, 274, 0, 0, 0, 0, 0, 214, 255,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 305, 317, 334, 337, 0,
	0, 0, 166, 336, 0, 0, 0, 0, 0, 0,
	0, 524, 0, 0, 0, 316, 0, 0, 0, 0,
	0, 466, 239, 240, 241, 242, 511, 0, 182, 335,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 202, 208, 0, 210, 181,
	254, 204, 314, 217, 0, 246, 213, 279, 218, 224,
	267, 313, 252, 272, 179, 304, 280, 228, 0, 0,
	533, 507, 532, 534, 535, 531, 536, 537, 518, 428,
	0, 471, 529, 528, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	222, 0, 263, 201, 494, 475, 476, 477, 427, 478,
	473, 474, 495, 469, 491, 492, 451, 454, 479, 140,
	480, 493, 496, 497, 538, 539, 540, 483, 498, 490,
	489, 481, 470, 499, 500, 455, 453, 484, 485, 472,
	486, 0, 501, 502, 289, 464, 320, 321, 322, 306,
	0, 193, 0, 0, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 425, 0,
	0, 0, 196, 0, 0, 221, 0, 0, 0, 456,
	0, 0, 281, 235, 0, 0, 0, 0, 512, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	418, 0, 0, 449, 488, 487, 437, 446, 0, 0,
	177, 438, 0, 445, 439, 443, 442, 440, 441, 0,
	504, 0, 0, 0, 0, 0, 0, 409, 422, 0,
	426, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 420, 987, 0, 0, 0, 465, 0,
	421, 0, 0, 467, 0, 447, 0, 0, 169, 286,
	302, 178, 277, 315, 183, 284, 174, 250, 273, 0,
	0, 171, 300, 283, 232, 215, 216, 170, 0, 268,
	194, 207, 190, 248, 444, 463, 468, 189, 526, 461,
	310, 173, 0, 309, 247, 296, 301, 233, 227, 172,
	298, 231, 226, 219, 198, 527, 211, 259, 225, 260,
	212, 237, 236, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 459, 0, 0, 312, 0, 0, 510, 0,
	0, 0, 285, 0, 0, 220, 0, 0, 0, 462,
	0, 271, 253, 523, 410, 0, 269, 223, 297, 261,
	303, 287, 311, 265, 262, 164, 288, 192, 234, 175,
	176, 188, 195, 197, 199, 200, 243, 244, 256, 276,
	290, 291, 292, 191, 184, 270, 185, 209, 186, 165,
	278, 187, 167, 257, 295, 0, 205, 266, 230, 168,
	229, 258, 294, 293, 319, 325, 326, 330, 0, 331,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 0, 0, 324, 203, 162, 307, 508, 249,
	0, 522, 503, 505, 506, 509, 513, 514, 515, 516,
	517, 519, 521, 525, 274, 0, 0, 0, 0, 0,
	214, 255, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 305, 317, 334,
	337, 0, 0, 0, 166, 336, 0, 0, 0, 0,
	0, 0, 0, 524, 0, 0, 0, 316, 0, 0,
	0, 0, 0, 466, 239, 240, 241, 242, 511, 0,
	182, 335, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 202, 208, 0,
	210, 181, 254, 204, 314, 217, 0, 246, 213, 279,
	218, 224, 267, 313, 252, 272, 179, 304, 280, 228,
	0, 0, 533, 507, 532, 534, 535, 531, 536, 537,
	518, 428, 0, 471, 529, 528, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 222, 0, 263, 201, 494, 475, 476, 477,
	427, 478, 473, 474, 495, 469, 491, 492, 451, 454,
	479, 140, 480, 493, 496, 497, 538, 539, 540, 483,
	498, 490, 489, 481, 470, 499, 500, 455, 453, 484,
	485, 472, 486, 0, 501, 502, 0, 0, 320, 321,
	322, 306, 0, 193, 289, 464, 0, 0, 1573, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 425, 0,
	0, 0, 196, 0, 0, 221, 0, 0, 0, 456,
	0, 0, 281, 235, 0, 0, 0, 0, 512, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	418, 0, 0, 449, 488, 487, 437, 446, 0, 0,
	177, 438, 0, 445, 439, 443, 442, 440, 441, 0,
	504, 0, 0, 0, 0, 0, 0, 409, 422, 0,
	426, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 419, 420, 0, 0, 0, 0, 465, 0,
	421, 0, 0, 467, 0, 447, 0, 0, 169, 286,
	302, 178, 277, 315, 183, 284, 174, 250, 273, 0,
	0, 171, 300, 283, 232, 215, 216, 170, 0, 268,
	194, 207, 190, 248, 444, 463, 468, 189, 526, 461,
	310, 173, 0, 309, 247, 296, 301, 233, 227, 172,
	298, 231, 226, 219, 198, 527, 211, 259, 225, 260,
	212, 237, 236, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 459, 0, 0, 312, 0, 0, 510, 0,
	0, 0, 285, 0, 0, 220, 0, 0, 0, 462,
	0, 271, 253, 523, 410, 0, 269, 223, 297, 261,
	303, 287, 311, 265, 262, 164, 288, 192, 234, 175,
	176, 188, 195, 197, 199, 200, 243, 244, 256, 276,
	290, 291, 292, 191, 184, 270, 185, 209, 186, 165,
	278, 187, 167, 257, 295, 0, 205, 266, 230, 168,
	229, 258, 294, 293, 319, 325, 326, 330, 0, 331,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 0, 0, 324, 203, 162, 307, 508, 249,
	0, 522, 503, 505, 506, 509, 513, 514, 515, 516,
	517, 519, 521, 525, 274, 0, 0, 0, 0, 0,
	214, 255, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 305, 317, 334,
	337, 0, 0, 0, 166, 336, 0, 0, 0, 0,
	0, 0, 0, 524, 0, 0, 0, 316, 0, 0,
	0, 0, 0, 466, 239, 240, 241, 242, 511, 0,
	182, 335, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 202, 208, 0,
	210, 181, 254, 204, 314, 217, 0, 246, 213, 279,
	218, 224, 267, 313, 252, 272, 179, 304, 280, 228,
	0, 0, 533, 507, 532, 534, 535, 531, 536, 537,
	518, 428, 0, 471, 529, 528, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 222, 0, 263, 201, 494, 475, 476, 477,
	427, 478, 473, 474, 495, 469, 491, 492, 451, 454,
	479, 140, 480, 493, 496, 497, 538, 539, 540, 483,
	498, 490, 489, 481, 470, 499, 500, 455, 453, 484,
	485, 472, 486, 0, 501, 502, 289, 464, 320, 321,
	322, 306, 0, 193, 0, 0, 0, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	425, 0, 0, 0, 196, 0, 0, 221, 0, 0,
	0, 456, 0, 0, 281, 235, 0, 0, 0, 0,
	512, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 0, 0, 449, 488, 487, 437, 446,
	0, 0, 177, 438, 0, 445, 439, 443, 442, 440,
	441, 0, 504, 0, 0, 0, 0, 0, 0, 409,
	422, 0, 426, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 419, 420, 0, 0, 0, 0,
	465, 0, 421, 0, 0, 467, 0, 447, 0, 0,
	169, 286, 302, 178, 277, 315, 183, 284, 174, 250,
	273, 0, 0, 171, 300, 283, 232, 215, 216, 170,
	0, 268, 194, 207, 190, 248, 444, 463, 468, 189,
	526, 461, 310, 173, 0, 309, 247, 296, 301, 233,
	227, 172, 298, 231, 226, 219, 198, 527, 211, 259,
	225, 260, 212, 237, 236, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 459, 0, 0, 312, 0, 0,
	510, 0, 0, 0, 285, 0, 0, 220, 0, 0,
	0, 462, 0, 271, 253, 523, 410, 0, 269, 223,
	297, 261, 303, 287, 311, 265, 262, 164, 288, 192,
	234, 175, 176, 188, 195, 197, 199, 200, 243, 244,
	256, 276, 290, 291, 292, 191, 184, 270, 185, 209,
	186, 165, 278, 187, 167, 257, 295, 0, 205, 266,
	230, 168, 229, 258, 294, 293, 319, 325, 326, 330,
	0, 331, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 0, 324, 203, 162, 307,
	508, 249, 0, 522, 503, 505, 506, 509, 513, 514,
	515, 516, 517, 519, 521, 525, 274, 0, 0, 0,
	0, 0, 214, 255, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 305,
	317, 334, 337, 0, 0, 0, 166, 336, 0, 0,
	0, 0, 0, 0, 0, 524, 0, 0, 0, 316,
	0, 0, 0, 0, 0, 466, 239, 240, 241, 242,
	511, 0, 182, 335, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 202,
	208, 0, 210, 181, 254, 204, 314, 217, 0, 246,
	213, 279, 218, 224, 267, 313, 252, 272, 179, 304,
	280, 228, 0, 0, 533, 507, 532, 534, 535, 531,
	536, 537, 518, 428, 0, 471, 529, 528, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 222, 0, 263, 201, 494, 475,
	476, 477, 427, 478, 473, 474, 495, 469, 491, 492,
	451, 454, 479, 140, 480, 493, 496, 497, 538, 539,
	540, 483, 498, 490, 489, 481, 470, 499, 500, 455,
	453, 484, 485, 472, 486, 0, 501, 502, 289, 464,
	320, 321, 322, 306, 0, 193, 0, 0, 0, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 1070, 0,
	0, 0, 425, 0, 0, 0, 196, 0, 0, 221,
	0, 0, 0, 456, 0, 0, 281, 235, 0, 0,
	0, 0, 512, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 0, 449, 488, 487,
	437, 446, 0, 0, 177, 438, 0, 445, 439, 443,
	442, 440, 441, 0, 504, 0, 0, 0, 0, 0,
	0, 0, 422, 0, 426, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 419, 420, 0, 0,
	0, 0, 465, 0, 421, 0, 0, 467, 0, 447,
	0, 0, 169, 286, 302, 178, 277, 315, 183, 284,
	174, 250, 273, 0, 0, 171, 300, 283, 232, 215,
	216, 170, 0, 268, 194, 207, 190, 248, 444, 463,
	468, 189, 526, 461, 310, 173, 0, 309, 247, 296,
	301, 233, 227, 172, 298, 231, 226, 219, 198, 527,
	211, 259, 225, 260, 212, 237, 236, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 459, 0, 0, 312,
	0, 0, 510, 0, 0, 0, 285, 0, 0, 220,
	0, 0, 0, 462, 0, 271, 253, 523, 0, 0,
	269, 223, 297, 261, 303, 287, 311, 265, 262, 164,
	288, 192, 234, 175, 176, 188, 195, 197, 199, 200,
	243, 244, 256, 276, 290, 291, 292, 191, 184, 270,
	185, 209, 186, 165, 278, 187, 167, 257, 295, 0,
	205, 266, 230, 168, 229, 258, 294, 293, 319, 1071,
	1072, 330, 0, 331, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 0, 0, 0, 324, 203,
	162, 307, 508, 249, 0, 522, 503, 505, 506, 509,
	513, 514, 515, 516, 517, 519, 521, 525, 274, 0,
	0, 0, 0, 0, 214, 255, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 305, 317, 334, 337, 0, 0, 0, 166, 336,
	0, 0, 0, 0, 0, 0, 0, 524, 0, 0,
	0, 316, 0, 0, 0, 0, 0, 466, 239, 240,
	241, 242, 511, 0, 182, 335, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 202, 208, 0, 210, 181, 254, 204, 314, 217,
	0, 246, 213, 279, 218, 224, 267, 313, 252, 272,
	179, 304, 280, 228, 0, 0, 533, 507, 532, 534,
	535, 531, 536, 537, 518, 428, 0, 471, 529, 528,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 222, 0, 263, 201,
	494, 475, 476, 477, 427, 478, 473, 474, 495, 469,
	491, 492, 451, 454, 479, 140, 480, 493, 496, 497,
	538, 539, 540, 483, 498, 490, 489, 481, 470, 499,
	500, 455, 453, 484, 485, 472, 486, 0, 501, 502,
	289, 464, 320, 321, 322, 306, 0, 193, 0, 0,
	0, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 425, 0, 0, 0, 196, 0,
	0, 221, 0, 0, 0, 456, 0, 0, 281, 235,
	0, 0, 0, 0, 512, 520, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	488, 487, 437, 446, 0, 0, 177, 438, 0, 445,
	439, 443, 442, 440, 441, 0, 504, 0, 0, 0,
	0, 0, 0, 409, 422, 0, 426, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 419, 420,
	0, 0, 0, 0, 465, 0, 421, 0, 0, 467,
	0, 447, 0, 0, 169, 286, 302, 178, 277, 315,
	183, 284, 174, 250, 273, 0, 0, 171, 300, 283,
	232, 215, 216, 170, 0, 268, 194, 207, 190, 248,
	444, 463, 468, 189, 526, 461, 310, 173, 0, 309,
	247, 296, 301, 233, 227, 172, 298, 231, 226, 219,
	198, 527, 211, 259, 225, 260, 212, 237, 236, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 459, 0,
	0, 312, 0, 0, 510, 0, 0, 0, 285, 0,
	0, 220, 0, 0, 0, 462, 0, 271, 253, 523,
	410, 0, 269, 223, 297, 261, 303, 287, 311, 265,
	262, 164, 288, 192, 234, 175, 176, 188, 195, 197,
	199, 200, 243, 244, 256, 276, 290, 291, 292, 191,
	184, 270, 185, 209, 186, 165, 278, 187, 167, 257,
	295, 0, 205, 266, 230, 168, 229, 258, 294, 293,
	319, 325, 326, 330, 0, 331, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 0, 0, 0,
	324, 203, 162, 307, 508, 249, 0, 522, 503, 505,
	506, 509, 513, 514, 515, 516, 517, 519, 521, 525,
	274, 0, 0, 0, 0, 0, 214, 255, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 305, 317, 334, 337, 0, 0, 0,
	166, 336, 0, 0, 0, 0, 0, 0, 0, 524,
	0, 0, 0, 316, 0, 0, 0, 0, 0, 466,
	239, 240, 241, 242, 511, 0, 182, 335, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 202, 208, 0, 210, 181, 254, 204,
	314, 217, 0, 246, 213, 279, 218, 224, 267, 313,
	252, 272, 179, 304, 280, 228, 0, 0, 533, 507,
	532, 534, 535, 531, 536, 537, 518, 428, 0, 471,
	529, 528, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 222, 0,
	263, 201, 494, 475, 476, 477, 427, 478, 473, 474,
	495, 469, 491, 492, 451, 454, 479, 140, 480, 493,
	496, 497, 538, 539, 540, 483, 498, 490, 489, 481,
	470, 499, 500, 455, 453, 484, 485, 472, 486, 0,
	501, 502, 289, 464, 320, 321, 322, 306, 0, 193,
	0, 0, 0, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 425, 0, 0, 0,
	196, 0, 0, 221, 0, 0, 0, 456, 0, 0,
	281, 235, 0, 0, 0, 0, 512, 520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 0,
	0, 449, 488, 487, 437, 446, 0, 0, 177, 438,
	0, 445, 439, 443, 442, 440, 441, 0, 504, 0,
	0, 0, 0, 0, 0, 0, 422, 0, 426, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	419, 420, 0, 0, 0, 0, 465, 0, 421, 0,
	0, 467, 0, 447, 0, 0, 169, 286, 302, 178,
	277, 315, 183, 284, 174, 250, 273, 0, 0, 171,
	300, 283, 232, 215, 216, 170, 0, 268, 194, 207,
	190, 248, 444, 463, 468, 189, 526, 461, 310, 173,
	0, 309, 247, 296, 301, 233, 227, 172, 298, 231,
	226, 219, 198, 527, 211, 259, 225, 260, 212, 237,
	236, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	459, 0, 0, 312, 0, 0, 510, 0, 0, 0,
	285, 0, 0, 220, 0, 0, 0, 462, 0, 271,
	253, 523, 0, 0, 269, 223, 297, 261, 303, 287,
	311, 265, 262, 164, 288, 192, 234, 175, 176, 188,
	195, 197, 199, 200, 243, 244, 256, 276, 290, 291,
	292, 191, 184, 270, 185, 209, 186, 165, 278, 187,
	167, 257, 295, 0, 205, 266, 230, 168, 229, 258,
	294, 293, 319, 325, 326, 330, 0, 331, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 0, 324, 203, 162, 307, 508, 249, 0, 522,
	503, 505, 506, 509, 513, 514, 515, 516, 517, 519,
	521, 525, 274, 0, 0, 0, 0, 0, 214, 255,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 305, 317, 334, 337, 0,
	0, 0, 166, 336, 0, 0, 0, 0, 0, 0,
	0, 524, 0, 0, 0, 316, 0, 0, 0, 0,
	0, 466, 239, 240, 241, 242, 511, 0, 182, 335,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 202, 208, 0, 210, 181,
	254, 204, 314, 217, 0, 246, 213, 279, 218, 224,
	267, 313, 252, 272, 179, 304, 280, 228, 0, 0,
	533, 507, 532, 534, 535, 531, 536, 537, 518, 428,
	0, 471, 529, 528, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	222, 0, 263, 201, 494, 475, 476, 477, 427, 478,
	473, 474, 495, 469, 491, 492, 451, 454, 479, 140,
	480, 493, 496, 497, 538, 539, 540, 483, 498, 490,
	489, 481, 470, 499, 500, 455, 453, 484, 485, 472,
	486, 0, 501, 502, 0, 0, 320, 321, 322, 306,
	0, 193, 115, 289, 35, 105, 87, 0, 0, 0,
	0, 0, 0, 0, 251, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 281, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 352,
	0, 0, 122, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 286, 302,
	178, 277, 315, 183, 284, 174, 250, 273, 0, 0,
	171, 300, 283, 232, 215, 216, 170, 0, 268, 194,
	207, 190, 248, 0, 299, 327, 189, 318, 0, 310,
	173, 0, 309, 247, 296, 301, 233, 227, 172, 298,
	231, 226, 219, 198, 0, 211, 259, 225, 260, 212,
	237, 236, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 351, 0,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	0, 285, 0, 0, 220, 0, 0, 0, 328, 0,
	271, 253, 0, 0, 0, 269, 223, 297, 261, 303,
	287, 311, 265, 262, 164, 288, 192, 234, 175, 176,
	188, 195, 197, 199, 200, 243, 244, 256, 276, 290,
	291, 292, 191, 184, 270, 185, 209, 186, 165, 278,
	187, 167, 257, 295, 0, 205, 266, 230, 168, 229,
	258, 294, 293, 319, 325, 326, 330, 0, 331, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 0, 324, 203, 162, 307, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 323, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 214,
	255, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 305, 317, 334, 337,
	0, 0, 0, 166, 336, 0, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 332, 239, 240, 241, 242, 348, 350, 182,
	335, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 202, 208, 0, 210,
	181, 254, 204, 314, 217, 0, 246, 213, 279, 218,
	224, 267, 313, 252, 272, 179, 304, 280, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 36,
	0, 0, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 222, 88, 263, 201, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 0, 289, 0, 0, 0, 0, 320, 321, 322,
	306, 0, 193, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	281, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 122, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 2002,
	2005, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 286, 302, 178,
	277, 315, 183, 284, 174, 250, 273, 0, 0, 171,
	300, 283, 232, 215, 216, 170, 0, 268, 194, 207,
	190, 248, 0, 299, 327, 189, 318, 0, 310, 173,
	0, 309, 247, 296, 301, 233, 227, 172, 298, 231,
	226, 219, 198, 0, 211, 259, 225, 260, 212, 237,
	236, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2006, 312, 0, 0, 0, 1999, 0, 1998,
	285, 2000, 2003, 220, 0, 0, 0, 328, 0, 271,
	253, 0, 0, 0, 269, 223, 297, 261, 303, 287,
	311, 265, 262, 164, 288, 192, 234, 175, 176, 188,
	195, 197, 199, 200, 243, 244, 256, 276, 290, 291,
	292, 191, 184, 270, 185, 209, 186, 165, 278, 187,
	167, 257, 295, 2004, 205, 266, 230, 168, 229, 258,
	294, 293, 319, 325, 326, 330, 0, 331, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 0, 324, 203, 162, 307, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 323, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 214, 255,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 305, 317, 334, 337, 0,
	0, 0, 166, 336, 0, 0, 0, 0, 0, 0,
	0, 308, 0, 0, 0, 316, 0, 0, 0, 0,
	0, 332, 239, 240, 241, 242, 206, 0, 182, 335,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 202, 208, 0, 210, 181,
	254, 204, 314, 217, 0, 246, 213, 279, 218, 224,
	267, 313, 252, 272, 179, 304, 280, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	222, 0, 263, 201, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	0, 289, 0, 0, 0, 0, 320, 321, 322, 306,
	0, 193, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1314, 0, 0, 0, 0, 196,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 281,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	122, 0, 0, 1315, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 0,
	737, 738, 739, 736, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 286, 302, 178, 277,
	315, 183, 284, 174, 250, 273, 0, 0, 171, 300,
	283, 232, 215, 216, 170, 0, 268, 194, 207, 190,
	248, 0, 299, 327, 189, 318, 0, 310, 173, 0,
	309, 247, 296, 301, 233, 227, 172, 298, 231, 226,
	219, 198, 0, 211, 259, 225, 260, 212, 237, 236,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 0, 285,
	0, 0, 220, 0, 0, 0, 328, 0, 271, 253,
	0, 0, 0, 269, 223, 297, 261, 303, 287, 311,
	265, 262, 164, 288, 192, 234, 175, 176, 188, 195,
	197, 199, 200, 243, 244, 256, 276, 290, 291, 292,
	191, 184, 270, 185, 209, 186, 165, 278, 187, 167,
	257, 295, 0, 205, 266, 230, 168, 229, 258, 294,
	293, 319, 325, 326, 330, 0, 331, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 0, 0,
	0, 324, 203, 162, 307, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 323, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 214, 255, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 305, 317, 334, 337, 0, 0,
	0, 166, 336, 0, 0, 0, 0, 0, 0, 0,
	308, 0, 0, 0, 316, 0, 0, 0, 0, 0,
	332, 239, 240, 241, 242, 206, 0, 182, 335, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 202, 208, 0, 210, 181, 254,
	204, 314, 217, 0, 246, 213, 279, 218, 224, 267,
	313, 252, 272, 179, 304, 280, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 222,
	0, 263, 201, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 0,
	289, 0, 0, 0, 0, 320, 321, 322, 306, 0,
	193, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 620,
	0, 221, 0, 0, 0, 0, 0, 0, 281, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 122,
	628, 629, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 632, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 286, 302, 178, 277, 315,
	183, 284, 174, 250, 273, 0, 0, 171, 300, 283,
	232, 215, 216, 170, 0, 268, 194, 207, 190, 248,
	0, 299, 327, 189, 318, 606, 310, 173, 605, 309,
	247, 296, 301, 233, 227, 172, 298, 231, 226, 219,
	198, 0, 211, 259, 225, 260, 212, 237, 236, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 0, 285, 0,
	0, 220, 0, 0, 0, 328, 0, 271, 253, 0,
	0, 0, 269, 223, 297, 261, 303, 287, 311, 618,
	262, 164, 288, 192, 234, 175, 176, 188, 195, 197,
	199, 200, 243, 244, 256, 276, 290, 291, 292, 191,
	184, 270, 185, 209, 186, 165, 278, 187, 167, 257,
	295, 0, 205, 266, 230, 168, 229, 258, 294, 293,
	319, 325, 326, 330, 0, 331, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 0, 0, 0,
	324, 203, 162, 307, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 323, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 214, 255, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 305, 317, 334, 337, 0, 0, 0,
	166, 336, 0, 0, 0, 0, 0, 0, 619, 308,
	0, 0, 0, 316, 0, 0, 0, 0, 0, 622,
	239, 240, 241, 242, 206, 0, 182, 335, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 202, 208, 0, 210, 181, 254, 204,
	314, 217, 0, 630, 625, 626, 218, 224, 267, 313,
	252, 272, 179, 304, 280, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 222, 0,
	263, 201, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 115, 289,
	0, 0, 0, 0, 320, 321, 322, 306, 0, 193,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 281, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1695, 0, 0, 122, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 286, 302, 178, 277, 315, 183,
	284, 174, 250, 273, 0, 0, 171, 300, 283, 232,
	215, 216, 170, 0, 268, 194, 207, 190, 248, 0,
	299, 327, 189, 318, 0, 310, 173, 0, 309, 247,
	296, 301, 233, 227, 172, 298, 231, 226, 219, 198,
	0, 211, 259, 225, 260, 212, 237, 236, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 285, 0, 0,
	220, 0, 0, 0, 328, 0, 271, 253, 0, 0,
	0, 269, 223, 297, 261, 303, 287, 311, 265, 262,
	164, 288, 192, 234, 175, 176, 188, 195, 197, 199,
	200, 243, 244, 256, 276, 290, 291, 292, 191, 184,
	270, 185, 209, 186, 165, 278, 187, 167, 257, 295,
	0, 205, 266, 230, 168, 229, 258, 294, 293, 319,
	325, 326, 330, 0, 331, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 0, 324,
	203, 162, 307, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 323, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 214, 255, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 305, 317, 334, 337, 0, 0, 0, 166,
	336, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 316, 0, 0, 0, 0, 0, 332, 239,
	240, 241, 242, 206, 0, 182, 335, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 202, 208, 0, 210, 181, 254, 204, 314,
	217, 0, 246, 213, 279, 218, 224, 267, 313, 252,
	272, 179, 304, 280, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 222, 88, 263,
	201, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 115, 289, 1271,
	1272, 0, 0, 320, 321, 322, 306, 0, 193, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 281, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 112, 1336, 0, 122, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 286, 302, 178, 277, 315, 183, 284,
	174, 250, 273, 0, 0, 171, 300, 283, 232, 215,
	216, 170, 0, 268, 194, 207, 190, 248, 0, 299,
	327, 189, 318, 0, 310, 173, 0, 309, 247, 296,
	301, 233, 227, 172, 298, 231, 226, 219, 198, 0,
	211, 259, 225, 260, 212, 237, 236, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 220,
	0, 0, 0, 328, 0, 271, 253, 0, 0, 0,
	269, 223, 297, 261, 303, 287, 311, 265, 262, 164,
	288, 192, 234, 175, 176, 188, 195, 197, 199, 200,
	243, 244, 256, 276, 290, 291, 292, 191, 184, 270,
	185, 209, 186, 165, 278, 187, 167, 257, 295, 0,
	205, 266, 230, 168, 229, 258, 294, 293, 319, 325,
	326, 330, 0, 331, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 0, 0, 0, 324, 203,
	162, 307, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 323, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 214, 255, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 305, 317, 334, 337, 0, 0, 0, 166, 336,
	0, 0, 0, 0, 0, 0, 0, 308, 0, 0,
	0, 316, 0, 0, 0, 0, 0, 332, 239, 240,
	241, 242, 206, 0, 182, 335, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 202, 208, 0, 210, 181, 254, 204, 314, 217,
	0, 246, 213, 279, 218, 224, 267, 313, 252, 272,
	179, 304, 280, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 222, 88, 263, 201,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 115, 289, 0, 0,
	0, 0, 320, 321, 322, 306, 0, 193, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 281, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 112, 1327, 0, 122, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 286, 302, 178, 277, 315, 183, 284, 174,
	250, 273, 0, 0, 171, 300, 283, 232, 215, 216,
	170, 0, 268, 194, 207, 190, 248, 0, 299, 327,
	189, 318, 0, 310, 173, 0, 309, 247, 296, 301,
	233, 227, 172, 298, 231, 226, 219, 198, 0, 211,
	259, 225, 260, 212, 237, 236, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 0, 285, 0, 0, 220, 0,
	0, 0, 328, 0, 271, 253, 0, 0, 0, 269,
	223, 297, 261, 303, 287, 311, 265, 262, 164, 288,
	192, 234, 175, 176, 188, 195, 197, 199, 200, 243,
	244, 256, 276, 290, 291, 292, 191, 184, 270, 185,
	209, 186, 165, 278, 187, 167, 257, 295, 0, 205,
	266, 230, 168, 229, 258, 294, 293, 319, 325, 326,
	330, 0, 331, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 0, 0, 324, 203, 162,
	307, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 323, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 214, 255, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	305, 317, 334, 337, 0, 0, 0, 166, 336, 0,
	0, 0, 0, 0, 0, 0, 308, 0, 0, 0,
	316, 0, 0, 0, 0, 0, 332, 239, 240, 241,
	242, 206, 0, 182, 335, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	202, 208, 0, 210, 181, 254, 204, 314, 217, 0,
	246, 213, 279, 218, 224, 267, 313, 252, 272, 179,
	304, 280, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 222, 88, 263, 201, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 0, 289, 0, 0, 0,
	0, 320, 321, 322, 306, 0, 193, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 281, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 122, 628, 629, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 286, 302, 178, 277, 315, 183, 284, 174, 250,
	273, 0, 0, 171, 300, 283, 232, 215, 216, 170,
	0, 268, 194, 207, 190, 248, 0, 299, 327, 189,
	318, 606, 310, 173, 605, 309, 247, 296, 301, 233,
	227, 172, 298, 231, 226, 219, 198, 0, 211, 259,
	225, 260, 212, 237, 236, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 0, 285, 0, 0, 220, 0, 0,
	0, 328, 0, 271, 253, 0, 0, 0, 269, 223,
	297, 261, 303, 287, 311, 265, 262, 164, 288, 192,
	234, 175, 176, 188, 195, 197, 199, 200, 243, 244,
	256, 276, 290, 291, 292, 191, 184, 270, 185, 209,
	186, 165, 278, 187, 167, 257, 295, 0, 205, 266,
	230, 168, 229, 258, 294, 293, 319, 325, 326, 330,
	0, 331, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 0, 324, 203, 162, 307,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 323, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 214, 255, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 305,
	317, 334, 337, 0, 0, 0, 166, 336, 0, 0,
	0, 0, 0, 0, 0, 308, 0, 0, 0, 316,
	0, 0, 0, 0, 0, 332, 239, 240, 241, 242,
	206, 0, 182, 335, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 202,
	208, 0, 210, 181, 254, 204, 314, 217, 0, 630,
	625, 626, 218, 224, 267, 313, 252, 272, 179, 304,
	280, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 222, 0, 263, 201, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 0, 289, 0, 0, 0, 0,
	320, 321, 322, 306, 0, 193, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 281, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1269, 0, 0, 122, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	286, 302, 178, 277, 315, 183, 284, 174, 250, 273,
	0, 0, 171, 300, 283, 232, 215, 216, 170, 0,
	268, 194, 207, 190, 248, 0, 299, 327, 189, 318,
	0, 310, 173, 0, 309, 247, 296, 301, 233, 227,
	172, 298, 231, 226, 219, 198, 0, 211, 259, 225,
	260, 212, 237, 236, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 0, 285, 0, 0, 220, 0, 0, 0,
	328, 0, 271, 253, 0, 0, 0, 269, 223, 297,
	261, 303, 287, 311, 265, 262, 164, 288, 192, 234,
	175, 176, 188, 195, 197, 199, 200, 243, 244, 256,
	276, 290, 291, 292, 191, 184, 270, 185, 209, 186,
	165, 278, 187, 167, 257, 295, 0, 205, 266, 230,
	168, 229, 258, 294, 293, 319, 325, 326, 330, 0,
	331, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 0, 0, 324, 203, 162, 307, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	323, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 214, 255, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 305, 317,
	334, 337, 0, 0, 0, 166, 336, 0, 0, 0,
	0, 0, 0, 0, 308, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 332, 239, 240, 241, 242, 206,
	0, 182, 335, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 202, 208,
	0, 210, 181, 254, 204, 314, 217, 0, 246, 213,
	279, 218, 224, 267, 313, 252, 272, 179, 304, 280,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 222, 0, 263, 201, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 0, 289, 1271, 1272, 0, 0, 320,
	321, 322, 306, 0, 193, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 971, 0, 221, 0, 0, 0, 0,
	0, 0, 281, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 122, 0, 0, 969, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 967, 0, 0, 0, 0, 169, 286,
	302, 178, 277, 315, 183, 284, 174, 250, 273, 0,
	0, 171, 300, 283, 232, 215, 216, 170, 0, 268,
	194, 207, 190, 248, 0, 299, 327, 189, 318, 0,
	310, 173, 0, 309, 247, 296, 301, 233, 227, 172,
	298, 231, 226, 219, 198, 0, 211, 259, 225, 260,
	212, 237, 236, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 0, 285, 0, 0, 220, 0, 0, 0, 328,
	0, 271, 253, 0, 0, 0, 269, 223, 297, 261,
	303, 287, 311, 265, 262, 164, 288, 192, 234, 175,
	176, 188, 195, 197, 199, 200, 243, 244, 256, 276,
	290, 291, 292, 191, 184, 270, 185, 209, 186, 165,
	278, 187, 167, 257, 295, 0, 205, 266, 230, 168,
	229, 258, 294, 293, 319, 325, 326, 330, 0, 331,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 0, 0, 324, 203, 162, 307, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 323,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	214, 255, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 305, 317, 334,
	337, 0, 0, 0, 166, 336, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 316, 0, 0,
	0, 0, 0, 332, 239, 240, 241, 242, 206, 0,
	182, 335, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 202, 208, 0,
	210, 181, 254, 204, 314, 217, 0, 246, 213, 279,
	218, 224, 267, 313, 252, 272, 179, 304, 280, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 222, 0, 263, 201, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 0, 289, 0, 0, 0, 0, 320, 321,
	322, 306, 0, 193, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 965, 0, 221, 0, 0, 0, 0, 0,
	0, 281, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 122, 0, 0, 969, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 967, 0, 0, 0, 0, 169, 286, 302,
	178, 277, 315, 183, 284, 174, 250, 273, 0, 0,
	171, 300, 283, 232, 215, 216, 170, 0, 268, 194,
	207, 190, 248, 0, 299, 327, 189, 318, 0, 310,
	173, 0, 309, 247, 296, 301, 233, 227, 172, 298,
	231, 226, 219, 198, 0, 211, 259, 225, 260, 212,
	237, 236, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	0, 285, 0, 0, 220, 0, 0, 0, 328, 0,
	271, 253, 0, 0, 0, 269, 223, 297, 261, 303,
	287, 311, 265, 262, 164, 288, 192, 234, 175, 176,
	188, 195, 197, 199, 200, 243, 244, 256, 276, 290,
	291, 292, 191, 184, 270, 185, 209, 186, 165, 278,
	187, 167, 257, 295, 0, 205, 266, 230, 168, 229,
	258, 294, 293, 319, 325, 326, 330, 0, 331, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 0, 324, 203, 162, 307, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 323, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 214,
	255, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 305, 317, 334, 337,
	0, 0, 0, 166, 336, 0, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 332, 239, 240, 241, 242, 206, 0, 182,
	335, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 202, 208, 0, 210,
	181, 254, 204, 314, 217, 0, 246, 213, 279, 218,
	224, 267, 313, 252, 272, 179, 304, 280, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 222, 0, 263, 201, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 0, 289, 0, 0, 0, 0, 320, 321, 322,
	306, 0, 193, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	281, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2483,
	0, 122, 488, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 286, 302, 178,
	277, 315, 183, 284, 174, 250, 273, 0, 0, 171,
	300, 283, 232, 215, 216, 170, 0, 268, 194, 207,
	190, 248, 0, 299, 327, 189, 318, 0, 310, 173,
	0, 309, 247, 296, 301, 233, 227, 172, 298, 231,
	226, 219, 198, 0, 211, 259, 225, 260, 212, 237,
	236, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 0,
	285, 0, 0, 220, 0, 0, 0, 328, 0, 271,
	253, 0, 0, 0, 269, 223, 297, 261, 303, 287,
	311, 265, 262, 164, 288, 192, 234, 175, 176, 188,
	195, 197, 199, 200, 243, 244, 256, 276, 290, 291,
	292, 191, 184, 270, 185, 209, 186, 165, 278, 187,
	167, 257, 295, 0, 205, 266, 230, 168, 229, 258,
	294, 293, 319, 325, 326, 330, 0, 331, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 0, 324, 203, 162, 307, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 323, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 214, 255,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 305, 317, 334, 337, 0,
	0, 0, 166, 336, 0, 0, 0, 0, 0, 0,
	0, 308, 0, 0, 0, 316, 0, 0, 0, 0,
	0, 332, 239, 240, 241, 242, 206, 0, 182, 335,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 202, 208, 0, 210, 181,
	254, 204, 314, 217, 0, 246, 213, 279, 218, 224,
	267, 313, 252, 272, 179, 304, 280, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	222, 0, 263, 201, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	0, 289, 0, 0, 0, 0, 320, 321, 322, 306,
	0, 193, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 281,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	122, 0, 0, 969, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	967, 0, 0, 0, 0, 169, 286, 302, 178, 277,
	315, 183, 284, 174, 250, 273, 0, 0, 171, 300,
	283, 232, 215, 216, 170, 0, 268, 194, 207, 190,
	248, 0, 299, 327, 189, 318, 0, 310, 173, 0,
	309, 247, 296, 301, 233, 227, 172, 298, 231, 226,
	219, 198, 0, 211, 259, 225, 260, 212, 237, 236,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 0, 285,
	0, 0, 220, 0, 0, 0, 328, 0, 271, 253,
	0, 0, 0, 269, 223, 297, 261, 303, 287, 311,
	265, 262, 164, 288, 192, 234, 175, 176, 188, 195,
	197, 199, 200, 243, 244, 256, 276, 290, 291, 292,
	191, 184, 270, 185, 209, 186, 165, 278, 187, 167,
	257, 295, 0, 205, 266, 230, 168, 229, 258, 294,
	293, 319, 325, 326, 330, 0, 331, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 0, 0,
	0, 324, 203, 162, 307, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 323, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 214, 255, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 305, 317, 334, 337, 0, 0,
	0, 166, 336, 0, 0, 0, 0, 0, 0, 0,
	308, 0, 0, 0, 316, 0, 0, 0, 0, 0,
	332, 239, 240, 241, 242, 206, 0, 182, 335, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 202, 208, 0, 210, 181, 254,
	204, 314, 217, 0, 246, 213, 279, 218, 224, 267,
	313, 252, 272, 179, 304, 280, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 222,
	0, 263, 201, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 0,
	289, 0, 0, 0, 0, 320, 321, 322, 306, 0,
	193, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 281, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 122,
	0, 0, 969, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2129,
	0, 0, 0, 0, 169, 286, 302, 178, 277, 315,
	183, 284, 174, 250, 273, 0, 0, 171, 300, 283,
	232, 215, 216, 170, 0, 268, 194, 207, 190, 248,
	0, 299, 327, 189, 318, 0, 310, 173, 0, 309,
	247, 296, 301, 233, 227, 172, 298, 231, 226, 219,
	198, 0, 211, 259, 225, 260, 212, 237, 236, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 0, 285, 0,
	0, 220, 0, 0, 0, 328, 0, 271, 253, 0,
	0, 0, 269, 223, 297, 261, 303, 287, 311, 265,
	262, 164, 288, 192, 234, 175, 176, 188, 195, 197,
	199, 200, 243, 244, 256, 276, 290, 291, 292, 191,
	184, 270, 185, 209, 186, 165, 278, 187, 167, 257,
	295, 0, 205, 266, 230, 168, 229, 258, 294, 293,
	319, 325, 326, 330, 0, 331, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 0, 0, 0,
	324, 203, 162, 307, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 323, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 214, 255, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 305, 317, 334, 337, 0, 0, 0,
	166, 336, 0, 0, 0, 0, 0, 0, 0, 308,
	0, 0, 0, 316, 0, 0, 0, 0, 0, 332,
	239, 240, 241, 242, 206, 0, 182, 335, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 202, 208, 0, 210, 181, 254, 204,
	314, 217, 0, 246, 213, 279, 218, 224, 267, 313,
	252, 272, 179, 304, 280, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 222, 0,
	263, 201, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 0, 289,
	0, 0, 0, 0, 320, 321, 322, 306, 0, 193,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 1709, 0,
	221, 0, 0, 0, 0, 0, 0, 281, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 122, 0,
	0, 969, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 286, 302, 178, 277, 315, 183,
	284, 174, 250, 273, 0, 0, 171, 300, 283, 232,
	215, 216, 170, 0, 268, 194, 207, 190, 248, 0,
	299, 327, 189, 318, 0, 310, 173, 0, 309, 247,
	296, 301, 233, 227, 172, 298, 231, 226, 219, 198,
	0, 211, 259, 225, 260, 212, 237, 236, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 285, 0, 0,
	220, 0, 0, 0, 328, 0, 271, 253, 0, 0,
	0, 269, 223, 297, 261, 303, 287, 311, 265, 262,
	164, 288, 192, 234, 175, 176, 188, 195, 197, 199,
	200, 243, 244, 256, 276, 290, 291, 292, 191, 184,
	270, 185, 209, 186, 165, 278, 187, 167, 257, 295,
	0, 205, 266, 230, 168, 229, 258, 294, 293, 319,
	325, 326, 330, 0, 331, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 0, 324,
	203, 162, 307, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 323, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 214, 255, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 305, 317, 334, 337, 0, 0, 0, 166,
	336, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 316, 0, 0, 0, 0, 0, 332, 239,
	240, 241, 242, 206, 0, 182, 335, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 202, 208, 0, 210, 181, 254, 204, 314,
	217, 0, 246, 213, 279, 218, 224, 267, 313, 252,
	272, 179, 304, 280, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 222, 0, 263,
	201, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 0, 289, 0,
	0, 0, 0, 320, 321, 322, 306, 0, 193, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 281, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2587, 0, 122, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 286, 302, 178, 277, 315, 183, 284,
	174, 250, 273, 0, 0, 171, 300, 283, 232, 215,
	216, 170, 0, 268, 194, 207, 190, 248, 0, 299,
	327, 189, 318, 0, 310, 173, 0, 309, 247, 296,
	301, 233, 227, 172, 298, 231, 226, 219, 198, 0,
	211, 259, 225, 260, 212, 237, 236, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 220,
	0, 0, 0, 328, 0, 271, 253, 0, 0, 0,
	269, 223, 297, 261, 303, 287, 311, 265, 262, 164,
	288, 192, 234, 175, 176, 188, 195, 197, 199, 200,
	243, 244, 256, 276, 290, 291, 292, 191, 184, 270,
	185, 209, 186, 165, 278, 187, 167, 257, 295, 0,
	205, 266, 230, 168, 229, 258, 294, 293, 319, 325,
	326, 330, 0, 331, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 0, 0, 0, 324, 203,
	162, 307, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 323, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 214, 255, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 305, 317, 334, 337, 0, 0, 0, 166, 336,
	0, 0, 0, 0, 0, 0, 0, 308, 0, 0,
	0, 316, 0, 0, 0, 0, 0, 332, 239, 240,
	241, 242, 206, 0, 182, 335, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 202, 208, 0, 210, 181, 254, 204, 314, 217,
	0, 246, 213, 279, 218, 224, 267, 313, 252, 272,
	179, 304, 280, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 222, 0, 263, 201,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 0, 289, 0, 0,
	0, 0, 320, 321, 322, 306, 0, 193, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 281, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 122, 488, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 286, 302, 178, 277, 315, 183, 284, 174,
	250, 273, 0, 0, 171, 300, 283, 232, 215, 216,
	170, 0, 268, 194, 207, 190, 248, 0, 299, 327,
	189, 318, 0, 310, 173, 0, 309, 247, 296, 301,
	233, 227, 172, 298, 231, 226, 219, 198, 0, 211,
	259, 225, 260, 212, 237, 236, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 0, 285, 0, 0, 220, 0,
	0, 0, 328, 0, 271, 253, 0, 0, 0, 269,
	223, 297, 261, 303, 287, 311, 265, 262, 164, 288,
	192, 234, 175, 176, 188, 195, 197, 199, 200, 243,
	244, 256, 276, 290, 291, 292, 191, 184, 270, 185,
	209, 186, 165, 278, 187, 167, 257, 295, 0, 205,
	266, 230, 168, 229, 258, 294, 293, 319, 325, 326,
	330, 0, 331, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 0, 0, 324, 203, 162,
	307, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 323, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 214, 255, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	305, 317, 334, 337, 0, 0, 0, 166, 336, 0,
	0, 0, 0, 0, 0, 0, 308, 0, 0, 0,
	316, 0, 0, 0, 0, 0, 332, 239, 240, 241,
	242, 206, 0, 182, 335, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	202, 208, 0, 210, 181, 254, 204, 314, 217, 0,
	246, 213, 279, 218, 224, 267, 313, 252, 272, 179,
	304, 280, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 222, 0, 263, 201, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 0, 289, 0, 0, 0,
	0, 320, 321, 322, 306, 0, 193, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 281, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2239, 0, 0, 122, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 286, 302, 178, 277, 315, 183, 284, 174, 250,
	273, 0, 0, 171, 300, 283, 232, 215, 216, 170,
	0, 268, 194, 207, 190, 248, 0, 299, 327, 189,
	318, 0, 310, 173, 0, 309, 247, 296, 301, 233,
	227, 172, 298, 231, 226, 219, 198, 0, 211, 259,
	225, 260, 212, 237, 236, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 0,
	0, 0, 0, 0, 285, 0, 0, 220, 0, 0,
	0, 328, 0, 271, 253, 0, 0, 0, 269, 223,
	297, 261, 303, 287, 311, 265, 262, 164, 288, 192,
	234, 175, 176, 188, 195, 197, 199, 200, 243, 244,
	256, 276, 290, 291, 292, 191, 184, 270, 185, 209,
	186, 165, 278, 187, 167, 257, 295, 0, 205, 266,
	230, 168, 229, 258, 294, 293, 319, 325, 326, 330,
	0, 331, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 0, 324, 203, 162, 307,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 323, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 214, 255, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 305,
	317, 334, 337, 0, 0, 0, 166, 336, 0, 0,
	0, 0, 0, 0, 0, 308, 0, 0, 0, 316,
	0, 0, 0, 0, 0, 332, 239, 240, 241, 242,
	206, 0, 182, 335, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 202,
	208, 0, 210, 181, 254, 204, 314, 217, 0, 246,
	213, 279, 218, 224, 267, 313, 252, 272, 179, 304,
	280, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 222, 0, 263, 201, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 0, 289, 0, 0, 0, 0,
	320, 321, 322, 306, 0, 193, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 281, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 122, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	286, 302, 178, 277, 315, 183, 284, 174, 250, 273,
	0, 0, 171, 300, 283, 232, 215, 216, 170, 0,
	268, 194, 207, 190, 248, 0, 299, 327, 189, 318,
	0, 310, 173, 0, 309, 247, 296, 301, 233, 227,
	172, 298, 231, 226, 219, 198, 0, 211, 259, 225,
	260, 212, 237, 236, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 0, 0,
	2425, 0, 0, 285, 0, 0, 220, 0, 0, 0,
	328, 0, 271, 253, 0, 0, 0, 269, 223, 297,
	261, 303, 287, 311, 265, 262, 164, 288, 192, 234,
	175, 176, 188, 195, 197, 199, 200, 243, 244, 256,
	276, 290, 291, 292, 191, 184, 270, 185, 209, 186,
	165, 278, 187, 167, 257, 295, 0, 205, 266, 230,
	168, 229, 258, 294, 293, 319, 325, 326, 330, 0,
	331, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 0, 0, 324, 203, 162, 307, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	323, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 214, 255, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 305, 317,
	334, 337, 0, 0, 0, 166, 336, 0, 0, 0,
	0, 0, 0, 0, 308, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 332, 239, 240, 241, 242, 206,
	0, 182, 335, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 202, 208,
	0, 210, 181, 254, 204, 314, 217, 0, 246, 213,
	279, 218, 224, 267, 313, 252, 272, 179, 304, 280,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 222, 0, 263, 201, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 0, 289, 0, 0, 0, 0, 320,
	321, 322, 306, 0, 193, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 281, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 122, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 286,
	302, 178, 277, 315, 183, 284, 174, 250, 273, 0,
	0, 171, 300, 283, 232, 215, 216, 170, 0, 268,
	194, 207, 190, 248, 0, 299, 327, 189, 318, 0,
	310, 173, 0, 309, 247, 296, 301, 233, 227, 172,
	298, 231, 226, 219, 198, 0, 211, 259, 225, 260,
	212, 237, 236, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 0, 2248,
	0, 0, 285, 0, 0, 220, 0, 0, 0, 328,
	0, 271, 253, 0, 0, 0, 269, 223, 297, 261,
	303, 287, 311, 265, 262, 164, 288, 192, 234, 175,
	176, 188, 195, 197, 199, 200, 243, 244, 256, 276,
	290, 291, 292, 191, 184, 270, 185, 209, 186, 165,
	278, 187, 167, 257, 295, 0, 205, 266, 230, 168,
	229, 258, 294, 293, 319, 325, 326, 330, 0, 331,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 0, 0, 324, 203, 162, 307, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 323,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	214, 255, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 305, 317, 334,
	337, 0, 0, 0, 166, 336, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 316, 0, 0,
	0, 0, 0, 332, 239, 240, 241, 242, 206, 0,
	182, 335, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 202, 208, 0,
	210, 181, 254, 204, 314, 217, 0, 246, 213, 279,
	218, 224, 267, 313, 252, 272, 179, 304, 280, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 222, 0, 263, 201, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 0, 289, 0, 0, 0, 0, 320, 321,
	322, 306, 0, 193, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 281, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 122, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2037, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 286, 302,
	178, 277, 315, 183, 284, 174, 250, 273, 0, 0,
	171, 300, 283, 232, 215, 216, 170, 0, 268, 194,
	207, 190, 248, 0, 299, 327, 189, 318, 0, 310,
	173, 0, 309, 247, 296, 301, 233, 227, 172, 298,
	231, 226, 219, 198, 0, 211, 259, 225, 260, 212,
	237, 236, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 0, 0, 0, 0,
	0, 285, 0, 0, 220, 0, 0, 0, 328, 0,
	271, 253, 0, 0, 0, 269, 223, 297, 261, 303,
	287, 311, 265, 262, 164, 288, 192, 234, 175, 176,
	188, 195, 197, 199, 200, 243, 244, 256, 276, 290,
	291, 292, 191, 184, 270, 185, 209, 186, 165, 278,
	187, 167, 257, 295, 0, 205, 266, 230, 168, 229,
	258, 294, 293, 319, 325, 326, 330, 0, 331, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 0, 324, 203, 162, 307, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 323, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 214,
	255, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 305, 317, 334, 337,
	0, 0, 0, 166, 336, 0, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 332, 239, 240, 241, 242, 206, 0, 182,
	335, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 202, 208, 0, 210,
	181, 254, 204, 314, 217, 0, 246, 213, 279, 218,
	224, 267, 313, 252, 272, 179, 304, 280, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 222, 0, 263, 201, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 0, 289, 0, 0, 0, 0, 320, 321, 322,
	306, 0, 193, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	281, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 122, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2075, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 286, 302, 178,
	277, 315, 183, 284, 174, 250, 273, 0, 0, 171,
	300, 283, 232, 215, 216, 170, 0, 268, 194, 207,
	190, 248, 0, 299, 327, 189, 318, 0, 310, 173,
	0, 309, 247, 296, 301, 233, 227, 172, 298, 231,
	226, 219, 198, 0, 211, 259, 225, 260, 212, 237,
	236, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 0,
	285, 0, 0, 220, 0, 0, 0, 328, 0, 271,
	253, 0, 0, 0, 269, 223, 297, 261, 303, 287,
	311, 265, 262, 164, 288, 192, 234, 175, 176, 188,
	195, 197, 199, 200, 243, 244, 256, 276, 290, 291,
	292, 191, 184, 270, 185, 209, 186, 165, 278, 187,
	167, 257, 295, 0, 205, 266, 230, 168, 229, 258,
	294, 293, 319, 325, 326, 330, 0, 331, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 0, 324, 203, 162, 307, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 323, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 214, 255,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 305, 317, 334, 337, 0,
	0, 0, 166, 336, 0, 0, 0, 0, 0, 0,
	0, 308, 0, 0, 0, 316, 0, 0, 0, 0,
	0, 332, 239, 240, 241, 242, 206, 0, 182, 335,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 202, 208, 0, 210, 181,
	254, 204, 314, 217, 0, 246, 213, 279, 218, 224,
	267, 313, 252, 272, 179, 304, 280, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	222, 0, 263, 201, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	0, 289, 0, 0, 0, 0, 320, 321, 322, 306,
	0, 193, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 281,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	122, 0, 0, 969, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 286, 302, 178, 277,
	315, 183, 284, 174, 250, 273, 0, 0, 171, 300,
	283, 232, 215, 216, 170, 0, 268, 194, 207, 190,
	248, 0, 299, 327, 189, 318, 0, 310, 173, 0,
	309, 247, 296, 301, 233, 227, 172, 298, 231, 226,
	219, 198, 0, 211, 259, 225, 260, 212, 237, 236,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 0, 285,
	0, 0, 220, 0, 0, 0, 328, 0, 271, 253,
	0, 0, 0, 269, 223, 297, 261, 303, 287, 311,
	265, 262, 164, 288, 192, 234, 175, 176, 188, 195,
	197, 199, 200, 243, 244, 256, 276, 290, 291, 292,
	191, 184, 270, 185, 209, 186, 165, 278, 187, 167,
	257, 295, 0, 205, 266, 230, 168, 229, 258, 294,
	293, 319, 325, 326, 330, 0, 331, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 0, 0,
	0, 324, 203, 162, 307, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 323, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 214, 255, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 305, 317, 334, 337, 0, 0,
	0, 166, 336, 0, 0, 0, 0, 0, 0, 0,
	308, 0, 0, 0, 316, 0, 0, 0, 0, 0,
	332, 239, 240, 241, 242, 206, 0, 182, 335, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 202, 208, 0, 210, 181, 254,
	204, 314, 217, 0, 246, 213, 279, 218, 224, 267,
	313, 252, 272, 179, 304, 280, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 222,
	0, 263, 201, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 0,
	289, 0, 0, 0, 0, 320, 321, 322, 306, 0,
	193, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 281, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 122,
	0, 0, 1902, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 286, 302, 178, 277, 315,
	183, 284, 174, 250, 273, 0, 0, 171, 300, 283,
	232, 215, 216, 170, 0, 268, 194, 207, 190, 248,
	0, 299, 327, 189, 318, 0, 310, 173, 0, 309,
	247, 296, 301, 233, 227, 172, 298, 231, 226, 219,
	198, 0, 211, 259, 225, 260, 212, 237, 236, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 0, 285, 0,
	0, 220, 0, 0, 0, 328, 0, 271, 253, 0,
	0, 0, 269, 223, 297, 261, 303, 287, 311, 265,
	262, 164, 288, 192, 234, 175, 176, 188, 195, 197,
	199, 200, 243, 244, 256, 276, 290, 291, 292, 191,
	184, 270, 185, 209, 186, 165, 278, 187, 167, 257,
	295, 0, 205, 266, 230, 168, 229, 258, 294, 293,
	319, 325, 326, 330, 0, 331, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 0, 0, 0,
	324, 203, 162, 307, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 323, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 214, 255, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 305, 317, 334, 337, 0, 0, 0,
	166, 336, 0, 0, 0, 0, 0, 0, 0, 308,
	0, 0, 0, 316, 0, 0, 0, 0, 0, 332,
	239, 240, 241, 242, 206, 0, 182, 335, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 202, 208, 0, 210, 181, 254, 204,
	314, 217, 0, 246, 213, 279, 218, 224, 267, 313,
	252, 272, 179, 304, 280, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 222, 0,
	263, 201, 125, 126, 127, 128, 129, 130, 131, 132,
	133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 0, 289,
	0, 0, 0, 0, 320, 321, 322, 306, 0, 193,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 281, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 122, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1719,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 286, 302, 178, 277, 315, 183,
	284, 174, 250, 273, 0, 0, 171, 300, 283, 232,
	215, 216, 170, 0, 268, 194, 207, 190, 248, 0,
	299, 327, 189, 318, 0, 310, 173, 0, 309, 247,
	296, 301, 233, 227, 172, 298, 231, 226, 219, 198,
	0, 211, 259, 225, 260, 212, 237, 236, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 0, 0, 0, 0, 0, 285, 0, 0,
	220, 0, 0, 0, 328, 0, 271, 253, 0, 0,
	0, 269, 223, 297, 261, 303, 287, 311, 265, 262,
	164, 288, 192, 234, 175, 176, 188, 195, 197, 199,
	200, 243, 244, 256, 276, 290, 291, 292, 191, 184,
	270, 185, 209, 186, 165, 278, 187, 167, 257, 295,
	0, 205, 266, 230, 168, 229, 258, 294, 293, 319,
	325, 326, 330, 0, 331, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 0, 324,
	203, 162, 307, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 323, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 214, 255, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 305, 317, 334, 337, 0, 0, 0, 166,
	336, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	0, 0, 316, 0, 0, 0, 0, 0, 332, 239,
	240, 241, 242, 206, 0, 182, 335, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 202, 208, 0, 210, 181, 254, 204, 314,
	217, 0, 246, 213, 279, 218, 224, 267, 313, 252,
	272, 179, 304, 280, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 222, 0, 263,
	201, 125, 126, 127, 128, 129, 130, 131, 132, 133,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 0, 289, 0,
	0, 0, 0, 320, 321, 322, 306, 0, 193, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 281, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 122, 0, 0,
	1717, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 286, 302, 178, 277, 315, 183, 284,
	174, 250, 273, 0, 0, 171, 300, 283, 232, 215,
	216, 170, 0, 268, 194, 207, 190, 248, 0, 299,
	327, 189, 318, 0, 310, 173, 0, 309, 247, 296,
	301, 233, 227, 172, 298, 231, 226, 219, 198, 0,
	211, 259, 225, 260, 212, 237, 236, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 220,
	0, 0, 0, 328, 0, 271, 253, 0, 0, 0,
	269, 223, 297, 261, 303, 287, 311, 265, 262, 164,
	288, 192, 234, 175, 176, 188, 195, 197, 199, 200,
	243, 244, 256, 276, 290, 291, 292, 191, 184, 270,
	185, 209, 186, 165, 278, 187, 167, 257, 295, 0,
	205, 266, 230, 168, 229, 258, 294, 293, 319, 325,
	326, 330, 0, 331, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 0, 0, 0, 324, 203,
	162, 307, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 323, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 214, 255, 0, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 305, 317, 334, 337, 0, 0, 0, 166, 336,
	0, 0, 0, 0, 0, 0, 0, 308, 0, 0,
	0, 316, 0, 0, 0, 0, 0, 332, 239, 240,
	241, 242, 206, 0, 182, 335, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 202, 208, 0, 210, 181, 254, 204, 314, 217,
	0, 246, 213, 279, 218, 224, 267, 313, 252, 272,
	179, 304, 280, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 222, 0, 263, 201,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 0, 289, 0, 0,
	0, 1644, 320, 321, 322, 306, 0, 193, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 281, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 122, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 286, 302, 178, 277, 315, 183, 284, 174,
	250, 273, 0, 0, 171, 300, 283, 232, 215, 216,
	170, 0, 268, 194, 207, 190, 248, 0, 299, 327,
	189, 318, 0, 310, 173, 0, 309, 247, 296, 301,
	233, 227, 172, 298, 231, 226, 219, 198, 0, 211,
	259, 225, 260, 212, 237, 236, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	0, 0, 0, 0, 0, 285, 0, 0, 220, 0,
	0, 0, 328, 0, 271, 253, 0, 0, 0, 269,
	223, 297, 261, 303, 287, 311, 265, 262, 164, 288,
	192, 234, 175, 176, 188, 195, 197, 199, 200, 243,
	244, 256, 276, 290, 291, 292, 191, 184, 270, 185,
	209, 186, 165, 278, 187, 167, 257, 295, 0, 205,
	266, 230, 168, 229, 258, 294, 293, 319, 325, 326,
	330, 0, 331, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 0, 0, 324, 203, 162,
	307, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 323, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 214, 255, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	305, 317, 334, 337, 0, 0, 0, 166, 336, 0,
	0, 0, 0, 0, 0, 0, 308, 0, 0, 0,
	316, 0, 0, 0, 0, 0, 332, 239, 240, 241,
	242, 206, 0, 182, 335, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	202, 208, 0, 210, 181, 254, 204, 314, 217, 0,
	246, 213, 279, 218, 224, 267, 313, 252, 272, 179,
	304, 280, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 222, 0, 263, 201, 125,
	126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 0, 289, 0, 0, 0,
	0, 320, 321, 322, 306, 0, 193, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 281, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 122, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 286, 302, 178, 277, 315, 183, 284, 174, 250,
	273, 0, 0, 171, 300, 283, 232, 215, 216, 170,
	0, 268, 194, 207, 190, 248, 0, 299, 327, 189,
	318, 0, 310, 173, 0, 309, 247, 296, 301, 233,
	227, 172, 298, 231, 226, 219, 198, 0, 211, 259,
	225, 260, 212, 237, 236, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 0,
	1627, 0, 0, 0, 285, 0, 0, 220, 0, 0,
	0, 328, 0, 271, 253, 0, 0, 0, 269, 223,
	297, 261, 303, 287, 311, 265, 262, 164, 288, 192,
	234, 175, 176, 188, 195, 197, 199, 200, 243, 244,
	256, 276, 290, 291, 292, 191, 184, 270, 185, 209,
	186, 165, 278, 187, 167, 257, 295, 0, 205, 266,
	230, 168, 229, 258, 294, 293, 319, 325, 326, 330,
	0, 331, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 0, 324, 203, 162, 307,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 323, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 214, 255, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 305,
	317, 334, 337, 0, 0, 0, 166, 336, 0, 0,
	0, 0, 0, 0, 0, 308, 0, 0, 0, 316,
	0, 0, 0, 0, 0, 332, 239, 240, 241, 242,
	206, 0, 182, 335, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 202,
	208, 0, 210, 181, 254, 204, 314, 217, 0, 246,
	213, 279, 218, 224, 267, 313, 252, 272, 179, 304,
	280, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 222, 0, 263, 201, 125, 126,
	127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 0, 289, 0, 0, 0, 0,
	320, 321, 322, 306, 0, 193, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 281, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 122, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	286, 302, 178, 277, 315, 183, 284, 174, 250, 273,
	0, 0, 171, 300, 283, 232, 215, 216, 170, 0,
	268, 194, 207, 190, 248, 0, 299, 327, 189, 318,
	0, 310, 173, 0, 309, 247, 296, 301, 233, 227,
	172, 298, 231, 226, 219, 198, 0, 211, 259, 225,
	260, 212, 237, 236, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 0, 0,
	0, 0, 0, 285, 0, 0, 220, 0, 0, 0,
	328, 0, 271, 253, 0, 0, 0, 269, 223, 297,
	261, 303, 287, 311, 265, 262, 164, 288, 192, 234,
	175, 176, 188, 195, 197, 199, 200, 243, 244, 256,
	276, 290, 291, 292, 191, 184, 270, 185, 209, 186,
	165, 278, 187, 167, 257, 295, 0, 205, 266, 230,
	168, 229, 258, 294, 293, 319, 325, 326, 330, 0,
	331, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 0, 0, 324, 203, 162, 307, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	323, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 214, 255, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 305, 317,
	334, 337, 0, 0, 0, 166, 336, 0, 0, 0,
	0, 0, 0, 0, 308, 0, 0, 0, 316, 0,
	0, 0, 0, 0, 332, 239, 240, 241, 242, 206,
	0, 182, 335, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 202, 208,
	0, 210, 181, 254, 204, 314, 217, 0, 246, 213,
	279, 218, 224, 267, 313, 252, 272, 179, 304, 280,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 0, 0,
	0, 163, 0, 222, 0, 263, 201, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 0, 289, 0, 0, 0, 0, 320,
	321, 322, 306, 0, 193, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 281, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 122, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 286,
	302, 178, 277, 315, 183, 284, 174, 250, 273, 0,
	0, 171, 300, 283, 232, 215, 216, 170, 0, 268,
	194, 207, 190, 248, 0, 299, 327, 189, 318, 0,
	310, 173, 0, 309, 247, 296, 301, 233, 227, 172,
	298, 231, 226, 219, 198, 0, 211, 259, 225, 260,
	212, 237, 236, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 0, 0, 0,
	0, 0, 285, 0, 0, 220, 0, 0, 0, 328,
	0, 271, 253, 0, 0, 0, 269, 223, 297, 261,
	303, 287, 311, 365, 262, 164, 288, 192, 234, 175,
	176, 188, 195, 197, 199, 200, 243, 244, 256, 276,
	290, 291, 292, 191, 184, 270, 185, 209, 186, 165,
	278, 187, 167, 257, 295, 0, 205, 266, 230, 168,
	229, 258, 294, 293, 319, 325, 326, 330, 0, 331,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 0, 0, 324, 203, 162, 307, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 323,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	214, 255, 0, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 305, 317, 334,
	337, 0, 0, 0, 166, 336, 0, 0, 0, 0,
	0, 0, 366, 308, 0, 0, 0, 316, 0, 0,
	0, 0, 0, 332, 239, 240, 241, 242, 206, 0,
	182, 335, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 202, 208, 0,
	210, 181, 254, 204, 314, 217, 0, 246, 213, 279,
	218, 224, 267, 313, 252, 272, 179, 304, 280, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 222, 0, 263, 201, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 0, 289, 0, 0, 0, 0, 320, 321,
	322, 306, 0, 193, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 281, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 122, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 286, 302,
	178, 277, 315, 183, 284, 174, 250, 273, 0, 0,
	171, 300, 283, 232, 215, 216, 170, 0, 268, 194,
	207, 190, 248, 0, 299, 327, 189, 318, 0, 310,
	173, 0, 309, 247, 296, 301, 233, 227, 172, 298,
	231, 226, 219, 198, 0, 211, 259, 225, 260, 212,
	237, 236, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 312, 0, 0, 0, 0, 0,
	0, 285, 0, 0, 220, 0, 0, 0, 328, 0,
	271, 253, 0, 0, 0, 269, 223, 297, 261, 303,
	287, 311, 265, 262, 164, 288, 192, 234, 175, 176,
	188, 195, 197, 199, 200, 243, 244, 256, 276, 290,
	291, 292, 191, 184, 270, 185, 209, 186, 165, 278,
	187, 167, 257, 295, 0, 205, 266, 230, 168, 229,
	258, 294, 293, 319, 325, 326, 330, 0, 331, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 0, 324, 203, 162, 307, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 323, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 214,
	255, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 305, 317, 334, 337,
	0, 0, 0, 166, 336, 0, 0, 0, 0, 0,
	0, 0, 308, 0, 0, 0, 316, 0, 0, 0,
	0, 0, 332, 239, 240, 241, 242, 206, 0, 182,
	335, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 202, 208, 0, 210,
	181, 254, 204, 314, 217, 0, 246, 213, 279, 218,
	224, 267, 313, 252, 272, 179, 304, 280, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 222, 0, 263, 201, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 0, 289, 0, 0, 0, 0, 320, 321, 322,
	306, 0, 193, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	196, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	281, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 122, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 286, 302, 178,
	277, 315, 183, 284, 174, 250, 273, 0, 0, 171,
	300, 283, 232, 215, 216, 170, 0, 268, 194, 207,
	190, 248, 0, 299, 327, 189, 318, 0, 310, 173,
	0, 309, 247, 296, 301, 233, 227, 172, 298, 231,
	226, 219, 198, 0, 211, 259, 225, 260, 212, 237,
	236, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 0,
	285, 0, 0, 220, 0, 0, 0, 328, 0, 271,
	253, 0, 0, 0, 269, 223, 297, 261, 303, 287,
	311, 265, 262, 164, 288, 192, 234, 175, 176, 188,
	195, 197, 199, 200, 243, 244, 256, 276, 290, 291,
	292, 191, 184, 270, 185, 209, 186, 165, 278, 187,
	167, 257, 295, 0, 205, 266, 230, 168, 229, 258,
	294, 293, 319, 325, 326, 330, 0, 331, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 0, 324, 203, 162, 307, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 323, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 214, 255,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 305, 317, 334, 337, 0,
	0, 0, 166, 336, 0, 0, 0, 0, 0, 0,
	0, 308, 0, 0, 0, 316, 0, 0, 0, 0,
	0, 332, 239, 240, 241, 242, 206, 0, 182, 335,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 202, 208, 0, 210, 181,
	254, 204, 314, 217, 0, 246, 213, 279, 218, 224,
	267, 313, 252, 272, 179, 304, 280, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	222, 0, 263, 201, 125, 126, 127, 128, 129, 130,
	131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	0, 289, 0, 0, 0, 0, 320, 321, 322, 306,
	0, 193, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 281,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	122, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 286, 302, 178, 277,
	315, 183, 284, 174, 250, 273, 0, 0, 171, 300,
	283, 232, 215, 216, 170, 0, 268, 194, 207, 190,
	248, 0, 299, 327, 189, 318, 0, 310, 173, 0,
	309, 247, 296, 301, 233, 227, 172, 298, 231, 226,
	219, 198, 0, 211, 259, 225, 260, 212, 237, 236,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 0, 285,
	0, 0, 220, 0, 0, 0, 328, 0, 271, 253,
	0, 0, 0, 269, 223, 297, 261, 303, 287, 311,
	265, 262, 164, 288, 192, 234, 175, 176, 188, 195,
	197, 199, 200, 243, 244, 256, 276, 290, 291, 292,
	191, 184, 270, 185, 209, 186, 165, 278, 187, 167,
	257, 295, 0, 205, 266, 230, 168, 229, 258, 294,
	293, 319, 325, 326, 330, 0, 331, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 0, 0,
	0, 324, 203, 162, 307, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 323, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 214, 255, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 305, 317, 334, 337, 0, 0,
	0, 166, 336, 0, 0, 0, 0, 0, 0, 0,
	308, 0, 0, 0, 316, 0, 0, 0, 0, 0,
	332, 239, 240, 241, 242, 206, 0, 182, 335, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 202, 208, 0, 210, 181, 254,
	204, 314, 217, 0, 246, 213, 279, 218, 224, 267,
	313, 252, 272, 179, 304, 280, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 222,
	0, 263, 201, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 0,
	289, 0, 0, 0, 0, 320, 321, 322, 306, 0,
	193, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1686, 0, 0, 0, 0, 196, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 281, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 660,
	661, 662, 1688, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 286, 302, 178, 277, 315,
	183, 284, 174, 250, 273, 0, 0, 171, 300, 283,
	232, 215, 216, 170, 0, 268, 194, 207, 190, 248,
	0, 299, 327, 189, 318, 0, 310, 173, 0, 309,
	247, 296, 301, 233, 227, 172, 298, 231, 226, 219,
	198, 0, 211, 259, 225, 260, 212, 237, 236, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 0, 0, 0, 0, 0, 285, 0,
	0, 220, 0, 0, 0, 328, 0, 271, 253, 0,
	0, 0, 269, 223, 297, 261, 303, 287, 311, 265,
	262, 164, 288, 192, 234, 175, 176, 188, 195, 197,
	199, 200, 243, 244, 256, 276, 290, 291, 292, 191,
	184, 270, 185, 209, 186, 165, 278, 187, 167, 257,
	295, 0, 205, 266, 230, 168, 229, 258, 294, 293,
	319, 325, 326, 330, 0, 331, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 0, 0, 0,
	324, 203, 162, 307, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 323, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 214, 255, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 305, 317, 334, 337, 0, 0, 0,
	166, 336, 0, 0, 0, 0, 0, 0, 0, 308,
	0, 0, 0, 316, 0, 0, 0, 0, 0, 332,
	239, 240, 241, 242, 206, 0, 182, 335, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 329, 202, 208, 0, 210, 181, 254, 204,
	314, 217, 251, 246, 213, 279, 218, 224, 267, 313,
	252, 272, 179, 304, 280, 228, 0, 0, 0, 196,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 281,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	660, 661, 662, 1688, 0, 0, 163, 177, 222, 0,
	263, 201, 0, 0, 0, 0, 0, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 321, 322, 306, 0, 193,
	0, 0, 0, 0, 0, 169, 286, 302, 178, 277,
	315, 183, 284, 174, 250, 273, 0, 0, 171, 300,
	283, 232, 215, 216, 170, 0, 268, 194, 207, 190,
	248, 0, 299, 327, 189, 318, 0, 310, 173, 0,
	309, 247, 296, 301, 233, 227, 172, 298, 231, 226,
	219, 198, 0, 211, 259, 225, 260, 212, 237, 236,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 0, 0, 0, 0, 0, 285,
	0, 0, 220, 0, 0, 0, 328, 0, 271, 253,
	0, 0, 0, 269, 223, 297, 261, 303, 287, 311,
	265, 262, 164, 288, 192, 234, 175, 176, 188, 195,
	197, 199, 200, 243, 244, 256, 276, 290, 291, 292,
	191, 184, 270, 185, 209, 186, 165, 278, 187, 167,
	257, 295, 0, 205, 266, 230, 168, 229, 258, 294,
	293, 319, 325, 326, 330, 0, 331, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 0, 0,
	0, 324, 203, 162, 307, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 323, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 214, 255, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 305, 317, 334, 337, 0, 0,
	0, 166, 336, 0, 0, 0, 0, 0, 0, 0,
	308, 0, 0, 0, 316, 0, 0, 0, 0, 0,
	332, 239, 240, 241, 242, 206, 0, 182, 335, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 329, 202, 208, 0, 210, 181, 254,
	204, 314, 217, 251, 246, 213, 279, 218, 224, 267,
	313, 252, 272, 179, 304, 280, 228, 0, 0, 0,
	196, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	281, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 660, 661, 662, 0, 0, 0, 163, 177, 222,
	0, 263, 201, 0, 0, 0, 0, 0, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 320, 321, 322, 306, 0,
	193, 0, 0, 0, 0, 0, 169, 286, 302, 178,
	277, 315, 183, 284, 174, 250, 273, 0, 0, 171,
	300, 283, 232, 215, 216, 170, 0, 268, 194, 207,
	190, 248, 0, 299, 327, 189, 318, 0, 310, 173,
	0, 309, 247, 296, 301, 233, 227, 172, 298, 231,
	226, 219, 198, 0, 211, 259, 225, 260, 212, 237,
	236, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 0, 0, 0, 0, 0,
	285, 0, 0, 220, 0, 0, 0, 328, 0, 271,
	253, 0, 0, 0, 269, 223, 297, 261, 303, 287,
	311, 265, 262, 164, 288, 192, 234, 175, 176, 188,
	195, 197, 199, 200, 243, 244, 256, 276, 290, 291,
	292, 191, 184, 270, 185, 209, 186, 165, 278, 187,
	167, 257, 295, 0, 205, 266, 230, 168, 229, 258,
	294, 293, 319, 325, 326, 330, 0, 331, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 0, 324, 203, 162, 307, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 323, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 214, 255,
	0, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 305, 317, 334, 337, 0,
	0, 844, 166, 336, 0, 0, 0, 0, 0, 0,
	0, 308, 0, 0, 0, 316, 0, 0, 0, 0,
	0, 332, 239, 240, 241, 242, 206, 0, 182, 335,
	264, 0, 0, 0, 737, 738, 739, 736, 0, 0,
	0, 0, 0, 0, 329, 202, 208, 0, 210, 181,
	254, 204, 314, 217, 0, 246, 213, 279, 218, 224,
	267, 313, 252, 272, 179, 304, 280, 228, 0, 0,
	0, 0, 844, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 832, 0, 0, 0, 0, 0, 0, 163, 1125,
	222, 0, 263, 201, 0, 0, 0, 0, 0, 852,
	856, 858, 860, 862, 863, 865, 0, 869, 866, 867,
	868, 0, 0, 847, 848, 849, 850, 830, 831, 853,
	0, 833, 0, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 845, 851, 844, 320, 321, 322, 306,
	0, 193, 855, 857, 859, 861, 864, 0, 0, 0,
	0, 0, 832, 0, 0, 0, 822, 0, 0, 0,
	0, 1125, 0, 0, 0, 0, 0, 0, 0, 0,
	852, 856, 858, 860, 862, 863, 865, 846, 869, 866,
	867, 868, 0, 0, 847, 848, 849, 850, 830, 831,
	853, 0, 833, 0, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 845, 851, 0, 0, 0, 0,
	0, 0, 0, 855, 857, 859, 861, 864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1121,
	0, 0, 1118, 0, 0, 832, 1120, 1117, 1119, 1123,
	1124, 0, 0, 0, 1122, 0, 0, 0, 846, 0,
	0, 0, 0, 852, 856, 858, 860, 862, 863, 865,
	0, 869, 866, 867, 868, 0, 0, 847, 848, 849,
	850, 830, 831, 853, 0, 833, 0, 834, 835, 836,
	837, 838, 839, 840, 841, 842, 843, 845, 851, 0,
	0, 0, 0, 0, 1767, 1768, 855, 857, 859, 861,
	864, 1121, 0, 0, 1118, 0, 0, 0, 1120, 1117,
	1119, 1123, 1124, 0, 0, 0, 1122, 0, 0, 0,
	2195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 846, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1642, 0, 0, 0, 1106, 1107,
	1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1128,
	1129, 1130, 1131, 1132, 1133, 1126, 1127, 1642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 854,
	0, 0, 0, 0, 2177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115,
	1116, 1128, 1129, 1130, 1131, 1132, 1133, 1126, 1127, 0,
	0, 0, 385, 0, 384, 391, 381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 389, 0, 390,
	394, 2272, 0, 376, 385, 0, 384, 391, 381, 0,
	854, 0, 0, 399, 0, 0, 0, 0, 388, 389,
	0, 390, 394, 0, 0, 376, 385, 0, 384, 391,
	381, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	388, 389, 403, 390, 394, 404, 0, 376, 0, 0,
	0, 0, 0, 0, 0, 2181, 0, 399, 0, 0,
	0, 0, 0, 0, 403, 0, 2185, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2181, 0,
	0, 0, 0, 0, 0, 0, 2174, 0, 0, 2185,
	2176, 2178, 2180, 854, 2182, 2183, 2184, 2186, 2187, 2188,
	2190, 2191, 2192, 2193, 0, 0, 0, 0, 0, 2174,
	0, 0, 0, 2176, 2178, 2180, 0, 2182, 2183, 2184,
	2186, 2187, 2188, 2190, 2191, 2192, 2193, 0, 0, 0,
	0, 0, 0, 2196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2194, 0,
	0, 0, 0, 0, 377, 379, 378, 0, 0, 0,
	0, 0, 0, 383, 0, 2173, 0, 0, 0, 0,
	0, 2194, 0, 0, 0, 387, 377, 379, 378, 0,
	0, 0, 402, 0, 0, 383, 0, 0, 2173, 380,
	0, 0, 0, 371, 2189, 0, 0, 387, 377, 379,
	378, 2179, 0, 0, 402, 0, 0, 383, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 2189, 0, 387,
	0, 0, 0, 0, 2179, 0, 402, 0, 0, 0,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 382, 386, 392,
	0, 393, 395, 0, 0, 396, 397, 398, 0, 0,
	400, 401, 0, 0, 0, 0, 0, 0, 0, 382,
	386, 392, 0, 393, 395, 0, 0, 396, 397, 398,
	0, 0, 400, 401, 0, 0, 0, 0, 0, 0,
	0, 382, 386, 392, 0, 393, 395, 0, 0, 396,
	397, 398, 0, 0, 400, 401,
}

var yyPact = [...]int{
	214, -1000, -300, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -149, 23701, 23701, -1000, -1000, 1650,
	-1000, 23212, 8542, 24190, 135, 24190, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 358, -1000, 22723, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 322, 26252, 241, 237, 6565, 24190, -284, -1000,
	2056, -1000, -1000, -1000, -1000, -1000, 275, 380, 22234, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1103, 65, 380, 467, 471, 658, 658,
	10009, 2056, 248, 68, -1000, 880, 214, 25441, 299, 24190,
	-1000, 843, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 299, -1000,
	-1000, -1000, 2056, 2056, -1000, 24190, 24190, -20, 1065, -1000,
	249, 243, 262, 840, -1000, -1000, -1000, -1000, -1000, 2124,
	-1000, 24190, 1774, 24190, -1000, 1290, 271, 26274, 1934, 597,
	430, 1789, -1000, -1000, 1753, -1000, 77, 133, 92, 625,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 111, -1000, 2020,
	-1000, -1000, 69, -1000, -1000, 71, -1000, -1000, -1000, -80,
	-1000, -1000, -1000, -1000, -1000, -142, -142, 543, 1198, 6565,
	-1000, 1283, -1000, 1766, -1000, -1000, -1000, -1000, 4097, 8041,
	8041, 8041, 8041, -1000, -1000, 1635, 6565, 1751, 1750, -1000,
	-1000, -1000, -1000, -1000, 833, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 7549, -1000, 1746,
	1743, 1738, 1736, 1734, 1729, 1715, 1713, 1708, 1705, 1701,
	1553, 1699, 1410, 1407, 1698, 1697, 1696, 8041, 1406, 1553,
	1553, 1695, 1693, 1692, 1684, 1678, 1677, 1675, 1672, 1671,
	1669, 1668, 1666, 1665, 1663, 1661, 1660, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 25832, -1000, 831, 813, -1000, 1657, 1915, 2051, 1583,
	2096, 2013, 2011, 2004, 2000, 24190, 60, 321, 321, 321,
	343, 321, 357, -1000, -1000, -1000, -1000, -1000, -1000, 435,
	-1000, -1000, -1000, -1000, 754, 24190, -1000, 1586, 900, 2046,
	281, 900, 264, 278, 2051, 2051, -76, -96, 900, 900,
	-96, 102, -1000, -1000, -1000, 1009, 280, 1009, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1997, 1984, 322, 322, 326,
	-1000, -168, -1000, -1000, 452, -1000, 448, -1000, 1290, 269,
	260, 765, 1029, -1000, 1051, 24190, 24190, 24190, 1051, 1051,
	13432, 12943, -1000, 2051, 1583, -1000, 1526, 1590, 1583, 322,
	322, 322, 322, 322, 322, 322, 24190, 5573, 5573, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 290, -1000, -1000,
	-1000, -1000, -1000, 238, 1656, -1000, 24190, 236, 2051, 1915,
	2051, -1000, -1000, 826, 1249, 1402, -1000, -1000, 249, 1024,
	-1000, 560, -1000, -1000, -1000, -1000, 24190, 222, -1000, 1379,
	1655, -1000, 344, 551, 735, -1000, 170, 26296, 19300, 1290,
	19300, 24190, -1000, -1000, -1000, -1000, -1000, -1000, -84, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -33, -1000, -33, 6565, 6565, 6565, 6565, 6565,
	-1000, 393, 7057, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	8041, 8041, 8041, 8041, 8041, 8041, 8041, 8041, 8041, 8041,
	8041, 8041, 1632, 1075, 8041, 8041, 8041, 1590, 2027, 762,
	-1000, -1000, -1000, -1000, -1000, 988, 1198, 6565, 6565, 24190,
	25734, 6565, 6565, 25806, 6565, 1986, 1986, 3104, 24190, 6565,
	-1000, 1523, 1521, -1000, -1000, 1203, 6565, -1000, -1000, 6565,
	8041, 6565, -1000, -1000, -1000, -1000, 99, 1986, 6565, 6565,
	1986, 1986, 1986, 1071, 1986, 1986, 1986, 1986, 1986, 1986,
	1986, 1401, 24190, 1898, 44, -1000, -1000, -1000, 1571, -1000,
	1610, 1610, 1571, 1571, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1653, 1652, -1000, -1000, 1609, 1609, 1609,
	1571, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1647, 1647, 1649, 1647,
	24190, 2051, -284, 5081, -1000, -287, 1915, 6565, -1000, -1000,
	6565, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1638,
	-1000, 346, 321, -1000, 24190, 1084, 19300, 1290, 1262, 24190,
	321, 326, -1000, 24190, 754, 1972, 24190, 2108, 8041, 19300,
	1009, 2108, 1009, -1000, -1000, -1000, 900, 900, -1000, -1000,
	-1000, -1000, 1009, 1009, -1000, -1000, -86, 2108, 2108, -79,
	24190, 24190, 321, 24190, -1000, -1000, -1000, -1000, 24190, -1000,
	-1000, 24190, 19300, 12454, -1000, -123, 461, 455, 457, -1000,
	-1000, 341, 328, 11965, 285, 19300, 3596, -1000, -1000, 1051,
	1051, 1051, 3596, 3596, 779, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1915, -1000, -1000, -1000, -1000, 24190, 19300, 1290,
	24190, 24190, 24190, 25441, -1000, 641, -1000, -1000, 9520, 822,
	641, 1386, 24190, 1788, -285, -1000, 11476, 24190, 24190, -1000,
	-1000, -285, -1000, 10987, 24190, 1915, -1000, 1915, 2630, -1000,
	2036, -1000, 249, 148, -1000, -1000, -1000, -1000, -1000, -1000,
	819, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	753, -1000, 24190, -1000, -1000, 170, 19300, 1013, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 106, -1000, -1000, 140, -1000,
	342, 6, 1007, -1000, -1000, 59, 137, 59, 1198, -1000,
	1083, 1083, 1076, -1000, 422, -1000, -1000, -1000, -1000, 1635,
	-1000, -1000, -1000, 2264, 2060, -1000, 1038, 1038, 851, 851,
	851, 851, 851, 1112, 1112, -1000, -1000, -1000, 4097, 1632,
	8041, 8041, 8041, 305, 2334, 2988, -1000, 6565, 1074, -1000,
	6565, 1337, 1060, 815, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1520, 543, 1518, 1395, 2112, 1517,
	6565, -1000, -1000, 6565, 1355, 6073, -1000, -1000, -1000, 1515,
	808, 1511, -1000, -1000, -1000, 1510, 610, 1494, 1450, 1492,
	749, 6565, 1006, 1004, 6565, 6565, 6565, 6565, 1491, 6565,
	6565, 6565, 6565, 6565, 6565, 6565, 728, -1000, 6565, 41,
	-1000, -1000, -1000, -1000, 1247, -1000, 1246, -1000, -1000, -1000,
	1370, 1370, -1000, 1244, -1000, -1000, -1000, -1000, 1242, -1000,
	-1000, 1238, -1000, -1000, -1000, -1000, 997, -1000, 1198, -1000,
	1366, -1000, 950, 718, -1000, 1345, 25915, 21745, 24190, 31,
	-1000, 1928, 583, -1000, 6, 580, 1762, 1878, 24190, 21256,
	-1000, 1628, 996, -1000, -1000, 6565, -1000, 1761, 24190, -1000,
	24190, 2108, 2108, 900, 25441, 1009, 24190, 1009, -1000, -1000,
	1009, -1000, 805, -1000, 24190, -1000, -1000, -1000, -1000, 31,
	583, 2075, 799, -1000, -1000, -1000, -1000, 1949, 24679, 10498,
	24679, 1627, 1626, -1000, -1000, 464, 446, 440, -1000, -1000,
	330, -1000, -1000, 580, -1000, -1000, -1000, 1625, 1064, -1000,
	-1000, 8041, -1000, 3596, 3596, 3596, -1000, -1000, 15388, -1000,
	-1000, 717, 580, 1787, 713, -1000, 713, -1000, 2108, 5573,
	-1000, 12454, -1000, -1000, 20767, -1000, 20278, 2108, -291, 587,
	-1000, 1900, 586, -1000, 1622, -1000, 989, 1867, -1000, 526,
	-1000, 1034, 986, -1000, 586, 983, 1830, 526, -1000, -1000,
	-1000, 797, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -26, -1000, -1000, 24190, 1379, 982, 1013,
	637, -1000, 329, 796, 794, -1000, 19300, 66, 19300, -1000,
	19300, -1000, -1000, 247, -1000, 24190, 1908, -1000, -1000, -1000,
	1361, 1907, -1000, -1000, -1000, -1000, -1000, 977, -1000, 305,
	2334, 2954, -1000, 8041, 8041, 1999, 972, -1000, 6565, 1175,
	25761, 1382, 14410, 24190, -1000, -1000, 6565, 6565, -1000, 1962,
	1958, -1000, 6565, 6565, 1380, -1000, 24190, -1000, -1000, -1000,
	14410, -1000, 8041, -1000, 6565, 1948, -1000, -1000, 1929, 1920,
	1911, 970, -1000, 1903, 1882, 1844, 1839, 1757, 1618, 1564,
	1360, 1198, -1000, -1000, 1490, 1488, 963, -1000, 959, 1482,
	951, 946, 5081, -1000, -104, 6565, 6565, 6565, 1873, -1000,
	-1000, 1481, 700, -1000, -1000, 24190, 1586, 1079, 1620, -65,
	1003, -1000, 336, 19300, 251, -1000, 1780, 171, -1000, 1878,
	-1000, 628, -1000, 1617, 24190, 603, -1000, 792, 214, -1000,
	24190, 1198, -1000, 1290, 900, 2108, -1000, -1000, 2108, -1000,
	900, -1000, 900, 1009, 24190, -1000, -65, 336, 24190, 12454,
	12454, 12454, 12454, -1000, 1816, 1815, -1000, 1813, 1812, 1855,
	24190, 12454, 24190, -1000, -1000, -1000, 25060, -1000, -1000, -1000,
	-1000, 924, 1475, 2056, 1866, 10498, 472, 19789, 6565, -1000,
	-1000, -1000, 432, 19300, 1358, 285, -1000, -1000, -1000, -1000,
	-1000, 24190, 24190, 2105, -1000, 654, -1000, -1000, 790, -1000,
	2105, -1000, 1236, 1352, 1107, -285, 5081, 244, 24190, -285,
	24190, 5081, -1000, 24190, 219, -285, 2630, 1233, -1000, -1000,
	-1000, 2110, 19300, 1290, 889, 932, -1000, 61, -1000, 103,
	319, 1351, -1000, 355, 1033, 350, -1000, -1000, 8041, -1000,
	-1000, -1000, -1000, 1198, 6565, 1474, -1000, 418, 418, 1469,
	-1000, 1571, 1610, -1000, 1571, 1609, 1571, 418, 418, 1467,
	-1000, 1250, 1550, -1000, -1000, 1532, 1524, 6565, -1000, 1465,
	2477, 693, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1464, -1000, -1000, -1000, 1349, -1000,
	-1000, -1000, 1226, -1000, 1225, -1000, -56, -43, 1198, 1198,
	-1000, -1000, 1861, 361, 25915, -1000, 1943, 1921, 9031, 1217,
	-1000, -1000, 1347, -1000, 306, -1000, -1000, -1000, 365, 88,
	1222, 292, -1000, 1414, 24190, -1000, -1000, -1000, -1000, -1000,
	1003, 1003, 1003, 9031, 299, 726, 776, 12454, 24190, -1000,
	18322, 1460, -1000, 580, 2108, -1000, -1000, 2108, 2108, 900,
	-1000, 1217, 306, 672, -1000, 1032, 1758, 1777, 1758, -1000,
	-1000, -1000, -1000, 1804, -1000, 1802, -1000, -1000, 672, -1000,
	1586, -1000, -1000, -1000, 1458, -1000, 472, -1000, 2035, 494,
	494, 494, 901, 895, 882, -1000, 637, 1451, -1000, -1000,
	-1000, -1000, 2103, 2094, 18811, 2103, -1000, -291, 2130, -1000,
	1443, 622, -285, -1000, -1000, 586, -1000, -1000, -1000, -285,
	-1000, 586, -1000, -1000, -1000, -1000, -1000, 1290, -1000, 97,
	-1000, -1000, -1000, -1000, -1000, -1000, -9, -1000, 24190, 1346,
	24190, -1000, 1198, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 6565, -1000,
	-1000, -1000, 1514, -1000, -1000, 6565, -1000, -1000, 1442, 1439,
	-289, -38, 2087, 2083, -1000, -1000, 25915, -1000, 248, 24190,
	1437, 611, -1000, -1000, -1000, 25915, 775, -1000, 24190, 1106,
	494, 321, 494, 1104, 1608, -1000, -1000, -1000, 1344, 5,
	-1000, -1000, 1343, 1342, 1220, -1000, -1000, 1252, 734, 15,
	-1000, -1000, -1000, -1000, -1000, -1000, 1601, 14410, 14899, 1340,
	1433, 24679, 12454, 18322, 608, -1000, 773, -1000, -1000, -1000,
	-1000, -1000, 2108, -1000, -1000, 2061, 24190, 5081, -1000, -1000,
	6565, 1600, -1000, 6565, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1592, 1970, -1000, -1000, -1000, -1000, 1339, -1000, 1338,
	-1000, -1000, -1000, 6565, 6565, -1000, -1000, -1000, 24190, -1000,
	586, 586, 580, -1000, -1000, -79, 74, -79, 1462, -1000,
	1432, -1000, -1000, -291, 1331, -1000, 2081, 1329, 1289, 1942,
	-1000, 1586, 26124, 9031, 2154, -1000, -1000, 24190, 24190, -1000,
	24190, 24190, 321, 6565, -1000, -1000, 202, -1000, -1000, 105,
	-1000, -1000, 1219, 334, -1000, 16855, -1000, -1000, -1000, -1000,
	-1000, -33, 2108, 608, 773, -1000, -1000, 873, -1000, 2051,
	-1000, -1000, 1198, 24190, 1198, 17833, -1000, 2080, 2079, 872,
	869, 1198, 543, 526, -1000, -57, -47, -1000, 1327, -1000,
	-1000, -1000, -293, -1000, 1326, -42, -1000, -1000, 1324, 1930,
	298, 26147, -1000, 1003, 1003, 732, 1003, 1003, 1003, 1003,
	234, 230, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003,
	1003, 1003, 1003, 1003, 1003, 1003, 1582, -1000, -1000, 2154,
	-1000, -1000, 1044, 8041, -1000, -1000, 1323, 14899, 470, 474,
	1581, -1000, 200, 2129, -1000, 1102, 1100, -1000, 24190, -1000,
	1580, 1453, 142, 1579, -1000, 1577, 1572, 24190, 1423, 303,
	1311, -1000, -1000, 104, -1000, -1000, 856, -1000, 1571, 6565,
	-1000, -79, 2061, -1000, -1000, 846, 834, -1000, -1000, -1000,
	-1000, -1000, 1143, -1000, 1119, 324, -53, -47, -1000, 2076,
	-44, 2068, 2066, 1025, -1000, 1570, -1000, 2065, -209, 248,
	-1000, 2064, 26124, -1000, 1215, 1207, 1003, 1003, 1201, 1310,
	1306, 1302, 1003, 1003, 1197, 1300, 25060, 1179, 1174, 1173,
	1218, 1299, 614, 1208, 1204, 1200, 24190, 1566, 1278, -1000,
	-1000, 2334, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1171, 1563, -125, -1000, -1000, 1562, 16855,
	136, 136, 16855, 16855, 16855, 1561, 386, -1000, -10, -1000,
	-1000, -1000, 16855, 1905, 1216, -1000, 2051, -1000, -1000, 17344,
	1428, 1426, 1425, 1422, 1560, 1168, -38, 2058, -1000, 1289,
	2054, 1289, 1289, 1296, 24190, 1289, 24190, -1000, 176, -1000,
	-1000, -1000, 14410, 14410, -1000, -1000, -1000, -1000, 1294, 1293,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 253, 24190, 824, -1000, 1012, 1421, 6565, 1553,
	-187, 16855, 823, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	817, 802, 782, 16855, -1000, -1000, -1000, 198, -1000, 156,
	-1000, -1000, 1905, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1977, 13921, -61, -1000, 1291, -1000, 1289, -1000, -1000, 73,
	760, -1000, -1000, -1000, -1000, 168, 224, 216, -1000, 345,
	-1000, -1000, -1000, -1000, -1000, -1000, 254, 733, -1000, 1278,
	1277, -1000, 1133, -1000, 1776, -1000, 54, 711, -1000, -1000,
	-1000, -1000, 710, -1000, -1000, 1003, 1273, 118, -1000, -1000,
	-1000, -1000, 24190, -1000, 709, -1000, -1000, -1000, 772, -1000,
	-1000, -1000, -1000, -1000, 1272, -1000, 24190, 164, 1167, 8041,
	1552, 8041, 1545, 186, 1544, -1000, -1000, -1000, -1000, -1000,
	386, -1000, 1767, 1621, 2123, -1000, -1000, -1000, -1000, 156,
	156, 156, 156, 62, 1144, -1000, 1262, 508, -1000, 993,
	-1000, 16366, 24190, 991, -1000, 1543, 2053, -1000, 2395, 24190,
	2145, 24190, 1535, 941, 8041, -1000, -1000, 2125, -1000, 2126,
	460, 460, -1000, -1000, -1000, 24190, 4589, -1000, 496, 1265,
	-1000, 296, 179, -1000, 702, -1000, 681, 15877, 1139, 1778,
	-1000, -1000, -1000, 1180, 205, -1000, -1000, -1000, 1198, 24190,
	72, 680, -1000, 1385, 155, -1000, -1000, -1000, 673, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1263, -1000, 296, 1829,
	-1000, 1120, -1000, 920, -1000, 1210, 412, -1000, 1256, -1000,
	1210, 163, -1000, 291, 1534, -306, -1000, -1000, 670, -1000,
	1383, 495, 6565, -1000, -1000, 163, 26124, -1000, 6565, 661,
	-1000, 26124, 601, -1000, -1000,
}

var yyPgo = [...]int{
	0, 121, 2582, 196, 132, 125, 193, 2579, 2578, 1965,
	1960, 2575, 2574, 2572, 2571, 2570, 2566, 2565, 2563, 2562,
	2561, 2560, 2559, 2558, 2557, 2556, 2555, 2554, 2553, 192,
	2544, 2539, 2538, 2537, 2536, 2535, 2529, 2528, 2527, 2526,
	2525, 2524, 2523, 2522, 2508, 2506, 2505, 122, 2504, 1958,
	2503, 2502, 2500, 2499, 2498, 169, 2496, 2489, 2488, 2487,
	2486, 2485, 2484, 2481, 2480, 2479, 2478, 2477, 2476, 2475,
	135, 2474, 2473, 2472, 2469, 2468, 189, 171, 57, 2467,
	45, 48, 110, 203, 108, 204, 200, 144, 124, 82,
	2466, 1954, 2465, 118, 180, 112, 25, 2464, 140, 2462,
	114, 41, 31, 197, 104, 55, 64, 88, 2447, 176,
	83, 2445, 2444, 2443, 2442, 2441, 92, 2439, 2438, 90,
	2437, 60, 2436, 73, 35, 93, 29, 2435, 2434, 2433,
	70, 2431, 2430, 2426, 2425, 141, 2424, 95, 53, 2421,
	2418, 2417, 2416, 2415, 40, 2413, 51, 2412, 2411, 2410,
	2409, 67, 2408, 2407, 12, 20, 18, 2406, 17, 3,
	2405, 175, 59, 76, 103, 2401, 396, 2400, 2391, 2379,
	113, 2373, 394, 2371, 2369, 2367, 2365, 2362, 9, 2361,
	167, 2360, 2358, 2356, 58, 150, 159, 2353, 2348, 100,
	50, 115, 98, 2347, 2345, 66, 174, 16, 32, 0,
	158, 34, 2344, 2343, 2342, 199, 154, 156, 181, 91,
	202, 128, 2341, 2339, 52, 2338, 117, 2336, 97, 7,
	2335, 152, 2334, 182, 129, 2332, 166, 2331, 230, 2,
	102, 27, 220, 2330, 2329, 2328, 138, 2327, 2326, 74,
	137, 2322, 2319, 2317, 26, 2316, 33, 21, 2315, 86,
	2314, 186, 2313, 139, 99, 147, 127, 105, 178, 183,
	63, 116, 1046, 106, 69, 19, 2291, 179, 2288, 198,
	187, 2286, 146, 2285, 191, 365, 164, 2282, 142, 8,
	2281, 2280, 10, 2279, 23, 2277, 2274, 2273, 2272, 6,
	2258, 2257, 2255, 1, 4, 2251, 5, 172, 39, 94,
	2250, 96, 201, 2249, 2247, 2246, 2245, 2244, 213, 2241,
	2239, 2238, 2235, 2232, 2229, 2227, 2226, 85, 38, 2225,
	2224, 2223, 2222, 75, 107, 2221, 277, 163, 2220, 54,
	2217, 2216, 24, 2215, 28, 2214, 2212, 2210, 14, 143,
	2209, 2207, 15, 2206, 2205, 11, 13, 2204, 2203, 61,
	2202, 47, 30, 68, 80, 2201, 22, 62, 101, 2200,
	2198, 190, 194, 161, 2197, 130, 185, 205, 2196, 170,
	2195, 2190, 2188, 2174, 2170, 2169, 2168, 1079, 2167, 2165,
	188, 56, 177, 2163, 2162, 149, 2160, 119, 87, 84,
	160, 2159, 145, 2155, 2154, 81, 2153, 2152, 2150, 2149,
	2148, 184, 157, 2147, 2145,
}

//line mysql_sql.y:8087
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) updateListUnion() *tree.UpdateList {
	v, _ := st.union.(*tree.UpdateList)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 399, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 74, 74, 64, 63, 348, 348, 347, 347, 346,
	346, 345, 345, 345, 344, 344, 344, 343, 343, 342,
	342, 341, 341, 339, 339, 340, 338, 337, 337, 337,
	335, 335, 333, 333, 334, 334, 328, 328, 331, 331,
	329, 329, 329, 329, 332, 327, 327, 327, 326, 326,
	62, 62, 62, 264, 264, 61, 61, 278, 278, 278,
	278, 278, 276, 276, 276, 276, 276, 276, 275, 275,
	274, 274, 279, 279, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 56, 56, 56, 56, 59, 59,
	59, 60, 273, 273, 273, 57, 58, 58, 263, 263,
	268, 268, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 272, 272, 272, 270, 270, 269,
	269, 271, 271, 50, 50, 50, 53, 52, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 51, 51, 51,
	51, 51, 51, 48, 48, 48, 48, 48, 47, 47,
	49, 49, 261, 261, 260, 67, 67, 67, 67, 67,
	67, 67, 66, 66, 69, 69, 68, 55, 55, 55,
	55, 55, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 372, 372, 372, 374, 374, 203, 204, 400, 202,
	202, 202, 368, 368, 369, 370, 371, 371, 371, 65,
	7, 7, 45, 46, 392, 392, 308, 308, 216, 216,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 311, 312, 212, 29,
	29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
	29, 29, 29, 36, 35, 35, 250, 250, 34, 401,
	401, 186, 186, 33, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 44, 322, 322, 403, 403, 403, 42,
	43, 307, 307, 307, 40, 39, 38, 37, 37, 32,
	32, 31, 31, 209, 209, 211, 211, 207, 402, 402,
	284, 284, 210, 210, 30, 30, 30, 208, 208, 185,
	206, 206, 206, 8, 8, 6, 11, 11, 11, 11,
	11, 11, 11, 11, 17, 19, 258, 258, 255, 18,
	14, 13, 16, 12, 15, 5, 5, 5, 5, 9,
	9, 10, 88, 88, 125, 125, 381, 381, 377, 377,
	378, 378, 378, 379, 379, 380, 380, 70, 316, 316,
	316, 316, 316, 316, 4, 315, 315, 315, 315, 315,
	315, 398, 398, 357, 357, 357, 358, 109, 109, 104,
	104, 317, 317, 230, 359, 359, 325, 325, 324, 324,
	323, 323, 107, 107, 108, 108, 91, 91, 77, 77,
	330, 330, 330, 330, 336, 336, 305, 305, 151, 151,
	181, 181, 182, 182, 81, 81, 82, 82, 82, 82,
	82, 82, 365, 365, 367, 367, 366, 106, 106, 102,
	102, 103, 103, 103, 101, 101, 100, 99, 99, 98,
	96, 96, 96, 97, 97, 97, 84, 84, 83, 83,
	83, 83, 83, 166, 166, 166, 166, 166, 166, 166,
	166, 166, 166, 166, 166, 85, 85, 373, 373, 373,
	309, 309, 309, 314, 314, 163, 163, 164, 164, 162,
	162, 86, 86, 87, 87, 87, 87, 161, 161, 160,
	89, 89, 95, 94, 94, 90, 90, 90, 90, 171,
	171, 170, 170, 170, 170, 73, 75, 75, 76, 112,
	112, 169, 168, 168, 168, 111, 111, 110, 110, 105,
	105, 93, 93, 93, 93, 167, 92, 92, 92, 92,
	92, 92, 92, 92, 92, 404, 404, 165, 397, 397,
	396, 396, 395, 393, 393, 393, 394, 394, 394, 394,
	350, 350, 350, 350, 350, 195, 195, 195, 201, 201,
	194, 194, 194, 194, 194, 205, 200, 200, 196, 196,
	197, 197, 197, 3, 3, 3, 3, 23, 23, 23,
	23, 23, 28, 113, 114, 114, 115, 115, 116, 117,
	118, 27, 27, 375, 375, 20, 382, 385, 383, 386,
	386, 386, 387, 387, 387, 388, 388, 21, 384, 389,
	389, 389, 259, 259, 256, 257, 257, 254, 253, 253,
	253, 391, 391, 390, 390, 390, 198, 198, 22, 249,
	249, 251, 252, 252, 243, 243, 243, 243, 26, 247,
	247, 248, 248, 248, 248, 248, 244, 244, 246, 246,
	242, 242, 242, 242, 242, 25, 241, 241, 239, 239,
	237, 237, 238, 238, 236, 236, 236, 240, 240, 24,
	24, 79, 78, 78, 78, 78, 78, 80, 310, 310,
	280, 280, 283, 283, 290, 290, 291, 291, 289, 289,
	296, 296, 295, 295, 294, 294, 293, 293, 292, 292,
	292, 292, 287, 287, 286, 286, 281, 281, 281, 281,
	281, 282, 282, 282, 285, 285, 288, 288, 142, 142,
	143, 143, 143, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 355, 355, 356, 145, 145, 145, 149, 149,
	149, 149, 149, 149, 144, 144, 146, 146, 126, 126,
	124, 124, 119, 119, 120, 120, 121, 121, 122, 122,
	123, 123, 123, 123, 123, 123, 266, 266, 353, 353,
	354, 354, 349, 349, 349, 352, 352, 352, 352, 352,
	351, 351, 127, 179, 179, 179, 199, 199, 199, 178,
	178, 178, 141, 141, 140, 140, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 265, 265, 213, 213, 214, 214, 158, 157, 157,
	157, 157, 157, 155, 156, 154, 154, 154, 154, 154,
	153, 153, 152, 152, 152, 245, 245, 150, 150, 148,
	148, 148, 147, 147, 147, 297, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	222, 222, 227, 227, 364, 364, 363, 128, 128, 128,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 137,
	137, 137, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 321, 321, 321,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 177, 376, 376, 376, 360, 360, 361,
	361, 361, 361, 361, 361, 361, 361, 361, 361, 361,
	361, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 362, 362, 362, 362, 362, 362, 175, 175,
	175, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 231, 231, 232, 232, 318, 318,
	318, 318, 318, 318, 319, 319, 320, 320, 320, 320,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 220,
	172, 172, 172, 233, 228, 228, 229, 229, 223, 223,
	223, 223, 223, 223, 223, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 224, 224, 226, 226, 235,
	235, 235, 234, 234, 234, 234, 234, 234, 234, 139,
	139, 139, 139, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 130, 130, 130, 130, 134, 134, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 135, 135, 135, 135, 133, 133, 133,
	133, 133, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 71, 72,
	72, 132, 180, 180, 298, 298, 301, 301, 299, 299,
	300, 302, 302, 302, 303, 303, 303, 304, 304, 304,
	306, 306, 184, 184, 184, 191, 191, 183, 183, 192,
	192, 193, 193, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187,
}

var yyR2 = [...]int{
	0, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 6, 8, 9, 9, 0, 2, 1, 3, 3,
	3, 1, 3, 5, 0, 2, 3, 1, 3, 1,
	1, 1, 3, 1, 1, 1, 1, 0, 3, 3,
	0, 3, 0, 3, 0, 3, 0, 2, 1, 2,
	3, 4, 3, 3, 1, 0, 1, 1, 0, 1,
	8, 5, 7, 0, 3, 8, 5, 1, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 4, 1, 3, 1, 2, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 2, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	4, 6, 1, 1, 1, 2, 4, 6, 1, 4,
	1, 3, 3, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 2, 4, 3, 1, 1, 1,
	1, 1, 2, 3, 4, 7, 2, 3, 3, 4,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 2, 1, 1, 1, 1, 6,
	1, 1, 7, 7, 0, 3, 0, 2, 0, 1,
	1, 1, 1, 4, 2, 2, 3, 3, 4, 5,
	3, 4, 4, 2, 2, 2, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 2, 5, 0, 2, 7, 0,
	1, 0, 1, 4, 1, 1, 1, 3, 2, 3,
	1, 1, 1, 6, 0, 1, 1, 1, 1, 5,
	5, 0, 1, 1, 3, 3, 3, 6, 7, 4,
	4, 7, 8, 0, 2, 0, 2, 2, 1, 1,
	1, 1, 0, 1, 4, 4, 5, 1, 3, 1,
	1, 3, 5, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 1, 3, 1, 4,
	6, 4, 4, 4, 3, 1, 1, 2, 2, 11,
	8, 9, 1, 3, 2, 4, 0, 2, 0, 1,
	1, 1, 1, 0, 1, 0, 1, 4, 2, 1,
	5, 4, 4, 2, 5, 2, 1, 5, 4, 4,
	2, 0, 5, 0, 1, 3, 3, 1, 3, 1,
	3, 1, 3, 4, 0, 1, 0, 1, 1, 3,
	1, 1, 0, 4, 1, 3, 2, 1, 0, 8,
	0, 4, 7, 4, 0, 2, 0, 2, 0, 2,
	0, 4, 1, 3, 1, 1, 4, 3, 4, 5,
	4, 5, 2, 3, 1, 3, 6, 0, 3, 0,
	1, 2, 4, 4, 0, 1, 3, 1, 3, 3,
	0, 1, 1, 0, 2, 2, 3, 3, 1, 3,
	3, 3, 3, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 7, 7, 1, 1, 1,
	0, 1, 1, 1, 1, 0, 2, 0, 3, 0,
	2, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 4, 4, 3, 2,
	2, 2, 3, 2, 3, 4, 1, 3, 4, 0,
	2, 1, 1, 2, 2, 0, 1, 2, 4, 1,
	3, 1, 4, 2, 3, 3, 4, 6, 8, 8,
	4, 6, 8, 8, 4, 0, 1, 3, 0, 1,
	1, 2, 5, 2, 2, 2, 0, 2, 3, 3,
	0, 1, 3, 1, 3, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 12, 1, 0, 1, 1, 3, 1, 2,
	1, 8, 11, 0, 1, 7, 1, 4, 1, 3,
	4, 3, 0, 1, 1, 0, 2, 7, 1, 0,
	2, 2, 1, 3, 2, 1, 3, 2, 1, 3,
	2, 0, 1, 3, 4, 3, 1, 1, 4, 1,
	3, 1, 1, 1, 0, 1, 1, 1, 11, 0,
	2, 3, 2, 3, 1, 1, 1, 3, 3, 4,
	0, 2, 2, 2, 2, 5, 1, 1, 0, 3,
	0, 1, 1, 2, 4, 4, 4, 0, 1, 10,
	9, 2, 2, 6, 10, 14, 18, 5, 0, 1,
	0, 6, 0, 4, 0, 3, 1, 3, 4, 5,
	0, 3, 1, 3, 2, 3, 1, 2, 0, 4,
	6, 5, 0, 2, 0, 2, 4, 5, 4, 5,
	1, 5, 6, 5, 0, 3, 0, 1, 0, 1,
	1, 3, 2, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	5, 4, 1, 3, 3, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 0, 1, 1, 3, 1, 1, 2, 1,
	7, 7, 7, 7, 8, 5, 0, 1, 0, 1,
	1, 1, 1, 3, 3, 1, 1, 1, 1, 1,
	0, 1, 3, 1, 3, 5, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 2, 1, 2, 2, 1,
	1, 2, 2, 2, 2, 2, 1, 5, 6, 4,
	1, 1, 2, 0, 1, 1, 2, 5, 0, 1,
	1, 2, 2, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 2, 2, 2, 0, 3, 0, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 3, 5, 2, 2, 2, 2, 1, 1,
	2, 5, 6, 6, 6, 1, 1, 1, 1, 1,
	0, 2, 0, 1, 1, 2, 4, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 2, 2, 2, 0,
	1, 1, 5, 4, 4, 5, 5, 5, 5, 4,
	5, 5, 5, 5, 5, 5, 5, 1, 1, 1,
	4, 4, 6, 8, 6, 4, 5, 5, 4, 6,
	6, 7, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	8, 4, 2, 3, 2, 4, 6, 2, 2, 4,
	6, 4, 2, 2, 0, 1, 2, 3, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 1, 3, 0, 1, 1, 3, 3, 3,
	3, 3, 2, 1, 1, 3, 4, 3, 4, 3,
	4, 3, 4, 3, 4, 1, 3, 4, 4, 5,
	3, 4, 5, 6, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 1, 2, 3,
	5, 1, 1, 3, 0, 1, 0, 3, 0, 3,
	3, 0, 3, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 1, 2, 2, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -399, -2, -1, -3, -74, -4, -70, -5, -6,
	-8, -54, -66, -68, -69, -29, -7, -65, -47, -48,
	-50, -56, -61, -62, -63, -64, -71, -72, -73, -81,
	-23, -22, -21, -20, 391, 12, 427, -9, -10, -365,
	-11, 230, -202, -203, -204, -400, -30, -31, -32, -37,
	-38, -39, -40, -42, -43, -44, -33, -34, -35, -36,
	-46, -45, 206, -49, 61, -51, -52, -53, -57, -58,
	-59, -60, 321, 327, 380, 389, 510, 511, 46, -82,
	-84, -24, -25, -26, -27, -28, 202, 14, 460, -12,
	-15, -13, -16, -14, -18, -19, -17, 225, 224, 37,
	287, 288, 325, 223, 203, 13, 135, 136, 138, 139,
	30, -83, 67, 204, -85, 10, 512, 420, -91, 38,
	-124, -199, 70, -187, -190, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 430, 303, 457, 242, 266, 351, 269, 276, 135,
	154, 148, 176, 168, 143, 246, 247, 77, 138, 413,
	87, 398, 377, 141, 261, 263, 265, 268, 248, 164,
	159, 260, 244, 510, 157, 249, 39, 250, 181, 251,
	252, 462, 394, 302, 400, 273, 375, 158, 395, 264,
	397, 183, 187, 405, 327, 152, 153, 402, 407, 180,
	222, 42, 459, 234, 408, 185, 179, 175, 416, 277,
	275, 178, 151, 174, 245, 50, 189, 188, 190, 371,
	372, 373, 374, 253, 254, 315, 404, 171, 160, 306,
	144, 22, 411, 229, 399, 328, 255, 270, 278, 184,
	186, 236, 241, 461, 379, 240, 274, 409, 156, 233,
	262, 228, 412, 145, 321, 330, 256, 139, 267, 406,
	415, 49, 343, 150, 142, 219, 136, 238, 243, 11,
	257, 258, 259, 280, 279, 271, 172, 235, 177, 162,
	149, 173, 137, 237, 414, 344, 508, 304, 360, 170,
	167, 239, 212, 410, 401, 140, 364, 345, 165, 281,
	505, 506, 507, 316, 301, 282, 283, 163, 226, 393,
	284, 286, 370, 294, 346, 378, 352, 347, -91, -49,
	-10, -9, -83, -84, -124, 210, -206, 23, 375, -55,
	376, 206, 67, -199, -5, -4, -70, -47, -81, -205,
	-199, 287, -205, 210, -199, 240, 359, -308, 215, -275,
	-249, 241, -274, -251, -277, -252, 31, 202, 204, 203,
	237, 14, 325, 211, 12, 10, 326, 223, 24, 25,
	27, 13, 327, 329, 28, 330, 333, 334, 335, 41,
	338, 339, 230, 70, 73, 248, 248, -229, -223, 94,
	231, -225, -218, -219, -221, -345, -339, -217, 67, 119,
	120, 127, 95, -220, -297, 35, 97, 467, 428, -173,
	-174, -175, -176, -177, -199, -340, -338, 73, 78, 81,
	84, 85, 83, 82, 161, 80, 74, 132, -84, 70,
	-360, 475, -188, 495, 476, 494, 46, -313, -320, 209,
	-318, 166, 226, 162, 12, 125, 370, 130, 163, 472,
	491, 430, 498, 469, 470, 464, 465, 466, 468, 477,
	479, 490, -321, 486, 496, 497, 499, 72, 71, 489,
	488, 473, 474, 480, 463, 471, 481, 482, 487, 492,
	493, 501, 502, 309, 87, 310, 311, 420, 305, 312,
	215, 375, 55, 313, 314, 315, 316, 317, 427, 318,
	56, 319, 308, 230, 360, 320, 165, 182, 432, 431,
	433, 424, 421, 419, 422, 423, 425, 426, 483, 484,
	485, -271, -269, -199, -75, -76, 503, -100, -101, -166,
	19, 6, 7, 8, 9, 322, -310, 303, 360, 240,
	-243, -241, 284, 336, 220, 219, 88, 420, 209, -377,
	-378, 199, 200, 201, -367, 453, -366, -199, 311, 26,
	210, -41, -322, -307, 401, 400, -210, 399, 392, 403,
	394, 202, 454, -184, 346, 378, 236, 417, 418, 323,
	379, 405, 406, 395, 87, 169, 166, 303, 360, -377,
	140, 137, -262, 140, 93, 145, 144, -262, 240, 359,
	40, -268, 370, -267, -269, 405, 406, 416, 71, 72,
	404, -184, 87, -101, -166, -100, -82, -84, -365, 303,
	360, 240, 211, 210, 212, 420, 287, -309, -373, 31,
	-314, 196, 197, 198, 32, 33, -1, -200, -197, -190,
	70, 71, 72, -107, 232, -124, 133, -107, -101, -100,
	-101, -124, -178, -199, 377, 103, -55, -55, 376, -368,
	-369, -370, -372, 206, 376, 375, 133, 15, -205, 65,
	-124, -251, 240, -275, -249, 35, 64, 134, 213, 134,
	64, 67, 323, 303, 360, 324, 420, 210, 336, 212,
	240, 337, 303, 360, 210, 212, 420, 240, 303, 210,
	212, 360, 240, 337, 392, 393, 212, 26, 328, 331,
	332, 393, -326, 416, -326, 134, 93, 90, 91, 92,
	-223, 110, -234, 103, 104, 105, 106, 107, 108, 109,
	116, 115, 126, 119, 120, 121, 122, 123, 124, 125,
	117, 118, 113, 94, 111, 112, 96, -84, -223, -229,
	-221, -221, -221, -221, -297, -227, -223, 67, 67, 133,
	-223, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	-319, 67, 67, -231, -232, 67, 67, 73, 73, 67,
	67, 67, -221, 73, -232, -232, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 134, -130, -134, -131, -133, -132, -136, -135,
	166, 167, 130, 170, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 30, 182, 226, 162, 163, 164,
	165, 183, 148, 168, 458, 191, 149, 192, 150, 193,
	151, 194, 152, 153, 195, 154, 157, 158, 159, 156,
	133, -101, 134, 67, -77, 38, -103, 21, -85, -84,
	20, 31, 32, 31, 32, 31, 32, 31, 32, -113,
	-199, -375, 210, 453, -239, 215, -239, -239, 211, -239,
	210, -379, 147, 134, -367, -106, 67, -209, 111, 23,
	238, -209, -403, 211, 402, 42, 239, 238, -102, -103,
	-102, 396, 393, -284, 397, 398, -210, -209, -209, -210,
	210, 212, 420, -401, -402, 15, 113, 238, -401, 30,
	30, -308, -308, -380, 214, 409, 460, 143, 144, 145,
	-251, 240, 240, 134, 103, 23, -270, 103, 114, -269,
	-269, -269, -270, -270, -144, 40, -198, 130, -199, 73,
	-144, 40, -102, -85, -84, 68, 68, -308, -308, -308,
	-308, -308, -308, -308, -205, -86, -87, 121, -223, -199,
	-86, 38, 393, -315, 46, -81, 67, 30, 67, -199,
	-316, 46, -81, 67, 30, -102, -77, -103, 133, 78,
	73, -55, 68, 134, -371, 84, 85, -374, 180, 172,
	-199, -67, 73, -3, -4, -5, -6, -29, -47, -81,
	-341, -339, 67, 31, 369, 64, 15, -276, 210, 420,
	322, 236, 212, 303, -274, -258, -255, -253, -198, -251,
	-254, -253, -279, -178, 393, -78, 381, -78, -223, -223,
	-223, -223, -223, 83, 94, 301, 84, 85, -218, -235,
	31, 282, 283, -219, -219, -219, -219, -219, -219, -219,
	-219, -219, -219, -219, -219, -226, -233, -297, 67, 113,
	111, 112, 96, -221, -219, -219, 68, 134, -364, -363,
	98, -223, -223, -199, -361, -362, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 313, 308, 314,
	312, 305, 320, 315, 316, 165, 451, 452, 445, 446,
	447, 448, 449, 450, -228, -229, -228, -223, -361, -228,
	-172, 32, 31, -172, -223, -376, 299, 298, 300, -104,
	-199, -228, 68, 68, 68, 78, -229, -228, -219, -228,
	-362, -172, -229, -229, -172, -172, -172, -172, 121, -172,
	-172, -172, -172, -172, -172, -172, 73, -269, 40, -304,
	344, 343, -298, -300, 67, -299, 67, -299, -298, -298,
	67, 67, -301, 67, -301, -301, -298, -302, 67, -302,
	-303, 67, -302, -199, -102, -76, -324, -323, -223, 40,
	504, -77, -223, -99, -98, -223, 67, 212, -239, -382,
	-199, 94, -259, -256, -253, -249, -197, -199, -239, -380,
	-366, 34, -105, -199, -162, 16, -221, -253, -401, -162,
	-402, -209, -209, -211, -402, -207, -402, 393, -162, -162,
	-284, -208, -199, -208, -239, -186, -185, -199, -186, -382,
	-259, -94, -89, -93, -90, -95, -165, -167, -92, 67,
	-124, 501, 502, 410, 411, 141, 144, 143, 31, 369,
	-273, 369, 31, -249, -267, -263, 73, 370, -254, -272,
	64, 130, -323, -270, -270, -270, -272, -272, 129, -77,
	-382, -258, -249, -199, -126, -124, -126, -200, -161, 134,
	-160, 15, -194, -199, 34, 73, 133, -161, 73, -126,
	-398, 64, -317, -230, -359, 503, -109, 68, -104, -357,
	-358, -104, -108, -199, -317, -109, 68, -357, -77, -77,
	-192, -193, -183, -189, -196, -197, -190, 207, 31, 93,
	34, 36, 309, 341, 96, 130, 20, 97, 166, 129,
	311, 428, 310, 202, 59, 431, 433, 432, 421, 419,
	362, 366, 368, 365, 420, 392, 40, 14, 37, 224,
	32, 33, 123, 204, 100, 101, 227, 35, 225, 85,
	44, 23, 62, 15, 17, 18, 312, 361, 215, 214,
	113, 381, 211, 57, 12, 132, 38, 110, 363, 53,
	89, 45, 55, 111, 21, 422, 423, 41, 380, 389,
	456, 231, 125, 313, 314, 60, 94, 369, 83, 43,
	64, 90, 19, 58, 112, 205, 427, 56, 367, 317,
	319, 329, 453, 318, 209, 403, 10, 308, 429, 30,
	223, 54, 210, 99, 213, 84, 230, 6, 88, 13,
	61, 65, 424, 425, 426, 46, 98, 16, 320, 460,
	382, 383, 384, 385, 386, 387, 388, 191, 192, 193,
	194, 195, 272, 218, 216, 220, 221, 503, 504, 196,
	197, 298, 300, 169, 199, 200, 201, 232, 147, 7,
	348, 349, 350, 353, 354, 355, 356, 357, 358, 359,
	511, 391, 208, 23, -55, -369, 133, 134, -105, -276,
	-257, -254, -278, 121, 70, -264, 134, 460, 513, 71,
	213, -391, -390, 361, 68, 134, -327, 214, 427, 73,
	514, -327, 83, 301, 84, 85, -297, -229, -226, -221,
	-219, -219, -224, 227, 93, -223, -222, -363, 100, -223,
	34, 134, 65, 133, 68, 68, 15, 15, 68, -223,
	-223, 68, 15, 15, -223, 68, 133, 68, 68, 68,
	65, 68, 134, 68, 134, -223, 68, 68, -223, -223,
	-223, -229, 68, -223, -223, -223, -223, -223, -223, -223,
	134, -223, -306, 345, 78, 78, -180, 73, -180, 78,
	78, 78, 134, 68, 73, 134, 22, 134, -96, 36,
	37, -114, -115, -116, -117, -130, -124, 215, -124, -385,
	348, 35, -392, 134, 40, -390, -242, 65, -237, -238,
	-236, -240, 40, -124, 15, -88, -125, -199, 67, 68,
	134, -223, -250, 65, -186, -124, -162, -162, -209, -200,
	-211, -206, -211, -207, 133, -185, -385, -392, 30, -168,
	-169, -170, -171, 53, 57, 59, 54, 55, 56, 60,
	30, 134, -404, 34, -195, -201, 34, -196, 73, -197,
	-190, -89, -82, -84, -94, 67, -195, 67, 67, 142,
	145, 145, 144, 213, 67, 103, -272, -272, -272, 40,
	-198, 64, 134, -162, -87, -89, -199, 73, -199, 121,
	-162, -151, 506, 38, 39, 134, 67, 68, 134, 46,
	134, 103, 68, 134, 68, 46, 133, 377, -199, -339,
	68, -278, 134, 213, 133, 133, -255, 327, -198, -257,
	20, 460, -178, 38, 73, 38, 68, -224, 93, -221,
	-218, 68, 101, -223, 99, -128, -130, 343, 344, -129,
	-135, 130, 166, 226, 165, 164, 162, 343, 344, -144,
	-199, -223, -223, 68, 68, -223, -223, 15, -199, -144,
	-219, -223, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 73, 68, 68, 68, 134, 68,
	68, 68, 134, 68, 134, -323, -330, 397, -223, -223,
	-98, -97, 43, 68, 134, -178, -106, 94, 67, -387,
	399, 350, -191, 103, -216, -215, 304, 41, -311, 370,
	356, 357, -256, 240, 64, 293, 294, 295, 296, -236,
	-184, 129, 251, 67, -124, -88, -199, 15, 134, -381,
	133, -1, -199, -249, -209, -162, -162, -209, -209, -211,
	-199, -387, -216, -261, -260, -178, -93, -93, -93, -93,
	53, 53, 53, 58, 53, 58, 53, -170, -261, -95,
	-199, -201, 68, 68, -82, -397, -396, -395, -393, 61,
	214, 62, 73, -178, -229, 145, -257, -212, 73, -263,
	-124, -124, -164, 17, 133, -164, 78, 73, 89, -230,
	-325, -324, 46, -81, -104, -317, -358, -323, -199, 46,
	-81, -317, -192, -189, -197, -190, 78, 15, -254, -249,
	121, 121, 70, 328, -264, 73, 349, 73, 210, 103,
	210, -218, -223, 68, -137, 153, 152, -137, 68, -298,
	-299, -298, -301, -298, -137, -137, 68, 68, 23, 68,
	68, 68, -223, 68, 68, 134, 68, 73, 78, 78,
	-336, 387, 382, 384, 44, 45, 208, -116, 34, 35,
	-119, -120, -121, -127, -122, -178, -214, -123, 218, 216,
	220, -354, 88, 221, 272, 89, 211, -388, 77, -383,
	73, -389, 77, 351, 132, 306, 40, 352, 353, 367,
	302, 78, 78, 358, -384, 70, -124, -191, -191, -191,
	-119, -107, 65, 133, -89, -125, -199, 121, 68, -162,
	-162, -162, -209, -388, -389, -162, 134, 103, -111, -110,
	64, 65, -112, 64, -110, 53, 53, -162, -106, 68,
	-395, -394, 23, -354, -354, -354, 68, 134, 68, 134,
	68, 68, -163, 18, 20, 121, -163, -151, 13, 68,
	-317, -317, -249, -264, 370, -124, 73, -124, -223, 68,
	-223, 68, 68, -305, 505, -334, 382, 20, 20, -130,
	-81, -124, 68, 134, -130, -123, -199, 89, -353, -354,
	-239, -353, 89, 67, 73, -386, 361, 73, 73, 78,
	40, 78, 132, 354, -312, 67, -144, -146, -198, 130,
	73, 68, -195, -89, -199, -162, -381, 133, -162, -101,
	-260, -323, -223, 67, -223, 67, 53, 19, 17, 73,
	73, -223, -229, -357, -80, -328, -284, 515, 134, -80,
	68, 68, -151, 73, 20, 73, -332, 73, 34, -106,
	-142, -143, -159, 341, 242, -240, 246, 77, 247, 377,
	248, 211, 250, 251, 252, 222, 253, 254, 255, 370,
	256, 257, 258, 259, 324, 6, 289, -121, -141, -140,
	-138, 83, 94, 40, 341, -139, 77, 129, 265, 243,
	266, -158, -213, 64, 347, 216, 88, 89, 329, -214,
	-349, -351, -199, -351, -199, -349, -349, -239, -223, 20,
	460, 305, 40, 78, 40, 355, -244, -246, -178, 67,
	-79, -78, -162, -162, -102, -105, -350, -199, 216, 20,
	20, 68, 134, 68, 134, -335, 387, -331, -329, 382,
	383, 384, 385, 73, -181, 507, 73, 384, 73, 34,
	-280, 232, 134, -159, -191, -191, -184, 129, -191, -191,
	-191, -191, 249, 249, -191, -191, -191, -191, -191, -191,
	-191, -191, -191, -191, -191, -191, -191, -191, 67, -138,
	83, -219, 73, -146, -147, 40, 264, 260, -148, 40,
	244, 245, -150, 67, 272, 13, 89, 89, -124, 67,
	65, 281, 67, 67, 67, -351, 68, 73, 349, 73,
	305, 68, 134, -298, -223, -80, -101, 68, 68, 134,
	84, 85, 84, 85, -337, 214, -333, 386, -329, 20,
	384, 20, 20, 103, 67, 20, 459, -81, 20, -159,
	78, 78, -191, -191, 78, 73, 73, 73, -191, -191,
	78, 73, -201, 78, 78, 78, 78, 40, 73, -149,
	40, 260, 264, 261, 262, 263, 78, 40, 78, 40,
	78, 40, -199, 67, -355, -356, 73, 78, 67, -318,
	-245, 67, -244, -352, 293, 294, 295, 297, 296, -352,
	-244, -244, -244, 67, -266, -265, 273, 94, 370, -247,
	-246, -96, 68, -102, -199, 216, 68, 68, 68, 68,
	-344, 67, 78, -334, 20, -332, 20, -332, -332, 73,
	-182, -199, -332, -118, -199, -281, 274, 275, -282, -288,
	277, -144, -144, 73, 73, -145, 243, -126, 68, 134,
	103, 68, -223, -231, -153, -152, 456, -244, 68, 68,
	68, 68, -244, 273, -248, 222, 77, 460, 291, 292,
	-96, -348, 30, 68, -343, -342, -179, -338, -199, 387,
	388, 73, -332, 515, 134, 68, 134, -286, 278, 67,
	-284, 67, -284, 89, 294, 244, 245, 68, -356, 73,
	68, -157, -155, -156, 64, 395, 270, 271, 68, -247,
	-247, -247, -247, 68, -191, 73, 290, -347, -346, -345,
	68, 134, 133, 73, -199, -283, 279, 78, -219, 67,
	-219, 67, -285, 276, 67, -265, -156, 64, -155, 64,
	14, 13, -158, 78, -197, 134, 103, -342, -199, 103,
	-290, 67, 20, 68, -279, 68, -279, 67, 103, -219,
	-154, 267, 268, 30, 144, -154, -346, 40, -223, 133,
	73, -291, -289, 232, -282, 68, 68, 68, -279, 78,
	68, 83, 40, 269, -199, 515, 134, 68, 134, 70,
	-287, 280, 68, 73, -289, -292, 46, 78, 103, -296,
	-293, 67, -159, 234, 113, 73, -296, -159, -295, -294,
	279, 235, 67, 515, 68, 134, 70, 231, 67, -229,
	-294, -293, -229, 68, 68,
}

var yyDef = [...]int{
	30, -2, 1, 2, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	633, 634, 635, 636, 0, 0, 0, 395, 396, 0,
	375, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 306, 307, 308, 309, 310, 311, 312,
	270, 271, 0, 218, 214, 193, 194, 195, 154, 155,
	156, 157, 276, 0, 0, 0, 0, 0, 0, 474,
	-2, 637, 638, 639, 640, 641, -2, 408, 0, 376,
	377, 378, 379, 380, 381, 382, 383, 259, 260, 261,
	256, 257, 258, -2, 0, 408, 207, 0, 198, 198,
	0, 494, 0, 0, 508, 530, 30, 0, 452, 0,
	457, 830, 866, 867, 868, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446,
	1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
	1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466,
	1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476,
	1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486,
	1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526,
	1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576,
	1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 452, 219,
	397, 398, 494, 494, 373, 0, 242, 0, 1463, 246,
	0, 0, 0, 370, 237, 238, 239, 240, 241, 0,
	625, 0, 234, 0, 213, 1522, 0, 0, 0, 0,
	0, 0, 98, 689, 100, 691, 104, 111, 0, 0,
	116, 117, 120, 121, 122, 123, 124, 0, 128, 0,
	130, 133, 0, 135, 136, 0, 139, 140, 141, 0,
	151, 152, 153, 692, 693, 78, 78, 1218, 1116, 0,
	1123, 1124, 1135, 1144, 938, 939, 940, 941, 0, 0,
	0, 0, 0, 948, 949, 0, 962, 1611, 0, 955,
	956, 957, 958, 959, 41, 53, 54, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 1170, 1171, 1172, 1089, 925, 866,
	0, 1619, 0, 1639, 1620, 1638, 0, 0, 1074, 0,
	1064, 0, -2, -2, 0, 0, 1589, 0, -2, 1616,
	1635, 1643, 1642, 1613, 1614, 1608, 1609, 1610, 1612, 1621,
	1623, 1634, 0, 1630, 1640, 1641, 0, 55, 56, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1605, 1606, 1080, -2, 1082, 1083, 1085, 1086, 1087,
	1088, -2, 1091, 1092, 1093, -2, -2, 1096, 1097, 1098,
	1099, 1100, 1101, 1104, -2, 1106, -2, 1108, 1076, 1077,
	1078, 1079, 1068, 1069, 1070, 1071, 1072, 1073, -2, -2,
	-2, 0, 191, 189, 494, 566, 0, -2, 0, 0,
	0, 513, 516, 519, 522, 0, 653, 718, 718, 718,
	0, 718, 0, 739, 695, 696, 697, 716, 717, 413,
	409, 410, 411, 412, 482, 0, 484, 487, 353, 314,
	0, 353, 0, 0, 489, 489, 0, 362, 353, 353,
	-2, 0, 324, 325, 326, 319, 0, 319, 330, 331,
	332, 342, 343, 363, 1242, 0, 0, 276, 276, 415,
	208, 209, 197, 199, 0, 203, 0, 196, 1522, 0,
	0, 165, 1589, 170, 0, 1470, 1536, 1485, 0, 0,
	1503, 0, -2, 489, 0, 495, 0, 494, 0, 276,
	276, 276, 276, 276, 276, 276, 0, 0, 0, 531,
	532, 527, 528, 529, 533, 534, 3, 0, 626, 627,
	630, 631, 632, 0, 0, 456, 0, 0, 489, -2,
	0, 374, 243, 869, 0, 0, 247, 248, 0, 0,
	262, 0, 265, 251, 252, 253, 0, 0, 236, 0,
	0, 215, 0, 0, 0, 277, 0, 0, 0, 0,
	0, 0, 108, 105, 112, 115, 125, 132, 0, 144,
	146, 149, 106, 113, 118, 119, 126, 147, 107, 109,
	110, 114, 148, 150, 127, 131, 145, 129, 134, 137,
	138, 143, 0, 79, 0, 0, 0, 0, 0, 0,
	1122, 0, 0, 1152, 1153, 1154, 1155, 1156, 1157, 1158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 1116, 0,
	944, 945, 946, 947, 950, 0, 963, 0, 0, 0,
	0, 1114, 1114, 0, 1114, 1110, 1110, 0, 0, 1114,
	1052, 0, 0, 1054, 1065, 0, 0, 1057, 1058, 1114,
	0, 1114, 1062, 1063, 1048, 1049, 0, 1110, 0, 0,
	1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110, 1110,
	1110, 0, 0, 1219, 1237, 1174, 1175, 1176, 1224, 1178,
	1228, 1228, 1224, 1224, 1206, 1207, 1208, 1209, 1210, 1211,
	1212, 1213, 1214, 0, 0, 1217, 1197, 1226, 1226, 1226,
	1224, 1221, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186,
	1187, 1188, 1189, 1190, 1191, 1192, 1231, 1231, 1234, 1231,
	0, 489, 0, 0, 477, 0, 458, 0, 510, 512,
	0, 514, 515, 517, 518, 520, 521, 523, 524, 0,
	643, 0, 718, 654, 0, 0, 0, 0, 0, 0,
	718, 415, 414, 0, 483, 0, 0, 539, 0, 0,
	319, 539, 0, 336, 337, 338, 353, 353, 344, 490,
	345, 346, 355, 0, 360, 361, 0, 539, 539, 0,
	0, 0, 718, 321, 320, 358, 359, 328, 321, 1243,
	1244, 0, 0, 0, 416, 0, 0, 201, 0, 206,
	158, 0, 0, 0, 0, 0, 0, 187, 188, 0,
	0, 0, 0, 0, 178, 181, 824, 825, 686, 687,
	182, 183, 458, 509, 511, 506, 507, 0, 0, 0,
	0, 0, 0, 0, 394, 547, 541, 543, 620, 41,
	547, 0, 0, 431, 444, 426, 0, 433, 0, 831,
	417, 444, 419, 0, 433, 458, 480, 458, 0, 244,
	0, 249, 0, 0, 264, 266, 267, 268, 254, 255,
	371, 232, 233, 225, 226, 227, 228, 229, 230, 231,
	235, 51, 0, 216, 217, 0, 0, 0, 92, 93,
	94, 95, 96, 97, 99, 83, 386, 388, 678, 690,
	0, 681, 0, 102, 142, 75, 0, 75, 1117, 1118,
	1119, 1120, 1121, 1125, 0, 1127, 1129, 1131, 1133, 0,
	1149, -2, -2, 926, 927, 928, 929, 930, 931, 932,
	933, 934, 935, 936, 937, 1136, 1147, 1148, 0, 0,
	0, 0, 0, 1145, 1140, 0, 942, 0, 960, 964,
	0, 0, 0, 42, 1109, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043,
	1044, 1045, 1046, 1047, 0, 1115, 0, 1116, 0, 0,
	0, 1111, 1112, 0, 0, 0, 1014, 1015, 1016, 0,
	439, 0, 1075, 1053, 1066, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 1240,
	1238, 1239, 1177, 1225, 0, 1202, 0, 1203, 1204, 1205,
	0, 0, 1198, 0, 1199, 1200, 1201, 1193, 0, 1194,
	1195, 0, 1196, 190, 565, 567, 0, 448, 450, 451,
	0, 478, 491, 496, 497, 500, 644, 0, 0, 0,
	656, 0, 274, 672, 0, 688, 710, -2, 0, 0,
	485, 0, 0, 579, 313, 0, 354, 316, 321, 323,
	0, 539, 539, 353, 0, 355, 0, 355, 349, 350,
	0, 364, 367, 365, 0, 327, 322, 369, 329, 0,
	274, 552, 0, 553, 554, 550, 581, 595, 615, 0,
	615, 0, 0, 210, 211, 0, 0, 205, 159, 160,
	0, 162, 163, 164, 171, 166, 168, 0, 0, 172,
	184, 185, 186, 0, 0, 0, 176, 177, 0, 476,
	384, 385, 389, 0, 391, 828, 392, 393, 539, 0,
	548, 0, 544, 621, 0, 623, 0, 539, 468, 0,
	424, 0, 425, 441, 0, 445, 0, 0, 437, 430,
	434, 0, 0, 454, 418, 0, 0, 423, 479, 481,
	870, 0, 1249, -2, 1251, -2, -2, 1253, 1254, 1255,
	1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275,
	1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285,
	1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315,
	1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325,
	1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335,
	1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345,
	1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355,
	1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365,
	1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 0, 250, 263, 0, 0, 0, 0,
	86, 675, 0, 87, 91, 81, 0, 0, 0, 680,
	0, 677, 682, 0, 101, 0, 0, 76, 77, 732,
	0, 0, 1126, 1128, 1130, 1132, 1134, 0, 1137, 1145,
	1141, 0, 1138, 0, 0, 1117, 0, 965, 0, 0,
	0, 0, 0, 0, 1000, 1001, 0, 0, 1005, 0,
	0, 1008, 0, 0, 0, 1012, 0, 1051, 1067, 1055,
	0, 1059, 0, 1061, 0, 0, 983, 984, 0, 0,
	0, 0, 989, 0, 0, 0, 0, 0, 0, 0,
	0, 1220, 1173, 1241, 0, 0, 0, 1222, 0, 0,
	0, 0, 0, 568, 460, 0, 0, 0, 503, 501,
	502, 0, 645, 646, 648, 0, 487, 0, 0, 662,
	1245, 719, 278, 0, 0, 674, 0, 0, 715, -2,
	722, 0, 728, 0, 0, 0, 402, 406, 30, 488,
	0, 540, 315, 0, 353, 539, 339, 340, 539, 356,
	353, 357, 353, 355, 0, 366, 662, 278, 0, 0,
	0, 0, 0, 572, 0, 0, 571, 0, 0, 0,
	0, 0, 0, 596, 583, 616, 0, 618, 619, 628,
	629, 0, 0, 494, 552, 0, 598, 0, 0, 212,
	200, 202, 0, 0, 0, 0, 173, 174, 175, 179,
	180, 0, 0, 537, 542, 549, 622, 624, 42, 545,
	537, 31, 0, 0, 0, 444, 446, 0, 0, 444,
	0, 0, 453, 0, 0, 444, 0, 0, 372, 52,
	269, 0, 0, 0, 0, 0, 387, 0, 679, 83,
	0, 0, 103, 0, 0, 0, 1113, 1139, 0, 1146,
	1142, 943, 951, 961, 0, 0, 967, 979, 979, 0,
	970, 1224, 1228, 973, 1224, 1226, 1224, 979, 979, 0,
	43, 0, 0, 1006, 1007, 0, 0, 0, 440, 0,
	0, 0, 982, 985, 986, 987, 988, 990, 991, 992,
	993, 994, 995, 996, 0, 1230, 1229, 1215, 0, 1216,
	1227, 1232, 0, 1235, 0, 449, 464, 0, 492, 493,
	498, 499, 0, 0, 0, 649, 0, 0, 832, 665,
	663, 664, 0, 1246, 669, 279, 280, 281, 282, 0,
	0, 0, 673, 0, 0, 711, 712, 713, 714, 723,
	1245, 1245, 1245, 832, 452, 0, -2, 0, 0, 404,
	0, 0, 580, 317, 539, 333, 347, 539, 539, 353,
	368, 665, 669, 539, 222, 0, 575, 569, 0, 558,
	573, 574, 561, 0, 563, 0, 559, 560, 539, 551,
	487, 617, 584, 585, 0, 597, 599, 600, 606, 0,
	0, 0, 0, 0, 0, 204, 161, 0, 298, 167,
	390, 829, 535, 0, 0, 535, 469, 468, 0, 442,
	0, 447, 444, 429, 438, 428, 435, 436, 455, 444,
	422, 421, 871, 1250, 1247, 1248, 245, 0, 676, 83,
	88, 89, 90, 84, 82, 683, 0, 685, 0, 0,
	0, 1143, 966, 952, 968, 980, 981, 969, 953, 971,
	972, 974, 975, 976, 977, 978, 954, 1002, 0, 1004,
	1009, 1010, 0, 1056, 1060, 0, 1013, 1223, 0, 0,
	466, 64, 0, 0, 504, 505, 0, 647, 0, 0,
	0, 833, 834, 836, 837, 0, 0, 839, 895, 0,
	848, 718, 848, 0, 0, 850, 851, 655, 0, 0,
	658, 667, 0, 0, 0, 284, 285, 0, 0, 0,
	297, 293, 294, 295, 275, 668, 0, 0, 0, 0,
	0, 615, 0, 0, 539, 403, 406, 407, 486, 318,
	351, 348, 539, 272, 273, 494, 0, 0, 555, 576,
	0, 0, 556, 0, 557, 562, 564, 221, 582, -2,
	601, 0, 0, 603, 604, 605, 586, 0, 590, 0,
	594, 169, 525, 0, 0, 546, 526, 32, 433, 443,
	427, 420, 85, 80, 684, 66, 0, 66, 0, 1011,
	0, 1233, 1236, 468, 0, 465, 0, 0, 0, 0,
	651, 487, -2, 0, -2, 838, 896, 860, 860, 849,
	860, 860, 718, 0, 666, 657, 0, 670, 671, 0,
	286, 287, 0, 290, 296, 0, 724, 725, 826, 827,
	726, 0, 539, 539, -2, 400, 405, 0, 352, 489,
	223, 224, 577, 0, 570, 610, 607, 0, 0, 0,
	0, 536, 538, 432, 34, 60, 0, 733, 0, 33,
	1003, 1050, 470, 467, 0, 461, 463, 74, 0, 0,
	740, -2, 780, 1245, 1245, 0, 1245, 1245, 1245, 1245,
	0, 0, 1245, 1245, 1245, 1245, 1245, 1245, 1245, 1245,
	1245, 1245, 1245, 1245, 1245, 1245, 0, 835, 862, -2,
	874, 876, 0, 0, 879, 880, 0, 0, 0, 0,
	917, 886, 0, 0, 890, 0, 1161, 1162, 0, 894,
	0, 852, 861, 0, 861, 0, 0, 860, 0, 0,
	0, 283, 288, 0, 291, 292, 0, 706, 1224, 0,
	730, 66, 494, 401, 220, 0, 0, 611, 613, 608,
	609, 587, 0, 591, 0, 57, 62, 67, 68, 0,
	0, 0, 0, 0, 459, 0, 65, 0, 0, 0,
	729, 0, 727, 782, 0, 0, 1245, 1245, 0, 0,
	0, 0, 1245, 1245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 875,
	877, 878, 881, 882, 883, 922, 923, 924, 884, 919,
	920, 921, 885, 0, 0, 0, 1159, 1160, 915, 0,
	0, 0, 0, 0, 0, 0, 846, 659, 0, 661,
	289, 699, 0, 500, 0, 731, 489, 578, 602, 0,
	0, 0, 0, 0, 44, 0, 64, 0, 69, 0,
	0, 0, 0, 0, 0, 0, 0, 652, 776, 781,
	783, 784, 0, 0, 787, 788, 789, 790, 0, 0,
	793, 794, 795, 796, 797, 798, 799, 800, 801, 802,
	818, 819, 820, 821, 822, 823, 803, 804, 805, 806,
	807, 808, 815, 0, 0, 812, 0, 0, 0, 1064,
	910, 0, 0, 853, 855, 856, 857, 858, 859, 854,
	0, 0, 0, 0, 845, 847, 891, 0, 660, 698,
	707, 708, 500, 399, 612, 614, 588, 589, 592, 593,
	35, 0, 0, 61, 0, 70, 0, 72, 73, 0,
	0, 472, 462, 642, 650, 764, 0, 0, 770, 0,
	777, 785, 786, 791, 792, 809, 0, 0, 811, 0,
	0, 918, 0, 889, 898, 911, 0, 0, 699, 699,
	699, 699, 0, 892, 700, 1245, 0, 0, 704, 705,
	709, 737, 0, 45, 0, 47, 49, 50, 863, 58,
	59, 63, 71, 734, 0, 471, 0, 742, 0, 0,
	0, 0, 0, 774, 0, 816, 817, 810, 813, 814,
	887, 897, 899, 900, 0, 912, 913, 914, 916, 840,
	841, 842, 843, 0, 0, 702, 0, 36, 37, 0,
	46, 0, 0, 0, 473, 744, 0, 765, 0, 0,
	0, 0, 0, 0, 0, 888, 901, 0, 902, 0,
	0, 0, 844, 701, 703, 0, 0, 48, 864, 0,
	741, 0, 776, 766, 0, 768, 0, 0, 0, 0,
	903, 905, 906, 0, 0, 904, 38, 39, 40, 0,
	0, 0, 746, 0, 762, 767, 769, 771, 0, 775,
	773, 907, 909, 908, 865, 735, 0, 745, 0, 758,
	743, 0, 772, 0, 747, -2, 0, 763, 0, 748,
	-2, 0, 756, 0, 0, 0, 749, 757, 0, 752,
	0, 0, 0, 736, 751, 0, -2, 759, 0, 0,
	753, -2, 0, 761, 760,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 95, 3, 3, 3, 124, 116, 3,
	67, 68, 121, 119, 134, 120, 133, 122, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 512,
	104, 103, 105, 3, 513, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 126, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 514, 115, 515, 127,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 96, 97, 98, 99, 100, 101, 102, 106, 107,
	108, 109, 110, 111, 112, 113, 114, 117, 118, 123,
	125, 128, 129, 130, 131, 132, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:597
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:603
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:636
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 30:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:640
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 31:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:647
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				OutFile:     yyDollar[5].str,
				MaxFileSize: int64(yyDollar[6].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 32:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:655
		{
			yyLOCAL = &tree.MoDump{
				Database:    tree.Identifier(yyDollar[3].str),
				Tables:      yyDollar[5].tableNamesUnion(),
				OutFile:     yyDollar[7].str,
				MaxFileSize: int64(yyDollar[8].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:668
		{
			yyLOCAL = &tree.Import{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Import).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:680
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:691
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:695
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:701
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:705
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:711
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:718
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:727
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:731
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:735
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:740
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:744
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:748
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:754
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:763
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:774
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:778
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:784
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:788
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:794
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:798
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:804
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:828
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:847
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:851
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:855
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:860
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:864
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:872
		{
			yyVAL.str = ""
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:876
		{
			yyVAL.str = yyDollar[3].str
		}
	case 64:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:881
		{
			yyVAL.str = "\n"
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:885
		{
			yyVAL.str = yyDollar[3].str
		}
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:890
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:894
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:918
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:922
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:928
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:934
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:952
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:969
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:992
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:996
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1000
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1005
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1009
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1015
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1028
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1039
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1052
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1056
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1066
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1079
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1092
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1098
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1104
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1111
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].str,
				TabName: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1119
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1128
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1132
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1136
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1140
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1144
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1148
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1155
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1159
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1165
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1172
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1181
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1185
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1191
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1195
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1199
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1203
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1207
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1211
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1215
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1219
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1223
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1227
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1231
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1235
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1239
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1243
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1247
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1251
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1255
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1259
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1263
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1267
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1271
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1275
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1279
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1283
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1287
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1291
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1295
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1299
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1303
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1307
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1311
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1315
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1319
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1323
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1327
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1331
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1335
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1339
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1343
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1347
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1351
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1355
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1359
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1363
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1367
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1371
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1375
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1379
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1383
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1387
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1399
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1406
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1413
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1422
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1452
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1456
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1460
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1466
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1472
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1476
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:1483
		{
			yyVAL.str = yyDollar[3].str
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1489
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:1493
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1499
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1507
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1516
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1524
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1532
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1555
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1578
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1585
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1592
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     yyDollar[1].str,
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1600
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1607
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:1614
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  yyDollar[1].str,
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1623
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1627
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:1631
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1637
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1641
		{
			yyVAL.str = yyDollar[1].str
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1648
		{
			yyVAL.str = yyDollar[1].str + "." + yyDollar[3].str
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1654
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:1658
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1669
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1675
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1680
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1684
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1688
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1692
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1696
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1700
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1704
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1708
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:1712
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1718
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1722
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1726
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1730
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1735
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1740
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1746
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1753
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1759
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1766
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1773
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1783
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1790
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1801
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1812
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1816
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1822
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1834
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1840
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1844
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1850
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1854
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1860
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1870
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1876
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1880
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1884
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1888
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1892
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1896
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1904
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1912
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1922
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1960
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:1964
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:1970
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1976
		{
			yyVAL.str = yyDollar[1].str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1981
		{
			yyVAL.str = "true"
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1982
		{
			yyVAL.str = "false"
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:1983
		{
			yyVAL.str = yyDollar[1].str
		}
	case 269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1988
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1999
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2011
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2022
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2026
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2031
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2035
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2040
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2044
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2060
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2064
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2068
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2072
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2076
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2080
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2084
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2088
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2092
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2096
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2100
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2104
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2108
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2112
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2116
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2120
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2126
		{
			yyVAL.item = nil
		}
	case 297:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2131
		{
			yyVAL.item = nil
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2156
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2161
		{
			yyLOCAL = &tree.ShowGrants{}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2165
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2170
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:2174
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2180
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2185
		{
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2189
		{
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2194
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2203
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2207
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2211
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2215
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2219
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProcedureStatus}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2223
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2227
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2231
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2235
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2241
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2249
		{
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2251
		{
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2260
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2270
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2279
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2283
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2287
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2293
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2299
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2305
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2311
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2321
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2333
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2337
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2343
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2355
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2368
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:2372
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2377
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2381
		{
			yyVAL.str = yyDollar[2].str
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2387
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2400
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2404
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2410
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2415
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2419
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2425
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2429
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2438
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2442
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:2446
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].str, yyDollar[3].str, yyDollar[1].str})
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2452
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2456
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2475
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2484
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2493
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:2497
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:2503
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2512
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2521
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].str),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2531
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2537
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2543
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].str), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2549
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2557
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2562
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2569
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2585
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2598
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2609
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:2613
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2619
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:2624
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2631
		{
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:2633
		{
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2636
		{
		}
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2645
		{
		}
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2649
		{
		}
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2654
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2663
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2670
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2676
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2684
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2691
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:2698
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2718
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateListUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2728
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2735
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2741
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2749
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2756
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:2763
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2782
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UpdateList
//line mysql_sql.y:2786
		{
			if yyDollar[5].assignmentsUnion() == nil {
				yylex.Error("the ON DUPLICATE KEY UPDATE list can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[5].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.UpdateList{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2805
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2809
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:2813
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:2819
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2828
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2832
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2838
		{
			yyVAL.str = yyDollar[1].str
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2842
		{
			yyVAL.str = yyDollar[3].str
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2848
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:2852
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2858
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2863
		{
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2867
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2874
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:2878
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2885
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2890
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2894
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2900
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:2904
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2910
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:2914
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2919
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:2923
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2936
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2943
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2950
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:2968
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2987
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:2993
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3000
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3004
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3017
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:3021
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3026
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3030
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3037
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3042
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3049
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3055
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3059
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3063
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3067
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3071
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:3075
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3081
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:3088
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3097
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:3101
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:3107
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].str), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3115
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3119
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3124
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3128
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3134
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3138
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:3142
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3147
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3151
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3157
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3163
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:3167
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:3173
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3178
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3182
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:3186
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3191
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3195
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:3199
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3205
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3209
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3215
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3219
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3229
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3239
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3249
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3261
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3269
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3277
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3286
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3294
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3302
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3310
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3318
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3326
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3334
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3342
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:3350
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3360
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:3371
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3389
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3393
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3397
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3406
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3410
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3415
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:3419
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3424
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:3428
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3434
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:3438
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3444
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3448
		{
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: tree.UnrestrictedIdentifier(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3452
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:3456
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].str, yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3461
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3469
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:3475
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3483
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3491
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3501
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3507
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3516
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3525
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:3534
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3544
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3548
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3558
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3562
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3566
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3570
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3576
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3586
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3590
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3596
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3602
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3606
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3612
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3618
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3622
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3626
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3632
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3636
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3642
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:3646
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3652
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3656
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3662
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3666
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[3].str),
					Cols:  yyDollar[4].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3676
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3689
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:3695
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3701
		{
			a1 := yyDollar[3].str
			a2 := "$"
			a3 := false
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3719
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3740
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := true
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "true", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3761
		{
			a1 := yyDollar[3].str
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := tree.NewNumValWithType(constant.MakeString(a1), a1, false, tree.P_char)
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3782
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			a3 := false
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3800
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "false", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3821
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := true
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "true", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3842
		{
			a1 := yyDollar[3].unresolvedNameUnion()
			a2 := "$"
			if len(yyDollar[5].str) > 0 {
				a2 = yyDollar[5].str
			}
			a3 := false
			e1 := a1
			e2 := tree.NewNumValWithType(constant.MakeString(a2), a2, false, tree.P_char)
			e3 := tree.NewNumValWithType(constant.MakeBool(a3), "true", false, tree.P_bool)
			exprs := tree.Exprs{e1, e2, e3}
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: exprs,
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3863
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3876
		{
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3877
		{
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:3881
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3892
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3899
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:3903
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:3909
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3919
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3923
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:3927
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3932
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3936
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3940
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:3944
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3949
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3953
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3957
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3961
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:3965
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3970
		{
			yyVAL.str = ""
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3974
		{
			yyVAL.str = yyDollar[1].str
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3978
		{
			yyVAL.str = yyDollar[2].str
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3987
		{
			yyVAL.str = ""
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3991
		{
			yyVAL.str = yyDollar[1].str
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3995
		{
			yyVAL.str = yyDollar[2].str
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3999
		{
			yyVAL.str = yyDollar[1].str
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4003
		{
			yyVAL.str = yyDollar[2].str
		}
	case 642:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4038
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].columnTypeUnion(),
				Body:       yyDollar[10].str,
				Language:   yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:4050
		{
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].str))
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4055
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4062
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:4066
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:4072
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:4078
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[2].unresolvedNameUnion(), yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4084
		{
			yyVAL.str = yyDollar[1].str
		}
	case 651:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4091
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4101
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[8].tableNameUnion(),
				ColNames:    yyDollar[9].identifierListUnion(),
				AsSource:    yyDollar[11].selectUnion(),
				Temporary:   yyDollar[2].boolValUnion(),
				IfNotExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4112
		{
		}
	case 655:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4117
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4129
		{
			yyVAL.str = yyDollar[1].str
		}
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:4135
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4145
		{
			yyVAL.str = yyDollar[1].str
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4151
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4158
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:4164
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4172
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4178
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:4185
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4193
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:4199
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4208
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4220
		{
			yyVAL.str = yyDollar[1].str
		}
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4225
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4231
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:4239
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4345
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4349
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4355
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4365
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:4369
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:4375
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4385
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4389
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:4393
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4398
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4402
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4408
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4415
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:4421
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4434
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4443
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:4447
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:4453
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4470
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4474
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4478
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:4482
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4488
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].str),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4507
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4511
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4533
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4537
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4541
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4545
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:4549
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4555
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:4559
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4565
		{
			// Order is parsed but just ignored as MySQL did.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:4570
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4575
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4579
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4583
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4587
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:4591
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4597
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:   yyDollar[3].ifNotExistsUnion(),
				Name:          tree.Identifier(yyDollar[4].str),
				CreateOptions: yyDollar[5].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4611
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4615
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4620
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4624
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4630
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:4634
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4640
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4644
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:4648
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4653
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4657
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4663
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4674
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4685
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4692
		{
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[2].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4700
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s'", yyDollar[3].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4712
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' ", yyDollar[3].str, yyDollar[7].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
				Format:       tree.CSV,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4724
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "format" || strings.ToLower(yyDollar[11].str) != "jsondata" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' or '%s'", yyDollar[3].str, yyDollar[7].str, yyDollar[11].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: tree.AUTO,
				Format:       strings.ToLower(yyDollar[9].str),
				JsonData:     strings.ToLower(yyDollar[13].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-18 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:4737
		{
			if strings.ToLower(yyDollar[3].str) != "filepath" || strings.ToLower(yyDollar[7].str) != "compression" || strings.ToLower(yyDollar[11].str) != "format" || strings.ToLower(yyDollar[15].str) != "jsondata" {
				yylex.Error(fmt.Sprintf("can not recognize the '%s' or '%s' or '%s' or '%s'", yyDollar[3].str, yyDollar[7].str, yyDollar[11].str, yyDollar[15].str))
				return 1
			}
			yyLOCAL = &tree.ExternParam{
				Filepath:     yyDollar[5].str,
				CompressType: yyDollar[9].str,
				Format:       strings.ToLower(yyDollar[13].str),
				JsonData:     strings.ToLower(yyDollar[17].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:4752
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4763
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4767
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4772
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:4776
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4786
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4790
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4799
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4803
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4809
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:4813
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4819
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:4828
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].str),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4838
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4842
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4848
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:4852
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4858
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:4865
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].str),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4874
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:4878
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4883
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4887
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4892
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:4896
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4901
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4905
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4915
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4919
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4930
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4938
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4946
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4954
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4965
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4974
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:4984
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4994
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4998
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5003
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5007
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5012
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5016
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5022
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5026
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:5030
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5036
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5040
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5044
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5048
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5052
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5056
		{
			yyLOCAL = tree.NewTableOptionComment(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5060
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5064
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5068
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5072
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5076
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5080
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5084
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5088
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5092
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5096
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5100
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5104
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5108
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5112
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5116
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5120
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5124
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5128
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5132
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5136
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5140
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].str, yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5144
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:5148
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5155
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:5159
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:5165
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5170
		{
			yyVAL.str = ""
		}
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5174
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5178
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5184
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5188
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5192
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5196
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5200
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:5204
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5218
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:5222
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5231
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:5236
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].str), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].str), prefix)
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5242
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5249
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:5253
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5259
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5263
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5269
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.Name = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5279
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5285
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5294
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5303
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5326
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5335
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:5345
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5353
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5359
		{
			yyVAL.str = ""
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5363
		{
			yyVAL.str = yyDollar[1].str
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5373
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5379
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5385
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5399
		{
			yyVAL.str = ""
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:5406
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5412
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5416
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5420
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5431
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5435
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:5439
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].str, yyDollar[3].str, yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5444
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5448
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5454
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:5458
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5464
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5468
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5472
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5476
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5480
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5484
		{
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5488
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5492
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5496
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5500
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5504
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5508
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5512
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5516
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:5529
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5535
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5539
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5544
		{
			yyVAL.str = ""
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5548
		{
			yyVAL.str = yyDollar[1].str
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5554
		{
			yyVAL.str = ""
		}
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5558
		{
			yyVAL.str = yyDollar[2].str
		}
	case 897:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:5564
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5576
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5583
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5590
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5597
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:5604
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5613
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5619
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5625
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5629
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5633
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5637
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:5641
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5646
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5653
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5657
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:5661
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5666
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5670
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5675
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:5679
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:5695
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5701
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5705
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5709
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5713
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5717
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5721
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5725
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5729
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5733
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5737
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5741
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5745
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5749
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5755
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5759
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5763
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5767
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5771
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5775
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5779
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5783
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5787
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5791
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5795
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5799
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5804
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5812
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5816
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5820
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5829
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5833
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5837
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5841
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5845
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5850
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5854
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5859
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:5863
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5869
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:5873
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:5879
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5889
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5906
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5923
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5936
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5949
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5961
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5975
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Precision:          yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:5990
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Precision:          yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6005
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6022
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6037
		{
		}
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6043
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6052
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6060
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6068
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6077
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6086
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6095
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[4].exprsUnion(),
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6104
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{es},
			}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6113
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6122
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6131
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6140
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6149
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6158
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6167
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6183
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6191
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6199
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6207
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6215
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			timeUinit := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6224
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6232
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6241
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6250
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6258
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6266
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6275
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6284
		{
			column := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6295
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			a1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			a2 := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{a1, a2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6316
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6352
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6364
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6376
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg1 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6386
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6394
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6401
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6408
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6420
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6428
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6439
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6448
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6457
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6465
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6475
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6483
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:6491
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6501
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6505
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6511
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6515
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6534
		{
		}
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6536
		{
		}
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6577
		{
			name := tree.SetUnresolvedName("interval")
			arg2 := tree.NewNumValWithType(constant.MakeString(yyDollar[3].str), yyDollar[3].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6587
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6591
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:6595
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:6601
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6606
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6610
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6616
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:6620
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6627
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6631
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6635
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6643
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6647
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6651
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6655
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6661
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6665
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6669
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6673
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6677
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6681
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6685
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6689
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6693
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6697
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6705
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6709
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6713
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6717
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6721
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6725
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6729
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6733
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6739
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6743
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6749
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6753
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6760
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6764
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6768
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6774
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6778
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6782
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6786
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6790
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6794
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:6798
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6804
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6808
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6812
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:6816
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6822
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6826
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6839
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6844
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6848
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6852
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6856
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6860
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6864
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:6878
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6884
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6895
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6900
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6906
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6918
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6930
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6942
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6955
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6968
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6981
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6994
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7007
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7020
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7033
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7046
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7059
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7072
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7087
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7110
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7144
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Precision != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Precision > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7192
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Precision:    yyDollar[2].lengthScaleOptUnion().Precision,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7209
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7221
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7241
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7261
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Precision:          yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7281
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7297
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7310
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7323
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7336
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7349
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7361
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7373
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7385
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7397
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7409
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7421
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7433
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7445
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7457
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7470
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7483
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7498
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7506
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:7515
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7525
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7548
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7553
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7559
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7566
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7570
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7575
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7579
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:7585
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7591
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7598
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7605
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7614
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 34, // this is the default precision for decimal
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7621
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:7628
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Precision:   int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7637
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7641
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7645
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7651
		{
		}
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7653
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7663
		{
			yyVAL.str = ""
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7667
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
